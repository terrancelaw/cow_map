{"version":3,"sources":["useDataState/loadMapData.js","config.js","useDataState/loadLinkData.js","useDataState/loadNodeData.js","useDataState/loadTimeSeriesData.js","useDataState/useDataState.js","useInterfaceState/updateDataSelectionPanes.js","useInterfaceState/updateVisualizationPane.js","useInterfaceState/updateTimelineSlider.js","useInterfaceState/updateDetailPane.js","useInterfaceState/updateColorPane.js","useInterfaceState/updateFilterPane.js","useInterfaceState/useInterfaceState.js","DataSelectionPanes/DataSelectionPaneItem.js","DataSelectionPanes/DataSelectionPane.js","DataSelectionPanes/DataSelectionPanes.js","VisualizationPane/useVisualizationPane/useProjection.js","VisualizationPane/VisualizationPaneLegend/VisualizationPaneLegend.js","VisualizationPane/VisualizationPaneControls/VisualizationPaneControls.js","VisualizationPane/VisualizationPaneDefs/VisualizationPaneDefs.js","VisualizationPane/VisualizationPaneMap/VisualizationPaneMap.js","VisualizationPane/VisualizationPaneLinks/pathGenerator.js","VisualizationPane/VisualizationPaneLinks/VisualizationPaneLink.js","VisualizationPane/VisualizationPaneLinks/VisualizationPaneLinks.js","VisualizationPane/VisualizationPaneLabels/VisualizationPaneLabel.js","VisualizationPane/VisualizationPaneLabels/VisualizationPaneLabels.js","VisualizationPane/TimelineSlider/TimelineSliderValueLabel.js","VisualizationPane/TimelineSlider/TimelineSlider.js","widgets/Loader/Loader.js","VisualizationPane/VisualizationPane.js","DetailPane/DetailPaneHeader/DetailPaneHeaderMainOption.js","DetailPane/DetailPaneHeader/DetailPaneHeaderSubOptions.js","DetailPane/DetailPaneHeader/DetailPaneHeader.js","DetailPane/DetailPaneContent/SparkLine.js","DetailPane/DetailPaneContent/generateEntryList.js","DetailPane/DetailPaneContent/DetailPaneContentItem.js","DetailPane/DetailPaneContent/Bar.js","DetailPane/DetailPaneContent/DetailPaneContent.js","DetailPane/DetailPane.js","widgets/DarkDropDown/DarkDropDown.js","ColorPane/ColorPaneList.js","ColorPane/ColorPane.js","FilterPane/FilterPaneAttributeValue/FilterPaneCategoryList.js","FilterPane/FilterPaneAttributeValue/FilterPaneRangeFilterValueLabel.js","FilterPane/FilterPaneAttributeValue/FilterPaneRangeFilter.js","FilterPane/FilterPaneAttributeValue/FilterPaneAttributeValue.js","FilterPane/FilterPaneFilterList/FilterPaneFilterList.js","FilterPane/FilterPane.js","SearchWindow/SearchWindowHeader/SearchWindowHeader.js","SearchWindow/SearchWindowContent/LineChart.js","SearchWindow/SearchWindowContent/TimeSeriesSection.js","widgets/DataTable/useClusterize.js","widgets/DataTable/DataTable.js","SearchWindow/SearchWindowContent/DataTableSection.js","SearchWindow/SearchWindowContent/SearchWindowContent.js","SearchWindow/useSearchState/updateSearchWindowHeader.js","SearchWindow/useSearchState/updateSearchWindowContent.js","SearchWindow/useSearchState/useSearchState.js","SearchWindow/SearchWindow.js","widgets/LinkDescription/LinkDescription.js","widgets/Tooltip/Tooltip.js","widgets/Tooltip/useTooltip.js","widgets/PopUpWindow/PopUpWindow.js","widgets/ColorPicker/ColorPicker.js","Reference/Reference.js","App.js","reportWebVitals.js","index.js"],"names":["url","process","loadMapData","dispatch","json","then","countryData","countries","land","oldLandGeometriesArcs","geometries","arcs","newLandGeometriesArcs","arcArrList","newArcArrList","indexList","newIndexList","index","push","length","filter","d","id","removeAntarctica","objects","type","data","landData","feature","interiorData","mesh","a","b","timelineSliderOptions","displayName","startYearAttrType","endYearAttrType","requirementList","rangeDependencyList","key","filterYearAttrType","config","links","linkType","fileName","isDirected","isWeighted","startYear","signYear","EIFYear","endYear","defaultColorAttrName","tooltip","attributeList","attributeName","isID","dataTable","colorPane","isCategorical","filterPane","eventName","timeSeries","isBilateral","metricName","loadLinkData","linkDataList","promiseList","linkConfig","promise","csv","createPromiseList","Promise","all","dataList","i","metadata","getCountryIDToData","nodeList","countryIDToData","countryRow","ID","parseData","row","latitude","longitude","year","value","generateMetadata","timeSeriesList","oldMetadata","yearSet","Set","add","yearList","sort","generateIDToTimeSeriesList","IDToTimeSeriesList","sourceTargetID","node1","node2","nodeID","loadTimeSeriesData","timeSeriesDataList","timeSeriesConfig","checkIfIsLoading","initialState","isLoading","reducer","prevState","action","Error","useDataState","useReducer","dataState","useEffect","loadNodeData","getShownSourceIDSet","linkTypeList","shownSourceIDSet","linkRowList","getShownTargetIDSet","shownTargetIDSet","generateYearAttribute","linkMetadata","yearAttributeType","yearAttributeName","min","Infinity","max","linkRowObject","Math","extractYearRange","findAverage","sum","count","attributeValue","processColorAttributeList","linkIDToLinkRowList","targetID","linkID","attribute","averageMin","averageMax","linkRowListForCurrLink","average","initNodePaneList","sourceOrTarget","nodePaneList","shownNodeSet","countryRowObject","countryID","countryName","name","isShown","has","isSelected","initSourcePaneList","initTargetPaneList","toggleItemList","prevItemList","itemKey","map","itemObject","selectItemList","updateNodePaneList","prevNodePaneList","newNodePaneList","nodeObject","isPrevShown","isCurrShown","isCurrSelected","updateSourcePaneList","updateTargetPaneList","generateChildLinkDataList","parentLinkDataObject","segmentAttribute","generateDisplayName","category","categorySet","generateCategorySet","categoryToLinkRowList","generateCategoryToLinkRowList","childLinkDataList","parentKey","segmentKey","replace","toLowerCase","isSegment","updateLinkTypeList","linkPaneList","appliedColoringList","appliedFilterList","prevLinkTypeToColor","segmentedLinkPaneList","newLinkTypeToColor","currColorList","linkDataObject","forEach","color","foundColor","schemeTableau10","indexOf","randomIndex","floor","random","colorLinkPaneList","filteredLinkPaneList","matchedColoringList","listItem","dataSet","needToSegment","matchedColoring","childLinkDataObject","segmentLinkPaneList","filterAttributeName","filterAttributeIsCategorical","matchedLinkDataList","filteredLinkRowList","matchedLinkDataObject","selectedCategoryList","attributeValueList","selectedCategorySet","lowerBound","upperBound","filterLinkPaneList","filterLinkByTime","timelineSliderState","timelineSliderType","yearAttribute","timelineValue","startYearAttr","endYearAttr","startYearValue","endYearValue","timelineRange","filterYearAttr","yearValue","getSelectedNodeSet","filteredIDList","updateLinkList","sourcePaneList","targetPaneList","linkList","linkTypeToMetadata","generateLinkTypeToMetadata","selectedSourceIDSet","selectedTargetIDSet","sourceID","sourceSelected","targetSelected","satisfiesTimelineSliderCriteria","selectionCriteria1","selectionCriteria2","generateLinkIDToLinkRowList","split","linkOpacity","thinLineOpacity","prevLinkList","linkTypeToLinkList","opacityScale","scaleLinear","range","numericalAttrColoringList","linkObject","linkListForCurrLinkType","domain","opacity","changeLinkOpacity","updateTimelineSliderState","defaultYearAttribute","yearAttributeList","currTimelineSliderOption","requiredAttrList","hasAllRequiredAttr","requiredAttrName","hasCurrRequiredAttr","generateYearAttributeList","currentYear","Date","getFullYear","generateTimelineSliderMin","selectedYearAttr","dependentAttrList","dependentAttrName","generateTimelineSliderMax","checkIsDirected","checkIsWeighted","checkIsNetworkMetric","option","generateSubOption1List","mainOption","generateSubOption2List","updateDetailPaneState","prevDetailPaneState","optionList","prevOption","detailPaneIsOpen","isOpen","prevMainOption","prevSubOption1","subOption1","prevSubOption2","subOption2","newMainOptionList","mainOptionList","generateMainOptionList","newMainOption","newSubOption1List","newSubOption1","generateSubOption1","newSubOption2List","subOption1List","isNetworkMetric","foundPrevOptionInList","generateSubOption2","subOption2List","generateColorPaneAttribute","dataSetIndex","attributeIndex","generateFilterPaneAttributeValueList","matchedFilterList","categoryList","generateFilterPaneAttributeValue","updateAppliedFilterList","prevAppliedFilterList","newItem","filteredAppliedFilterList","needToAddNewFilter","linkPane","list","sourcePane","targetPane","visualizationPane","linkTypeToColor","colorPicker","linkKey","currColor","colorTop","colorLeft","colorWidth","colorHeight","timelineSlider","detailPane","dataSetList","searchWindow","reference","hover","object","focus","newLinkPaneList","initLinkPaneList","newColorPaneState","newDataSetList","newDataSet","newAttributeList","newAppliedColoringList","initColorPaneState","newFilterPaneState","isSubItem","initFilterPaneState","newLinkTypeList","newSourcePaneList","newTargetPaneList","newTimelineSliderState","newLinkList","newDetailPaneState","prevLinkPaneList","prevSourcePaneList","prevTargetPaneList","prevAppliedColoringList","sourceKey","prevLinkTypeList","prevTimelineSliderState","targetKey","textEl","getBoundingClientRect","top","height","left","text","innerText","tooltipAttrList","dataTableAttrList","colorEl","width","newColor","updateLinkTypeListColor","buttonEl","isDark","buttonBBox","prevIsOpen","prevColorPaneState","prevFilterPaneState","newSubOption2","itemEl","titleEl","titleText","itemData","hoverStateObject","hoverStateData","showTooltip","clientWidth","clientHeight","scrollWidth","scrollHeight","checkIsOverflown","itemBBox","right","entryList","isSelectedNetworkMetric","focusStateObject","focusStateData","headerText","prevDataSet","newAttribute","prevAttribute","filteredAppliedColoringList","updateAppliedColoringList","selectedAppliedColoringListItem","prevAttributeList","newAttributeValueList","newAttributeValue","prevAttributeValueList","newAppliedFilterList","selectedFilter","DataSelectionPaneItem","handleSelect","handleMouseEnter","handleMouseLeave","className","onMouseEnter","onMouseLeave","checked","onChange","DataSelectionPane","headerIcon","itemList","handleSelectItem","handleClickSelectNone","handleClickSelectAll","handleMouseEnterItem","handleMouseLeaveItem","onClick","DataSelectionPanes","memo","handleSelectLinks","handleSelectSources","handleSelectTargets","event","$","target","closest","find","margin","VisualizationPaneLegend","e","handleClickColor","style","background","VisualizationPaneControls","SVGRef","projectionState","colorPaneIsOpen","filterPaneIsOpen","handleMouseEnterButton","attr","hasClass","handleMouseLeaveButton","handleClickDetailPaneBtn","handleClickColorPaneBtn","handleClickFilterPaneBtn","tooltip-text","zoomHandler","SVGEl","current","SVG","select","transition","duration","scaleBy","projection","geoNaturalEarth1","fitExtent","initialScale","scale","initialTranslate","translate","scaleExtent","call","transform","zoomIdentity","prevProps","nextProps","prevSVGRef","prevLandData","prevZoomHandler","prevDetailPaneIsOpen","prevColorPaneIsOpen","prevFilterPaneIsOpen","nextSVGRef","nextLandData","nextZoomHandler","nextDetailPaneIsOpen","nextColorPaneIsOpen","nextFilterPaneIsOpen","VisualizationPaneDefs","refX","refY","markerWidth","markerHeight","markerUnits","orient","fill","VisualizationPaneMap","path","features","findAngle","x","y","xAdjusted","yAdjusted","atan","PI","directedLink","targetRadius","selfLoopRadius","selfLoopRadiusIncrement","arcDivisor","arcRadiusIncrement","generatePathData","sourcePoint","targetPoint","this","generateSelfLoop","generateArc","self","radiusIncrement","distance","x1","y1","x2","y2","sqrt","findDistance","radius","centre","r","xa","ya","x0","y0","findCentre","r0","c","r1","D","rDiff","DD","findCircleCircleIntersection","intersection1","intersection2","sourceAngle","targetAngle","intersection1Angle","intersection1BtwSourceAndTarget","newTargetPoint","cos","sin","undirectedLink","distanceIncrement","generateStraightLine","generateCurve","pathGenerator","line","curve","curveNatural","middlePoint","findMiddlePoint","sameX","sameY","unitVector","s","xu","yu","findUnitVector","findSlope","point","VisualizationPaneLink","isHighlighted","hoveredNodesOrLinks","markerEnd","pathData","onMouseMove","clientY","clientX","stroke","checkIfIsHighlighted","hoverState","generateMarkerEnd","sourceTargetIDToLinkRowList","sameSourceAndTarget","directed","undirected","addSourceTargetIndex","VisualizationPaneLinks","updatedLinkList","VisualizationPaneLabel","VisualizationPaneLabels","nodeIDSet","highlightedNodeIDSet","generateNodeList","TimelineSliderValueLabel","children","labelClassName","labelStyle","fontSize","fontWeight","fontFamily","marginBottom","disabled","props","MySlider","withStyles","root","display","alignItems","position","pointerEvents","rail","backgroundColor","track","mark","borderRadius","markLabel","thumb","marginTop","marginLeft","boxShadow","Slider","MyInput","Input","MySelect","paddingRight","icon","Select","MyMenuItem","MenuItem","useStyles","makeStyles","paper","TimelineSlider","classes","step","valueLabelDisplay","ValueLabelComponent","marks","label","input","disableUnderline","MenuProps","Loader","VisualizationPane","colorPaneState","filterPaneState","useRef","useState","setProjection","geoPath","zoom","on","newScale","k","newTranslate","prevProjectionState","useProjection","isVisPaneExpanded","ref","borderBottom","underline","DetailPaneHeaderMainOption","padding","DetailPaneHeaderSubOptions","handleSelectSubOption","DetailPaneHeader","SparkLine","startX","endX","startY","endY","dx","findMaxSetSize","nodeIDToSet","maxSetSize","size","findMaxMetricValue","graph","metricFunction","maxMetricValue","nodes","node","metricValue","generateNodeIDSet","generateLinkIDSet","linkIDSet","newSourceID","newTargetID","generateLinkIDToWeight","isWeightDistance","linkIDToStatistics","linkIDToWeight","weightSum","weightCount","weight","generateCytoscapeGraph","cytoscape","source","setYScaleDomain","yScale","extent","generateTimeSeriesEntryList","filteredIDToTimeSeriesList","IDSet","filterIDToTimeSeriesList","sourceTargetIDSet","generateSourceTargetSet","xScale","curveBasis","percentFormatter","format","startValue","endValue","percentChange","abs","contentText","sourceName","targetName","generateDegreeEntryList","nodeIDToConectedNodeIDSet","generateNodeIDToConnectedNodeIDSet","maxDegree","widthScale","nodeName","degree","generateInDegreeEntryList","nodeIDToSourceIDSet","generateNodeIDToSourceIDSet","maxInDegree","inDegree","generateOutDegreeEntryList","nodeIDToTargetIDSet","generateNodeIDToTargetIDSet","maxOutDegree","outDegree","generateEigenvectorEntryList","linkListForGraph","networkjs","datastructures","Graph","add_weighted_edges_from","add_edges_from","generateNetworkJSGraph","nodeIDToEigenvector","algorithms","centrality","eigenvector_centrality","maxEigenvector","eigenvector","findMaxEigenvector","contextText","round","Number","EPSILON","generateEntryList","closenessFunction","ccn","maxCloseness","closeness","generateClosenessEntryList","betweennessFunction","bc","maxBetweenness","betweennessNormalized","betweenness","generateBetweennessEntryList","pageRankFunction","pageRank","maxPageRank","rank","generatePageRankEntryList","DetailPaneContentItem","visualization","Bar","percent","DetailPaneContent","isSelectedTimeSeries","entryObject","generateKEntryList","topEntryList","bottomEntryList","timeSeriesClassName","DetailPane","detailPaneState","DarkDropDown","labelText","ColorPaneList","handleClickRemoveButton","ColorPane","FilterPaneCategoryList","FilterPaneRangeFilterValueLabel","border","FilterPaneRangeFilter","FilterPaneAttributeValue","FilterPaneFilterList","FilterPane","SearchWindowHeader","sourceState","targetState","searchDispatch","interfaceDispatch","sourceQuery","query","sourceList","sourceListTop","listTop","sourceListLeft","listLeft","targetQuery","targetList","targetListTop","targetListLeft","handleChangeSourceInput","inputEl","handleChangeTargetInput","handleClickCountryName","handleMouseEnterCountryName","handleMounseLeaveCountryName","autoComplete","spellCheck","onFocus","selected","bilateralLineChart","bottom","nonBilateralLineChart","LineChart","formattedPercentChange","verb","roundedStartValue","roundedEndValue","TimeSeriesSection","sectionHeaderText","lineChartList","filterYearList","filterStartYear","filterEndYear","handleChangeStartYear","handleChangeEndYear","lineChartObject","widthConstraintRules","generateWidthConstraintCSS","widthConstraintCSS","tableName","columnIndex","DataTable","tableRowList","clusterizeObject","initClusterizeObject","Clusterize","scrollId","contentId","resizable","handles","start","ui","element","css","stop","newWidthAfterResizing","html","update","useClusterize","onScroll","tableScrollLeft","scrollLeft","DataTableSection","tableHeaderText","filterAttrNameList","filterAttrValueList","filterAttrName","filterAttrValue","handleChangeAttrName","handleChangeAttrValue","generateSearchResultDescription","inferredSourceName","inferredTargetName","timeSeriesSearchResultList","linkSearchResultList","hasSearchQueries","hasSearchResults","toUpperCase","SearchWindowContent","contentState","handleChangeYear","searchResultKey","computeWordDistance","queryIsStart","wordDistance","levenshtein","searchCountryListByQuery","countryNameList","lowerCaseQuery","similarCountryList","lowerCaseCountryName","getCurrSelectionIndex","countryList","findMostSimilarCountry","sortedCountryList","generateTableRowList","rowString","generateTimeSeriesSearchResultList","timeSeriesDataObject","querySourceID","queryTargetID","currSourceID","currTargetID","filterRawLinkRowList","rawLinkRowList","currNode1ID","currNode2ID","hasSourceQuery","hasTargetQuery","sourceMatchedNode1","sourceMatchedNode2","targetMatchedNode1","targetMatchedNode2","generateFilterAttrValueList","attributeValueSet","content","inputBBox","countryObject","prevSelectionIndex","currSelectionIndex","COUNTRY_LIST_LENGTH","getPrevSelectionIndex","el","sourceInputIsFocused","targetInputIsFocused","sourceListIsShown","targetListIsShown","nextSelectionIndex","getNextSelectionIndex","sourceInputEl","targetInputEl","selectedCountryName","getSelectedCountryName","newTimeSeriesSearchResultList","prevTimeSeriesSearchResultList","timeSeriesSearchResultObject","prevLineChartList","newLineChartList","filteredTimeSeriesList","filterTimeSeriesSearchResult","newLinkSearchResultList","prevLinkSearchResultList","linkSearchResultObject","selectFilterAttrName","selectFilterAttrValue","useSearchState","interfaceState","memoizedReducer","useCallback","searchState","searchWindowIsOpen","searchWindowIsLoading","off","clickedOnTargets","document","activeElement","blur","generateLinkSearchResultList","setTimeout","SearchWindow","LinkDescription","linkRowCount","plural","Tooltip","tooltipRef","tooltipTop","tooltipLeft","setTooltipTopLeft","tooltipEl","tooltipWidth","tooltipHeight","window","windowWidth","innerWidth","windowHeight","innerHeight","useTooltip","attributeValuePairList","generateAttributeValuePairList","attributeObject","PopUpWindow","focusState","handleClickCloseButton","attribure","ColorPicker","colorPickerState","Reference","referenceIsOpen","App","dataIsLoading","useInterfaceState","interfaceIsLoading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28f68a7f.chunk.js","sourcesContent":["import { feature, mesh } from 'topojson-client';\nimport { json } from 'd3';\n\nconst url = `${ process.env.PUBLIC_URL }/data/map/countries-110m.json`;\n\nconst removeAntarctica = ({ countries, land }) => {\n\tconst oldLandGeometriesArcs = land.geometries[0].arcs;\n\tconst newLandGeometriesArcs = [];\n\n\tfor (let arcArrList of oldLandGeometriesArcs) {\n\t\tconst newArcArrList = [];\n\n\t\tfor (let indexList of arcArrList) {\n\t\t\tconst newIndexList = [];\n\n\t\t\tfor (let index of indexList)\n\t\t\t\tif (index < 562 || index > 569)\n\t\t\t\t\tnewIndexList.push(index);\n\t\t\tif (newIndexList.length > 0)\n\t\t\t\tnewArcArrList.push(newIndexList);\n\t\t}\n\t\tif (newArcArrList.length > 0)\n\t\t\tnewLandGeometriesArcs.push(newArcArrList);\n\t}\n\n\tcountries.geometries = countries.geometries.filter(d => d.id !== '010');\n\tland.geometries[0].arcs = newLandGeometriesArcs;\n\treturn { countries, land };\n};\n\nexport const loadMapData = dispatch => {\n\tjson(url).then(countryData => {\n\t\tconst { countries, land } = removeAntarctica(countryData.objects);\n\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: {\n\t\t\t\tlandData: feature(countryData, land),\n\t\t\t\tinteriorData: mesh(countryData, countries, (a, b) => a !== b)\n\t\t\t}\n\t\t});\n\t});\n};","export const timelineSliderOptions = {\n\t'is-signed': { // is curr value between signing and end\n\t\tdisplayName: 'Between Signing and End?',\n\t\ttype: 'point',\n\t\tstartYearAttrType: 'signYear',\n\t\tendYearAttrType: 'endYear',\n\t\trequirementList: [ 'signYear' ],\n\t\trangeDependencyList: [ 'signYear' ],\n\t\tkey: 'is-signed'\n\t},\n\t'is-start': { // is curr value between start and end\n\t\tdisplayName: 'Between Start and End?',\n\t\ttype: 'point',\n\t\tstartYearAttrType: 'startYear',\n\t\tendYearAttrType: 'endYear',\n\t\trequirementList: [ 'startYear' ],\n\t\trangeDependencyList: [ 'startYear' ],\n\t\tkey: 'is-start'\n\t},\n\t'is-in-force': { // is curr value between EIF and end\n\t\tdisplayName: 'Between EIF and End?',\n\t\ttype: 'point',\n\t\tstartYearAttrType: 'EIFYear',\n\t\tendYearAttrType: 'endYear',\n\t\trequirementList: [ 'EIFYear' ],\n\t\trangeDependencyList: [ 'EIFYear' ],\n\t\tkey: 'is-in-force'\n\t},\n\t'include-sign': { // does curr range include sign year\n\t\tdisplayName: 'Include Sign Year?',\n\t\ttype: 'range',\n\t\tfilterYearAttrType: 'signYear',\n\t\trequirementList: [ 'signYear' ],\n\t\trangeDependencyList: [ 'signYear' ],\n\t\tkey: 'include-sign'\n\t},\n\t'include-start': { // does curr range include start year\n\t\tdisplayName: 'Include Start Year?',\n\t\ttype: 'range',\n\t\tfilterYearAttrType: 'startYear',\n\t\trequirementList: [ 'startYear' ],\n\t\trangeDependencyList: [ 'startYear' ],\n\t\tkey: 'include-start'\n\t},\n\t'include-in-force': { // does curr range include start\n\t\tdisplayName: 'Include EIF Year?',\n\t\ttype: 'range',\n\t\tfilterYearAttrType: 'EIFYear',\n\t\trequirementList: [ 'EIFYear' ],\n\t\trangeDependencyList: [ 'EIFYear' ],\n\t\tkey: 'include-in-force'\n\t},\n\t'no-filter': {\n\t\tdisplayName: 'No Filtering',\n\t\ttype: 'no-filter',\n\t\tkey: 'no-filter'\n\t}\n};\n\nexport const config = {\n\tlinks: [\n\t\t{\n\t\t\tlinkType: 'wars', // 'should not use - for linkType'\n\t\t\tfileName: 'wars.csv',\n\t\t\tisDirected: true, \n\t\t\tisWeighted: false,\n\t\t\tdisplayName: 'Dyadic Interstate War',\n\t\t\tstartYear: 'startYear',\n\t\t\tsignYear: null,\n\t\t\tEIFYear: null,\n\t\t\tendYear: 'endYear',\n\t\t\tdefaultColorAttrName: null,\t\n\t\t\ttooltip: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'initiator', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'target', isID: true },\n\t\t\t\t{ attributeName: 'startYear', displayName: 'start year', isID: false },\n\t\t\t\t{ attributeName: 'endYear', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'warName', displayName: 'war name', isID: false },\n\t\t\t\t{ attributeName: 'outcome', displayName: 'outcome', isID: false },\n\t\t\t\t{ attributeName: 'node1Deaths', displayName: 'initiator deaths', isID: false },\n\t\t\t\t{ attributeName: 'node2Deaths', displayName: 'target deaths', isID: false }\n\t\t\t] },\n\t\t\tdataTable: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'initiator', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'target', isID: true },\n\t\t\t\t{ attributeName: 'startYear', displayName: 'start year', isID: false },\n\t\t\t\t{ attributeName: 'endYear', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'warName', displayName: 'war name', isID: false },\n\t\t\t\t{ attributeName: 'outcome', displayName: 'outcome', isID: false },\n\t\t\t\t{ attributeName: 'node1Deaths', displayName: 'initiator deaths', isID: false },\n\t\t\t\t{ attributeName: 'node2Deaths', displayName: 'target deaths', isID: false }\n\t\t\t] },\n\t\t\tcolorPane: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'initiator', isID: true, isCategorical: true, key: 'initiator' },\n\t\t\t\t{ attributeName: 'node2', displayName: 'target', isID: true, isCategorical: true, key: 'target' },\n\t\t\t\t{ attributeName: 'startYear', displayName: 'start year', isID: false, isCategorical: false, key: 'start year' },\n\t\t\t\t{ attributeName: 'endYear', displayName: 'end year', isID: false, isCategorical: false, key: 'end year' },\n\t\t\t\t{ attributeName: 'outcome', displayName: 'outcome', isID: false, isCategorical: true, key: 'outcome' },\n\t\t\t\t{ attributeName: 'node1Deaths', displayName: 'initiator deaths', isID: false, isCategorical: false, key: 'initiator deaths' },\n\t\t\t\t{ attributeName: 'node2Deaths', displayName: 'target deaths', isID: false, isCategorical: false, key: 'target deaths' }\n\t\t\t] },\n\t\t\tfilterPane: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'initiator', isID: true, isCategorical: true, key: 'initiator' },\n\t\t\t\t{ attributeName: 'node2', displayName: 'target', isID: true, isCategorical: true, key: 'target' },\n\t\t\t\t{ attributeName: 'startYear', displayName: 'start year', isID: false, isCategorical: false, key: 'start year' },\n\t\t\t\t{ attributeName: 'endYear', displayName: 'end year', isID: false, isCategorical: false, key: 'end year' },\n\t\t\t\t{ attributeName: 'warName', displayName: 'war name', isID: false, isCategorical: true, key: 'war name' },\n\t\t\t\t{ attributeName: 'outcome', displayName: 'outcome', isID: false, isCategorical: true, key: 'outcome' },\n\t\t\t\t{ attributeName: 'node1Deaths', displayName: 'initiator deaths', isID: false, isCategorical: false, key: 'initiator deaths' },\n\t\t\t\t{ attributeName: 'node2Deaths', displayName: 'target deaths', isID: false, isCategorical: false, key: 'target deaths' }\n\t\t\t] },\n\t\t\teventName: 'war'\n\t\t}, {\n\t\t\tlinkType: 'defense_agreements', // 'should not use - for linkType'\n\t\t\tfileName: 'defense_agreements.csv',\n\t\t\tisDirected: false,\n\t\t\tisWeighted: false,\n\t\t\tdisplayName: 'Defense Cooperation Agreements',\n\t\t\tstartYear: null,\n\t\t\tsignYear: 'signYear',\n\t\t\tEIFYear: 'EIFYear',\n\t\t\tendYear: 'endYearEstimated',\n\t\t\tdefaultColorAttrName: null,\n\t\t\ttooltip: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'country 1', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'country 2', isID: true },\n\t\t\t\t{ attributeName: 'signYear', displayName: 'sign year', isID: false },\n\t\t\t\t{ attributeName: 'EIFYear', displayName: 'entry into force year', isID: false },\n\t\t\t\t{ attributeName: 'endYearEstimated', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'type', displayName: 'type', isID: false },\n\t\t\t\t{ attributeName: 'category', displayName: 'category', isID: false }\n\t\t\t] },\n\t\t\tdataTable: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'country 1', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'country 2', isID: true },\n\t\t\t\t{ attributeName: 'signYear', displayName: 'sign year', isID: false },\n\t\t\t\t{ attributeName: 'EIFYear', displayName: 'entry into force year', isID: false },\n\t\t\t\t{ attributeName: 'endYearEstimated', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'type', displayName: 'type', isID: false },\n\t\t\t\t{ attributeName: 'category', displayName: 'category', isID: false }\n\t\t\t] },\n\t\t\tcolorPane: { attributeList: [\n\t\t\t\t{ attributeName: 'signYear', displayName: 'sign year', isID: false, isCategorical: false, key: 'sign year' },\n\t\t\t\t{ attributeName: 'EIFYear', displayName: 'entry into force year', isID: false, isCategorical: false, key: 'entry into force year' },\n\t\t\t\t{ attributeName: 'endYearEstimated', displayName: 'end year', isID: false, isCategorical: false, key: 'end year' },\n\t\t\t\t{ attributeName: 'type', displayName: 'type', isID: false, isCategorical: true, key: 'type' },\n\t\t\t\t{ attributeName: 'category', displayName: 'category', isID: false, isCategorical: true, key: 'category' }\n\t\t\t] },\n\t\t\tfilterPane: { attributeList: [\n\t\t\t\t{ attributeName: 'signYear', displayName: 'sign year', isID: false, isCategorical: false, key: 'sign year' },\n\t\t\t\t{ attributeName: 'EIFYear', displayName: 'entry into force year', isID: false, isCategorical: false, key: 'entry into force year' },\n\t\t\t\t{ attributeName: 'endYearEstimated', displayName: 'end year', isID: false, isCategorical: false, key: 'end year' },\n\t\t\t\t{ attributeName: 'type', displayName: 'type', isID: false, isCategorical: true, key: 'type' },\n\t\t\t\t{ attributeName: 'category', displayName: 'category', isID: false, isCategorical: true, key: 'category' }\n\t\t\t] },\n\t\t\teventName: 'agreement'\n\t\t}\n\t],\n\ttimeSeries: [\n\t\t{\n\t\t\tfileName: 'trade_volume.csv',\n\t\t\tdisplayName: 'Trade Volume',\n\t\t\tisBilateral: true,\n\t\t\tmetricName: 'trade volume'\n\t\t}, {\n\t\t\tfileName: 'military_expenditures.csv',\n\t\t\tdisplayName: 'Military Expenditures (in thousands USD)',\n\t\t\tisBilateral: false,\n\t\t\tmetricName: 'military expenditure'\n\t\t}, {\n\t\t\tfileName: 'military_personnel.csv',\n\t\t\tdisplayName: 'Military Personnel (thousands)',\n\t\t\tisBilateral: false,\n\t\t\tmetricName: 'military personnel'\n\t\t}, {\n\t\t\tfileName: 'total_population.csv',\n\t\t\tdisplayName: 'Total Population (thousands)',\n\t\t\tisBilateral: false,\n\t\t\tmetricName: 'population'\n\t\t}\n\t]\n};","import { csv } from 'd3';\nimport { config } from '../config';\n\n// helpers\n\nconst createPromiseList = config => {\n\tconst promiseList = [];\n\n\tfor (let linkConfig of config.links) {\n\t\tconst url = `${ process.env.PUBLIC_URL }/data/links/${ linkConfig.fileName }`;\n\t\tconst promise = csv(url);\n\n\t\tpromiseList.push(promise);\n\t}\n\n\treturn promiseList;\n};\n\n// main functions\n\nexport const loadLinkData = dispatch => {\n\tconst linkDataList = [];\n\tconst promiseList = createPromiseList(config);\n\n\tPromise.all(promiseList).then(dataList => {\n\t\tfor (let i = 0; i < dataList.length; i++)\n\t\t\tlinkDataList.push({ \n\t\t\t\tdata: dataList[i],\n\t\t\t\tmetadata: config.links[i]\n\t\t\t});\n\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: { linkDataList }\n\t\t});\n\t});\n};","import { csv } from 'd3';\n\nconst url = `${ process.env.PUBLIC_URL }/data/nodes/countries.csv`;\n\nconst getCountryIDToData = nodeList => {\n\tconst countryIDToData = {};\n\n\tfor (let countryRow of nodeList)\n\t\tcountryIDToData[countryRow.ID] = countryRow;\n\n\treturn countryIDToData;\n};\n\nconst parseData = row => ({\n\t...row,\n\tlatitude: row.latitude !== '' ? +row.latitude : null,\n\tlongitude: row.longitude !== '' ? +row.longitude : null\n});\n\nexport const loadNodeData = dispatch => {\n\tcsv(url, parseData).then(d => {\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: {\n\t\t\t\tnodeList: d,\n\t\t\t\tcountryIDToData: getCountryIDToData(d)\n\t\t\t}\n\t\t});\n\t});\n};","import { csv } from 'd3';\nimport { config } from '../config';\n\nconst parseData = row => ({\n\t...row,\n\tyear: row.year !== '' ? +row.year : null,\n\tvalue: row.value !== '' ? +row.value : null\n});\n\nconst createPromiseList = config => {\n\tconst promiseList = [];\n\n\tfor (let timeSeriesConfig of config.timeSeries) {\n\t\tconst url = `${ process.env.PUBLIC_URL }/data/timeSeries/${ timeSeriesConfig.fileName }`;\n\t\tconst promise = csv(url, parseData);\n\n\t\tpromiseList.push(promise);\n\t}\n\n\treturn promiseList;\n};\n\nconst generateMetadata = (timeSeriesList, oldMetadata) => {\n\tconst yearSet = new Set();\n\n\tfor (let { year } of timeSeriesList)\n\t\tif (year !== null) \n\t\t\tyearSet.add(year);\n\n\treturn { ...oldMetadata, \n\t\tyearList: [ ...yearSet ].sort((a, b) => a - b)\n\t};\n};\n\nconst generateIDToTimeSeriesList = (timeSeriesList, metadata) => {\n\tconst IDToTimeSeriesList = {};\n\tconst isBilateral = metadata.isBilateral;\n\n\tif (isBilateral)\n\t\tfor (let row of timeSeriesList) {\n\t\t\tconst sourceID = row.node1;\n\t\t\tconst targetID = row.node2;\n\t\t\tconst sourceTargetID = sourceID + '-' + targetID;\n\n\t\t\tif (!(sourceTargetID in IDToTimeSeriesList))\n\t\t\t\tIDToTimeSeriesList[sourceTargetID] = [];\n\n\t\t\tIDToTimeSeriesList[sourceTargetID].push(row);\n\t\t}\n\n\telse if (!isBilateral)\n\t\tfor (let row of timeSeriesList) {\n\t\t\tconst nodeID = row.ID;\n\n\t\t\tif (!(nodeID in IDToTimeSeriesList))\n\t\t\t\tIDToTimeSeriesList[nodeID] = [];\n\n\t\t\tIDToTimeSeriesList[nodeID].push(row);\n\t\t}\n\n\treturn IDToTimeSeriesList;\n};\n\nexport const loadTimeSeriesData = dispatch => {\n\tconst timeSeriesDataList = [];\n\tconst promiseList = createPromiseList(config);\n\n\tPromise.all(promiseList).then(dataList => {\n\t\tfor (let i = 0; i < dataList.length; i++) {\n\t\t\tconst timeSeriesList = dataList[i];\n\t\t\tconst metadata = generateMetadata(timeSeriesList, config.timeSeries[i]);\n\t\t\tconst data = generateIDToTimeSeriesList(timeSeriesList, metadata);\n\n\t\t\ttimeSeriesDataList.push({ data, metadata });\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: { timeSeriesDataList }\n\t\t});\n\t});\n};","import { useEffect, useReducer } from 'react';\nimport { loadMapData } from './loadMapData';\nimport { loadLinkData } from './loadLinkData';\nimport { loadNodeData } from './loadNodeData';\nimport { loadTimeSeriesData } from './loadTimeSeriesData';\n\nconst checkIfIsLoading = ({\n\tlandData,\n\tinteriorData,\n\tlinkDataList,\n\tnodeList,\n\tcountryIDToData,\n\ttimeSeriesDataList\n}) => \n\tlandData === null ||\n\tinteriorData === null ||\n\tlinkDataList === null ||\n\tnodeList === null ||\n\tcountryIDToData === null ||\n\ttimeSeriesDataList === null;\n\nconst initialState = {\n\tlandData: null,\n\tinteriorData: null,\n\tlinkDataList: null,\n\tnodeList: null,\n\tcountryIDToData: null,\n\ttimeSeriesDataList: null,\n\tisLoading: true\n};\n\nconst reducer = (prevState, action) => {\n\tswitch (action.type) {\n\t\tcase \"LOAD_DATA\":\n\t\t\treturn { \n\t\t\t\t...prevState, \n\t\t\t\t...action.data,\n\t\t\t\tisLoading: checkIfIsLoading({ \n\t\t\t\t\t...prevState, \n\t\t\t\t\t...action.data \n\t\t\t\t})\n\t\t\t};\n\t\tdefault: \n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t}\n};\n\nexport const useDataState = () => {\n\tconst [ dataState, dispatch ] = useReducer(reducer, initialState);\n\n\tuseEffect(() => {\n\t\tloadMapData(dispatch);\n\t\tloadLinkData(dispatch);\n\t\tloadNodeData(dispatch);\n\t\tloadTimeSeriesData(dispatch);\n\t}, []);\n\n\treturn [ dataState, dispatch ];\n};","// helpers\n\nconst getShownSourceIDSet = linkTypeList => { // linkTypeList is filtered\n\tconst shownSourceIDSet = new Set();\n\n\tfor (let { isDirected, linkRowList } of linkTypeList) {\n\t\tif (isDirected)\n\t\t\tfor (let { node1 } of linkRowList)\n\t\t\t\tshownSourceIDSet.add(node1);\n\n\t\telse if (!isDirected)\n\t\t\tfor (let { node1, node2 } of linkRowList) {\n\t\t\t\tshownSourceIDSet.add(node1);\n\t\t\t\tshownSourceIDSet.add(node2);\n\t\t\t}\n\t}\n\n\treturn shownSourceIDSet;\n}\n\nconst getShownTargetIDSet = linkTypeList => { // linkTypeList is filtered\n\tconst shownTargetIDSet = new Set();\n\n\tfor (let { isDirected, linkRowList } of linkTypeList) {\n\t\tif (isDirected)\n\t\t\tfor (let { node2 } of linkRowList)\n\t\t\t\tshownTargetIDSet.add(node2);\n\n\t\telse if (!isDirected)\n\t\t\tfor (let { node1, node2 } of linkRowList) {\n\t\t\t\tshownTargetIDSet.add(node1);\n\t\t\t\tshownTargetIDSet.add(node2);\n\t\t\t}\n\t}\n\n\treturn shownTargetIDSet;\n};\n\n// initLinkPaneList\n\nconst extractYearRange = (linkRowList, yearAttributeName) => {\n\tlet min = Infinity, max = -Infinity;\n\n\tfor (let linkRowObject of linkRowList)\n\t\tif (linkRowObject[yearAttributeName] !== '') {\n\t\t\tmin = Math.min(min, +linkRowObject[yearAttributeName]);\n\t\t\tmax = Math.max(max, +linkRowObject[yearAttributeName]);\n\t\t}\n\n\tmin = min === Infinity ? null : min;\n\tmax = max === -Infinity ? null : max;\n\n\treturn [ min, max ];\n};\n\nconst generateYearAttribute = (linkRowList, linkMetadata, yearAttributeType) => {\n\tif (linkMetadata[yearAttributeType] === null)\n\t\treturn null;\n\n\tconst attributeName = linkMetadata[yearAttributeType];\n\tconst [ min, max ] = extractYearRange(linkRowList, attributeName);\n\t\n\treturn { attributeName, min, max };\n};\n\nconst findAverage = (linkRowList, attributeName) => {\n\tlet sum = 0, count = 0;\n\n\tfor (let linkRowObject of linkRowList) {\n\t\tconst attributeValue = linkRowObject[attributeName];\n\t\tconst attributeValueIsMissing = attributeValue === '';\n\n\t\tif (!attributeValueIsMissing) {\n\t\t\tsum += +attributeValue;\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count === 0 ? null : sum / count;\n};\n\nconst processColorAttributeList = (linkRowList, linkMetadata) => {\n\tconst { isDirected, linkType, colorPane } = linkMetadata;\n\tconst linkIDToLinkRowList = {};\n\n\t// generate linkIDToLinkRowList\n\tfor (let linkRowObject of linkRowList) {\n\t\tconst { node1, node2 } = linkRowObject;\n\t\tconst sourceID = isDirected ? node1 : (node1 < node2 ? node1 : node2);\n\t\tconst targetID = isDirected ? node2 : (node1 < node2 ? node2 : node1);\n\t\tconst linkID = `${ sourceID }-${ targetID }-${ linkType }`;\n\n\t\tif (!(linkID in linkIDToLinkRowList))\n\t\t\tlinkIDToLinkRowList[linkID] = [];\n\n\t\tlinkIDToLinkRowList[linkID].push(linkRowObject);\n\t}\n\n\t// for each dataset, there are may links\n\t// for each link, there is an average\n\t// find averageMin and averageMax\n\tfor (let attribute of colorPane.attributeList) {\n\t\tconst { isCategorical, attributeName } = attribute;\n\t\tlet averageMin = Infinity, averageMax = -Infinity;\n\n\t\tif (!isCategorical) {\n\t\t\tfor (let linkID in linkIDToLinkRowList) {\n\t\t\t\tconst linkRowListForCurrLink = linkIDToLinkRowList[linkID];\n\t\t\t\tconst average = findAverage(linkRowListForCurrLink, attributeName);\n\n\t\t\t\tif (average !== null) {\n\t\t\t\t\taverageMin = Math.min(averageMin, average);\n\t\t\t\t\taverageMax = Math.max(averageMax, average);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tattribute.averageMin = averageMin;\n\t\t\tattribute.averageMax = averageMax;\n\t\t}\n\t}\n\n\treturn colorPane;\n};\n\nexport const initLinkPaneList = linkDataList => {\n\tconst linkPaneList = [];\n\n\tfor (let { data: linkRowList, metadata: linkMetadata } of linkDataList) {\n\t\tconst {\n\t\t\tlinkType,\n\t\t\tisDirected,\n\t\t\tisWeighted,\n\t\t\ttooltip,\n\t\t\tdataTable,\n\t\t\tfilterPane,\n\t\t\tdefaultColorAttrName,\n\t\t\teventName\n\t\t} = linkMetadata;\n\n\t\tconst key = linkType;\n\t\tconst isShown = true;\n\t\tconst isSelected = false;\n\t\tconst isSegment = false;\n\t\tconst displayName = linkMetadata.displayName;\n\n\t\tconst startYear = generateYearAttribute(linkRowList, linkMetadata, 'startYear');\n\t\tconst signYear = generateYearAttribute(linkRowList, linkMetadata, 'signYear');\n\t\tconst EIFYear = generateYearAttribute(linkRowList, linkMetadata, 'EIFYear');\n\t\tconst endYear = generateYearAttribute(linkRowList, linkMetadata, 'endYear');\n\t\tconst colorPane = processColorAttributeList(linkRowList, linkMetadata);\n\n\t\tlinkPaneList.push({\n\t\t\tEIFYear,\n\t\t\tcolorPane,\n\t\t\tdataTable,\n\t\t\tdefaultColorAttrName,\n\t\t\tdisplayName,\n\t\t\tendYear,\n\t\t\tfilterPane,\n\t\t\tisDirected,\n\t\t\tisSegment,\n\t\t\tisSelected,\n\t\t\tisShown,\n\t\t\tisWeighted,\n\t\t\tkey,\n\t\t\tlinkRowList,\n\t\t\tlinkType,\n\t\t\tsignYear,\n\t\t\tstartYear,\n\t\t\ttooltip,\n\t\t\teventName\n\t\t});\n\t}\n\n\tlinkPaneList[0].isSelected = true; // select first\n\n\treturn linkPaneList;\n};\n\n// initSourcePaneList, initTargetPaneList\n\nconst initNodePaneList = (linkTypeList, nodeList, sourceOrTarget) => {\n\tconst nodePaneList = [];\n\tconst shownNodeSet = sourceOrTarget === 'source' ?\n\t\tgetShownSourceIDSet(linkTypeList) :\n\t\tgetShownTargetIDSet(linkTypeList);\n\n\tfor (let countryRowObject of nodeList) {\n\t\tconst countryID = countryRowObject.ID;\n\t\tconst countryName = countryRowObject.name;\n\n\t\tconst key = countryID;\n\t\tconst isShown = shownNodeSet.has(countryID);\n\t\tconst isSelected = isShown; // select all shown items by default\n\t\tconst displayName = countryName;\n\t\tconst data = countryRowObject;\n\n\t\tnodePaneList.push({\n\t\t\tkey,\n\t\t\tisShown,\n\t\t\tisSelected,\n\t\t\tdisplayName,\n\t\t\tdata\n\t\t});\n\t}\n\n\treturn nodePaneList\n\t\t.sort((a, b) => {\n\t\t\tif (a.displayName < b.displayName) return -1;\n\t\t\tif (a.displayName > b.displayName) return 1;\n\t\t\treturn 0;\n\t\t});\n};\n\nexport const initSourcePaneList = (linkTypeList, nodeList) => // linkTypeList is filtered\n\tinitNodePaneList(linkTypeList, nodeList, 'source');\n\nexport const initTargetPaneList = (linkTypeList, nodeList) => // linkTypeList is filtered\n\tinitNodePaneList(linkTypeList, nodeList, 'target');\n\n// toggleItemList, selectItemList\n\nexport const toggleItemList = (prevItemList, itemKey) => \n\tprevItemList.map(itemObject => ({ ...itemObject,\n\t\tisSelected: itemObject.key === itemKey \n\t\t\t\t? !itemObject.isSelected \n\t\t\t\t: itemObject.isSelected\n\t}));\n\nexport const selectItemList = (prevItemList, isSelected) =>\n\tprevItemList.map(itemObject => ({ ...itemObject, isSelected }));\n\n// updateSourcePaneList, updateTargetPaneList\n\nconst updateNodePaneList = (linkTypeList, prevNodePaneList, sourceOrTarget) => {\n\tconst newNodePaneList = [];\n\tconst shownNodeSet = sourceOrTarget === 'source' ?\n\t\tgetShownSourceIDSet(linkTypeList) :\n\t\tgetShownTargetIDSet(linkTypeList);\n\n\tfor (let nodeObject of prevNodePaneList) {\n\t\tconst countryID = nodeObject.data.ID;\n\t\tconst isPrevShown = nodeObject.isShown;\n\t\tconst isCurrShown = shownNodeSet.has(countryID);\n\t\tlet isCurrSelected = null;\n\n\t\tif (!isPrevShown && isCurrShown) isCurrSelected = true;\n\t\telse if (!isPrevShown && !isCurrShown) isCurrSelected = false;\n\t\telse if (isPrevShown && !isCurrShown) isCurrSelected = false;\n\t\telse if (isPrevShown && isCurrShown) isCurrSelected = true;\n\n\t\tnodeObject.isShown = isCurrShown;\n\t\tnodeObject.isSelected = isCurrSelected;\n\t\tnewNodePaneList.push(nodeObject);\n\t}\n\n\treturn newNodePaneList;\n};\n\nexport const updateSourcePaneList = (linkTypeList, prevNodePaneList) => \n\tupdateNodePaneList(linkTypeList, prevNodePaneList, 'source');\n\nexport const updateTargetPaneList = (linkTypeList, prevNodePaneList) => \n\tupdateNodePaneList(linkTypeList, prevNodePaneList, 'target');","import { schemeTableau10, scaleLinear } from 'd3';\n\n// filterLinkPaneList\n\nconst filterLinkPaneList = (linkPaneList, appliedFilterList) => {\n\tconst filteredLinkPaneList = [];\n\n\t// perform shallow copy to avoid modifying linkPaneList (only include selected)\n\tfor (let linkDataObject of linkPaneList)\n\t\tif (linkDataObject.isSelected)\n\t\t\tfilteredLinkPaneList.push({ ...linkDataObject })\n\n\t// apply filters\n\tfor (let filter of appliedFilterList) {\n\t\tconst filterAttributeName = filter.attribute.attributeName;\n\t\tconst filterAttributeIsCategorical = filter.attribute.isCategorical;\n\t\tconst matchedLinkDataList = filteredLinkPaneList.filter(({ key }) => key === filter.dataSet.key); // at most one match\n\t\tconst filteredLinkRowList = [];\n\n\t\tif (matchedLinkDataList.length > 0) {\n\t\t\tconst matchedLinkDataObject = matchedLinkDataList[0]; // at most one match\n\n\t\t\t// filter for numerical attribute\n\t\t\tif (!filterAttributeIsCategorical) {\n\t\t\t\tconst lowerBound = Math.min(...filter.attributeValue);\n\t\t\t\tconst upperBound = Math.max(...filter.attributeValue);\n\n\t\t\t\tfor (let linkRowObject of matchedLinkDataObject.linkRowList) {\n\t\t\t\t\tconst attributeValue = linkRowObject[filterAttributeName];\n\t\t\t\t\tconst attributeValueIsMissing = attributeValue === '';\n\n\t\t\t\t\tif (!attributeValueIsMissing && \n\t\t\t\t\t\t+attributeValue >= lowerBound &&\n\t\t\t\t\t\t+attributeValue <= upperBound)\n\t\t\t\t\t\tfilteredLinkRowList.push(linkRowObject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// filter for categorical attribute\n\t\t\telse if (filterAttributeIsCategorical) {\n\t\t\t\tconst selectedCategoryList = filter.attributeValueList\n\t\t\t\t\t.filter(({ isSelected }) => isSelected)\n\t\t\t\t\t.map(({ category }) => category);\n\t\t\t\tconst selectedCategorySet = new Set(selectedCategoryList);\n\n\t\t\t\tfor (let linkRowObject of matchedLinkDataObject.linkRowList) {\n\t\t\t\t\tconst attributeValue = linkRowObject[filterAttributeName];\n\t\t\t\t\tconst attributeValueIsMissing = attributeValue === '';\n\n\t\t\t\t\tif (!attributeValueIsMissing && \n\t\t\t\t\t\tselectedCategorySet.has(attributeValue))\n\t\t\t\t\t\tfilteredLinkRowList.push(linkRowObject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// save\n\t\t\tmatchedLinkDataObject.linkRowList = filteredLinkRowList;\n\t\t}\n\t}\n\n\treturn filteredLinkPaneList;\n};\n\n// segmentLinkPaneList\n\nconst generateCategorySet = (linkRowList, attributeName) => {\n\tconst categorySet = new Set(); // forget about missing for now\n\n\tfor (let linkRowObject of linkRowList)\n\t\tcategorySet.add(linkRowObject[attributeName]);\n\n\treturn categorySet;\n};\n\nconst generateCategoryToLinkRowList = (linkRowList, attributeName, categorySet) => {\n\tconst categoryToLinkRowList = {};\n\n\tfor (let category of categorySet)\n\t\tcategoryToLinkRowList[category] = [];\n\n\tfor (let linkRowObject of linkRowList) {\n\t\tconst category = linkRowObject[attributeName];\n\t\tcategoryToLinkRowList[category].push(linkRowObject);\n\t}\n\n\treturn categoryToLinkRowList;\n};\n\nconst generateChildLinkDataList = (\n\tparentLinkDataObject, \n\tsegmentAttribute, \n\tcountryIDToData\n) => {\n\tconst generateDisplayName = category => {\n\t\tif (category === '') return `${ segmentAttribute.displayName }=null`;\n\t\tif (!segmentAttribute.isID) return `${ segmentAttribute.displayName }=${ category }`;\n\t\treturn `${ segmentAttribute.displayName }=${ countryIDToData[category].displayName }`;\n\t};\n\n\tconst categorySet = generateCategorySet(parentLinkDataObject.linkRowList, segmentAttribute.attributeName);\n\tconst categoryToLinkRowList = generateCategoryToLinkRowList(parentLinkDataObject.linkRowList, segmentAttribute.attributeName, categorySet);\n\tconst {\n\t\tcolorPane,\n\t\tEIFYear,\n\t\tdataTable,\n\t\tendYear,\n\t\tfilterPane,\n\t\tisDirected,\n\t\tisWeighted,\n\t\tsignYear,\n\t\tstartYear,\n\t\ttooltip,\n\t\teventName\n\t} = parentLinkDataObject;\n\tconst childLinkDataList = [];\n\n\tfor (let category of categorySet) {\n\t\tconst parentKey = parentLinkDataObject.key;\n\t\tconst displayName = generateDisplayName(category);\n\t\tconst segmentKey = displayName.replace(/[^0-9a-z]/gi, '').toLowerCase();\n\n\t\tconst linkRowList = categoryToLinkRowList[category];\n\t\tconst isSelected = true, isShown = true, isSegment = true;\n\t\tconst key = `${ parentKey }_${ segmentKey }`; // cannot use '-'\n\t\tconst linkType = key;\n\n\t\tchildLinkDataList.push({\n\t\t\tEIFYear,\n\t\t\tcolorPane,\n\t\t\tdataTable,\n\t\t\tdisplayName,\n\t\t\tendYear,\n\t\t\tfilterPane,\n\t\t\tisDirected,\n\t\t\tisSelected,\n\t\t\tisSegment,\n\t\t\tisShown,\n\t\t\tisWeighted,\n\t\t\tkey,\n\t\t\tlinkRowList,\n\t\t\tlinkType,\n\t\t\tsignYear,\n\t\t\tstartYear,\n\t\t\ttooltip,\n\t\t\teventName,\n\t\t\tparentLinkDataObject // for changing legend label\n\t\t});\n\t}\n\n\treturn childLinkDataList;\n};\n\nconst segmentLinkPaneList = (\n\tfilteredLinkPaneList,\n\tappliedColoringList,\n\tcountryIDToData\n) => {\n\tconst segmentedLinkPaneList = [];\n\n\tif (appliedColoringList.length === 0)\n\t\treturn filteredLinkPaneList;\n\n\tfor (let parentLinkDataObject of filteredLinkPaneList) {\n\t\tconst matchedColoringList = appliedColoringList\n\t\t\t.filter(listItem => listItem.attribute.isCategorical) // no segmentation for numerical attr\n\t\t\t.filter(listItem => listItem.dataSet.key === parentLinkDataObject.key);\n\t\tconst needToSegment = matchedColoringList.length > 0;\n\n\t\tif (needToSegment) { // don't push parentLinkDataObject\n\t\t\tconst matchedColoring = matchedColoringList[0]; // at most one match\n\t\t\tconst childLinkDataList = generateChildLinkDataList(\n\t\t\t\tparentLinkDataObject, \n\t\t\t\tmatchedColoring.attribute, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\n\t\t\tfor (let childLinkDataObject of childLinkDataList)\n\t\t\t\tsegmentedLinkPaneList.push(childLinkDataObject);\n\t\t}\n\t\telse if (!needToSegment)\n\t\t\tsegmentedLinkPaneList.push(parentLinkDataObject);\n\t}\n\n\treturn segmentedLinkPaneList;\n};\n\n// colorLinkPaneList\n\nconst colorLinkPaneList = (segmentedLinkPaneList, prevLinkTypeToColor) => {\n\tconst newLinkTypeToColor = {};\n\tconst currColorList = [];\n\n\t// color existing linkDataObject \n\tsegmentedLinkPaneList\n\t\t.filter(linkDataObject => linkDataObject.linkType in prevLinkTypeToColor)\n\t\t.forEach(linkDataObject => {\n\t\t\tconst linkType = linkDataObject.linkType;\n\t\t\tconst color = prevLinkTypeToColor[linkType];\n\n\t\t\tcurrColorList.push(color);\n\t\t\tlinkDataObject.color = color;\n\t\t});\n\n\t// color new linkDataObject\n\tsegmentedLinkPaneList\n\t\t.filter(linkDataObject => !(linkDataObject.linkType in prevLinkTypeToColor))\n\t\t.forEach(linkDataObject => {\n\t\t\tlet foundColor = false;\n\n\t\t\t// try to get unused color (remember to save)\n\t\t\tfor (let color of schemeTableau10)\n\t\t\t\tif (currColorList.indexOf(color) === -1) {\n\t\t\t\t\tcurrColorList.push(color);\n\t\t\t\t\tlinkDataObject.color = color;\n\t\t\t\t\tfoundColor = true; break;\n\t\t\t\t}\n\n\t\t\t// assign random color (remember to save)\n\t\t\tif (!foundColor) {\n\t\t\t\tconst randomIndex = Math.floor(Math.random() * schemeTableau10.length);\n\t\t\t\tconst color = schemeTableau10[randomIndex];\n\n\t\t\t\tcurrColorList.push(color);\n\t\t\t\tlinkDataObject.color = color;\n\t\t\t}\n\t\t});\n\n\t// remove color for old linkDataObject\n\tfor (let { linkType, color } of segmentedLinkPaneList)\n\t\tnewLinkTypeToColor[linkType] = color;\n\n\treturn [ segmentedLinkPaneList, newLinkTypeToColor ];\n};\n\n// updateLinkTypeList\n\nexport const updateLinkTypeList = (\n\tlinkPaneList,\n\tappliedColoringList,\n\tappliedFilterList,\n\tprevLinkTypeToColor,\n\tcountryIDToData\n) => {\n\tconst filteredLinkPaneList = filterLinkPaneList(\n\t\tlinkPaneList, \n\t\tappliedFilterList\n\t);\n\tconst segmentedLinkPaneList = segmentLinkPaneList(\n\t\tfilteredLinkPaneList, \n\t\tappliedColoringList,\n\t\tcountryIDToData\n\t);\n\tconst [ \n\t\tcoloredLinkPaneList,\n\t\tnewLinkTypeToColor \n\t] = colorLinkPaneList(\n\t\tsegmentedLinkPaneList,\n\t\tprevLinkTypeToColor\n\t);\n\n\treturn [ coloredLinkPaneList, newLinkTypeToColor ];\n};\n\nexport const updateLinkTypeListColor = (\n\tprevLinkTypeList,\n\tprevLinkTypeToColor,\n\tlinkKey,\n\tnewColor\n) => {\n\tconst linkType = linkKey; // they should be the same\n\tconst newLinkTypeList = prevLinkTypeList.map(linkDataObject => ({ ...linkDataObject,\n\t\tcolor: linkDataObject.key !== linkKey ? linkDataObject.color : newColor\n\t}));\n\n\tprevLinkTypeToColor[linkType] = newColor;\n\n\treturn [ newLinkTypeList, prevLinkTypeToColor ]; // no need to change reference for prevLinkTypeToColor\n};\n\n// updateLinkList\n\nconst filterLinkByTime = (\n\tlinkRowObject, \n\tlinkDataObject, \n\ttimelineSliderState\n) => {\n\tconst timelineSliderType = timelineSliderState.yearAttribute.type;\n\n\tswitch (timelineSliderType) {\n\t\tcase 'no-filter': {\n\t\t\treturn true;\n\t\t}\n\t\tcase 'point': {\n\t\t\tconst timelineValue = timelineSliderState.value;\n\t\t\tconst { startYearAttrType, endYearAttrType } = timelineSliderState.yearAttribute;\n\t\t\tconst startYearAttr = linkDataObject[startYearAttrType];\n\t\t\tconst endYearAttr = linkDataObject[endYearAttrType];\n\t\t\tlet startYearValue = null, endYearValue = null;\n\n\t\t\tif (startYearAttr !== null && linkRowObject[startYearAttr.attributeName] !== '')\n\t\t\t\tstartYearValue = +linkRowObject[startYearAttr.attributeName];\n\t\t\tif (endYearAttr !== null && linkRowObject[endYearAttr.attributeName] !== '')\n\t\t\t\tendYearValue = +linkRowObject[endYearAttr.attributeName];\n\n\t\t\tif (startYearValue === null) return false;\n\t\t\telse if (endYearValue === null) return timelineValue >= startYearValue; // has start but not end\n\t\t\telse return timelineValue >= startYearValue && timelineValue <= endYearValue; // has both\n\t\t}\n\t\tcase 'range': {\n\t\t\tconst timelineRange = timelineSliderState.value;\n\t\t\tconst { filterYearAttrType } = timelineSliderState.yearAttribute;\n\t\t\tconst filterYearAttr = linkDataObject[filterYearAttrType];\n\t\t\tlet yearValue = null;\n\n\t\t\tif (filterYearAttr !== null && linkRowObject[filterYearAttr.attributeName] !== '')\n\t\t\t\tyearValue = +linkRowObject[filterYearAttr.attributeName];\n\n\t\t\tif (yearValue === null) return false;\n\t\t\treturn yearValue >= timelineRange[0] && yearValue <= timelineRange[1];\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled case: ${ timelineSliderType }`);\n\t\t}\n\t}\n};\n\nconst getSelectedNodeSet = nodePaneList => {\n\tconst filteredIDList = nodePaneList\n\t\t.filter(nodeObject => nodeObject.isSelected)\n\t\t.map(nodeObject => nodeObject.data.ID);\n\n\treturn new Set(filteredIDList);\n};\n\nconst generateLinkTypeToMetadata = linkTypeList => {\n\tconst linkTypeToMetadata = {};\n\n\tlinkTypeList.forEach(linkDataObject => {\n\t\tconst linkType = linkDataObject.linkType;\n\n\t\tlinkTypeToMetadata[linkType] = linkDataObject;\n\t});\n\n\treturn linkTypeToMetadata;\n};\n\nconst generateLinkIDToLinkRowList = (\n\tlinkTypeList, \n\tsourcePaneList, \n\ttargetPaneList, \n\ttimelineSliderState\n) => {\n\tconst linkIDToLinkRowList = {};\n\tconst selectedSourceIDSet = getSelectedNodeSet(sourcePaneList);\n\tconst selectedTargetIDSet = getSelectedNodeSet(targetPaneList);\n\n\tfor (let linkDataObject of linkTypeList) {\n\t\tconst {\n\t\t\tlinkRowList,\n\t\t\tisDirected,\n\t\t\tlinkType\n\t\t} = linkDataObject;\n\n\t\tfor (let linkRowObject of linkRowList) {\n\t\t\tif (isDirected) {\n\t\t\t\tconst sourceID = linkRowObject.node1;\n\t\t\t\tconst targetID = linkRowObject.node2;\n\t\t\t\tconst sourceSelected = selectedSourceIDSet.has(sourceID);\n\t\t\t\tconst targetSelected = selectedTargetIDSet.has(targetID);\n\t\t\t\tconst satisfiesTimelineSliderCriteria = filterLinkByTime(\n\t\t\t\t\tlinkRowObject, linkDataObject, timelineSliderState\n\t\t\t\t);\n\n\t\t\t\tif (sourceSelected && targetSelected && satisfiesTimelineSliderCriteria) {\n\t\t\t\t\tconst linkID = `${ sourceID }-${ targetID }-${ linkType }`;\n\n\t\t\t\t\tif (!(linkID in linkIDToLinkRowList))\n\t\t\t\t\t\tlinkIDToLinkRowList[linkID] = [];\n\n\t\t\t\t\tlinkIDToLinkRowList[linkID].push(linkRowObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!isDirected) {\n\t\t\t\tconst sourceID = linkRowObject.node1 < linkRowObject.node2 ? linkRowObject.node1 : linkRowObject.node2;\n\t\t\t\tconst targetID = linkRowObject.node1 < linkRowObject.node2 ? linkRowObject.node2 : linkRowObject.node1;\n\t\t\t\tconst selectionCriteria1 = selectedSourceIDSet.has(linkRowObject.node1) && selectedTargetIDSet.has(linkRowObject.node2);\n\t\t\t\tconst selectionCriteria2 = selectedSourceIDSet.has(linkRowObject.node2) && selectedTargetIDSet.has(linkRowObject.node1);\n\t\t\t\tconst satisfiesTimelineSliderCriteria = filterLinkByTime(\n\t\t\t\t\tlinkRowObject, linkDataObject, timelineSliderState\n\t\t\t\t);\n\n\t\t\t\tif ((selectionCriteria1 || selectionCriteria2) && satisfiesTimelineSliderCriteria) {\n\t\t\t\t\tconst linkID = `${ sourceID }-${ targetID }-${ linkType }`;\n\n\t\t\t\t\tif (!(linkID in linkIDToLinkRowList))\n\t\t\t\t\t\tlinkIDToLinkRowList[linkID] = [];\n\n\t\t\t\t\tlinkIDToLinkRowList[linkID].push(linkRowObject);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn linkIDToLinkRowList;\n};\n\nconst findAverage = (linkRowList, attributeName) => {\n\tlet sum = 0, count = 0;\n\n\tfor (let linkRowObject of linkRowList) {\n\t\tconst attributeValue = linkRowObject[attributeName];\n\t\tconst attributeValueIsMissing = attributeValue === '';\n\n\t\tif (!attributeValueIsMissing) {\n\t\t\tsum += +attributeValue;\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count === 0 ? null : sum / count;\n};\n\nexport const changeLinkOpacity = (prevLinkList, appliedColoringList) => {\n\tconst linkTypeToLinkList = {};\n\tconst opacityScale = scaleLinear().range([ 0.1, 1 ]);\n\tconst numericalAttrColoringList = appliedColoringList\n\t\t.filter(listItem => !listItem.attribute.isCategorical);\n\n\tif (numericalAttrColoringList.length === 0)\n\t\treturn prevLinkList;\n\n\t// generate linkTypeToLinkList\n\tfor (let linkObject of prevLinkList) {\n\t\tconst linkType = linkObject.linkType;\n\n\t\tif (!(linkType in linkTypeToLinkList))\n\t\t\tlinkTypeToLinkList[linkType] = [];\n\n\t\tlinkTypeToLinkList[linkType].push(linkObject);\n\t}\n\n\t// change opacity\n\tfor (let linkType in linkTypeToLinkList) {\n\t\tconst linkListForCurrLinkType = linkTypeToLinkList[linkType];\n\t\tconst matchedColoringList = numericalAttrColoringList\n\t\t\t.filter(listItem => listItem.dataSet.key === linkType); // linkType is key\n\n\t\tif (matchedColoringList.length > 0) {\n\t\t\tconst matchedColoring = matchedColoringList[0]; // at most one match\n\t\t\tconst { averageMin, averageMax, attributeName } = matchedColoring.attribute;\n\n\t\t\topacityScale.domain([ averageMin, averageMax ]);\n\n\t\t\tfor (let linkObject of linkListForCurrLinkType) {\n\t\t\t\tconst linkRowListForCurrLink = linkObject.linkRowList;\n\t\t\t\tconst average = findAverage(linkRowListForCurrLink, attributeName);\n\t\t\t\tconst opacity = average === null ? 0.05 : opacityScale(average);\n\t\t\t\t\n\t\t\t\tlinkObject.linkOpacity = opacity;\n\t\t\t\tlinkObject.thinLineOpacity = opacity;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn prevLinkList;\n};\n\nexport const updateLinkList = (\n\tlinkTypeList,\n\tsourcePaneList, \n\ttargetPaneList, \n\ttimelineSliderState,\n\tappliedColoringList\n) => {\n\tconst linkList = [];\n\tconst linkTypeToMetadata = generateLinkTypeToMetadata(linkTypeList);\n\tconst linkIDToLinkRowList = generateLinkIDToLinkRowList(\n\t\tlinkTypeList, \n\t\tsourcePaneList, \n\t\ttargetPaneList, \n\t\ttimelineSliderState\n\t);\n\n\tfor (let linkID in linkIDToLinkRowList) {\n\t\tconst [ \n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tlinkType \n\t\t] = linkID.split('-');\n\t\tconst { \n\t\t\tisDirected, \n\t\t\tisWeighted, \n\t\t\tcolor, \n\t\t\ttooltip,\n\t\t\tdataTable,\n\t\t\teventName\n\t\t} = linkTypeToMetadata[linkType];\n\t\tconst linkRowList = linkIDToLinkRowList[linkID];\n\t\tconst linkOpacity = 1;\n\t\tconst thinLineOpacity = 0.5;\n\n\t\tlinkList.push({\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tlinkType, \n\t\t\tcolor,\n\t\t\tisDirected, \n\t\t\tisWeighted,\n\t\t\tlinkRowList,\n\t\t\ttooltip,\n\t\t\tdataTable,\n\t\t\tlinkOpacity,\n\t\t\tthinLineOpacity,\n\t\t\teventName\n\t\t});\n\t}\n\n\treturn changeLinkOpacity(linkList, appliedColoringList);\n};","import { timelineSliderOptions } from '../config';\n\n// updateTimelineSliderState (called when select link)\n\nconst generateYearAttributeList = linkTypeList => {\n\tconst yearAttributeList = [ timelineSliderOptions['no-filter'] ];\n\n\tfor (let key in timelineSliderOptions)\n\t\tif (key !== 'no-filter') {\n\t\t\tconst currTimelineSliderOption = timelineSliderOptions[key];\n\t\t\tconst requiredAttrList = currTimelineSliderOption.requirementList;\n\t\t\tlet hasAllRequiredAttr = true;\n\n\t\t\tfor (let requiredAttrName of requiredAttrList) {\n\t\t\t\tlet hasCurrRequiredAttr = false;\n\n\t\t\t\tfor (let linkDataObject of linkTypeList)\n\t\t\t\t\tif (linkDataObject[requiredAttrName] !== null) {\n\t\t\t\t\t\thasCurrRequiredAttr = true; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\tif (!hasCurrRequiredAttr) {\n\t\t\t\t\thasAllRequiredAttr = false; \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasAllRequiredAttr)\n\t\t\t\tyearAttributeList.push(currTimelineSliderOption);\n\t\t}\n\n\treturn yearAttributeList;\n};\n\nexport const updateTimelineSliderState = linkTypeList => {\n\tconst defaultYearAttribute = timelineSliderOptions['no-filter'];\n\tconst yearAttributeList = generateYearAttributeList(linkTypeList);\n\tconst currentYear = new Date().getFullYear();\n\n\treturn {\n\t\tyearAttribute: defaultYearAttribute, \n\t\tyearAttributeList: yearAttributeList,\n\t\tmin: currentYear - 10, \n\t\tmax: currentYear + 10, \n\t\tvalue: currentYear\n\t};\n};\n\n// generateTimelineSliderMin\n\nexport const generateTimelineSliderMin = (linkTypeList, selectedYearAttr) => {\n\tconst dependentAttrList = selectedYearAttr.rangeDependencyList;\n\tconst currentYear = new Date().getFullYear();\n\tlet min = Infinity;\n\n\tlinkTypeList.forEach(linkDataObject => {\n\t\tfor (let dependentAttrName of dependentAttrList)\n\t\t\tif (linkDataObject[dependentAttrName] !== null) // has the attr\n\t\t\t\tif (linkDataObject[dependentAttrName].min !== null) // has a min val\n\t\t\t\t\tmin = Math.min(min, linkDataObject[dependentAttrName].min);\n\t});\n\n\tif (min === Infinity)\n\t\treturn currentYear - 10;\n\tif (min > currentYear - 10)\n\t\treturn currentYear - 10\n\n\treturn min;\n};\n\n// generateTimelineSliderMax\n\nexport const generateTimelineSliderMax = (linkTypeList, selectedYearAttr) => {\n\tconst dependentAttrList = selectedYearAttr.rangeDependencyList;\n\tconst currentYear = new Date().getFullYear();\n\tlet max = -Infinity;\n\n\tlinkTypeList.forEach(linkDataObject => {\n\t\tfor (let dependentAttrName of dependentAttrList)\n\t\t\tif (linkDataObject[dependentAttrName] !== null) // has the attr\n\t\t\t\tif (linkDataObject[dependentAttrName].max !== null) // has a max val\n\t\t\t\t\tmax = Math.max(max, linkDataObject[dependentAttrName].max);\n\t});\n\n\tif (max === -Infinity)\n\t\treturn currentYear + 10;\n\tif (max < currentYear + 10)\n\t\treturn currentYear + 10;\n\n\treturn max;\n};","export const checkIsDirected = linkList => {\n\tfor (let { isDirected } of linkList)\n\t\tif (!isDirected) return false;\n\n\treturn true;\n};\n\nexport const checkIsWeighted = linkList => {\n\tfor (let { isWeighted } of linkList)\n\t\tif (!isWeighted) return false;\n\n\treturn true;\n};\n\nexport const checkIsNetworkMetric = option => [ \n\t'Degree', \n\t'In Degree', \n\t'Out Degree', \n\t'Closeness', \n\t'Betweenness', \n\t'Eigenvector', \n\t'PageRank' \n].indexOf(option) !== -1;\n\nconst generateMainOptionList = (timeSeriesDataList, isDirected, isWeighted) => {\n\tconst mainOptionList = [];\n\n\tfor (let { metadata: { displayName } } of timeSeriesDataList)\n\t\tmainOptionList.push(displayName);\n\n\tif (!isDirected) \n\t\treturn [ ...mainOptionList, \n\t\t\t'Degree',\n\t\t\t'Closeness',\n\t\t\t'Betweenness',\n\t\t\t'Eigenvector',\n\t\t];\n\tif (isDirected && !isWeighted)\n\t\treturn [ ...mainOptionList,\n\t\t\t'Degree',\n\t\t\t'In Degree',\n\t\t\t'Out Degree',\n\t\t\t'Closeness',\n\t\t\t'Betweenness',\n\t\t\t'Eigenvector',\n\t\t\t'PageRank'\n\t\t];\n\tif (isDirected && isWeighted)\n\t\treturn [ ...mainOptionList,\n\t\t\t'Degree',\n\t\t\t'In Degree',\n\t\t\t'Out Degree',\n\t\t\t'Closeness',\n\t\t\t'Betweenness',\n\t\t\t'Eigenvector'\n\t\t]; // remove page rank\n};\n\nexport const generateSubOption1List = (timeSeriesDataList, mainOption, isDirected) => {\n\tconst isNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isTimeSeries = !isNetworkMetric;\n\n\tif (isTimeSeries)\n\t\treturn timeSeriesDataList.filter(({ metadata: { displayName } }) => \n\t\t\tdisplayName === mainOption)[0].metadata.yearList;\n\n\tswitch (mainOption) {\n\t\tcase 'Closeness': \n\t\tcase 'Betweenness': {\n\t\t\treturn isDirected ? [ 'directed', 'undirected' ] : [ 'undirected' ];\n\t\t}\n\t\t// only available for directed\n\t\tcase 'In Degree':\n\t\tcase 'Out Degree':\n\t\tcase 'PageRank': {\n\t\t\treturn [ 'directed' ];\n\t\t}\n\t\t// only available for undirected\n\t\tcase 'Degree':\n\t\tcase 'Eigenvector': {\n\t\t\treturn [ 'undirected' ];\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled option: ${ mainOption }`);\n\t\t}\n\t}\n};\n\nexport const generateSubOption2List = (timeSeriesDataList, mainOption, isWeighted) => {\n\tconst isNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isTimeSeries = !isNetworkMetric;\n\n\tif (isTimeSeries)\n\t\treturn timeSeriesDataList.filter(({ metadata: { displayName } }) => \n\t\t\tdisplayName === mainOption)[0].metadata.yearList;\n\n\tswitch (mainOption) {\n\t\tcase 'Closeness': \n\t\tcase 'Betweenness': \n\t\tcase 'Eigenvector': {\n\t\t\treturn isWeighted ? [ 'weighted', 'unweighted' ] : [ 'unweighted' ];\n\t\t}\n\t\t// only available for unweighted\n\t\tcase 'Degree':\n\t\tcase 'In Degree':\n\t\tcase 'Out Degree':\n\t\tcase 'PageRank': {\n\t\t\treturn [ 'unweighted' ];\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled option: ${ mainOption }`);\n\t\t}\n\t}\n};\n\nconst generateMainOption = (optionList, prevOption) => \n\toptionList.indexOf(prevOption) === -1 ? optionList[0] : prevOption;\n\nconst generateSubOption1 = (optionList, prevOption) => \n\toptionList.indexOf(prevOption) === -1 ? optionList[0] : prevOption;\n\nconst generateSubOption2 = (mainOption, optionList, prevOption) => {\n\tconst isNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst foundPrevOptionInList = optionList.indexOf(prevOption) !== -1;\n\n\tif (!isNetworkMetric && foundPrevOptionInList) return prevOption;\n\tif (!isNetworkMetric && !foundPrevOptionInList) return optionList[optionList.length - 1];\n\tif (isNetworkMetric && foundPrevOptionInList) return prevOption;\n\tif (isNetworkMetric && !foundPrevOptionInList) return optionList[0];\n};\n\n// called when linkList changes\n// not called when changing main option\nexport const updateDetailPaneState = (\n\tlinkList,\n\ttimeSeriesDataList,\n\tprevDetailPaneState\n) => {\n\tconst { \n\t\tisOpen: detailPaneIsOpen,\n\t\tmainOption: prevMainOption,\n\t\tsubOption1: prevSubOption1,\n\t\tsubOption2: prevSubOption2,\n\t} = prevDetailPaneState;\n\n\t// when closed no need to compute\n\tif (!detailPaneIsOpen)\n\t\treturn prevDetailPaneState;\n\n\t// compute state when opened\n\tif (detailPaneIsOpen) {\n\t\tconst isDirected = checkIsDirected(linkList);\n\t\tconst isWeighted = checkIsWeighted(linkList);\n\t\tconst newMainOptionList = generateMainOptionList(timeSeriesDataList, isDirected, isWeighted);\n\t\tconst newMainOption = generateMainOption(newMainOptionList, prevMainOption);\n\t\tconst newSubOption1List = generateSubOption1List(timeSeriesDataList, newMainOption, isDirected);\n\t\tconst newSubOption1 = generateSubOption1(newSubOption1List, prevSubOption1);\n\t\tconst newSubOption2List = generateSubOption2List(timeSeriesDataList, newMainOption, isWeighted);\n\t\tconst newSubOption2 = generateSubOption2(newMainOption, newSubOption2List, prevSubOption2);\n\n\t\treturn {\n\t\t\tisOpen: detailPaneIsOpen,\n\t\t\tmainOption: newMainOption,\n\t\t\tmainOptionList: newMainOptionList,\n\t\t\tsubOption1: newSubOption1,\n\t\t\tsubOption1List: newSubOption1List,\n\t\t\tsubOption2: newSubOption2,\n\t\t\tsubOption2List: newSubOption2List\n\t\t};\n\t}\n};\n\nexport const checkIsOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) => \n\tscrollHeight > clientHeight || scrollWidth > clientWidth;","// generateColorPaneAttribute \n// called when selecting data set or removing coloringItem\n\nexport const generateColorPaneAttribute = (\n\tdataSet, \n\tattributeList, \n\tappliedColoringList\n) => {\n\tconst dataSetIndex = appliedColoringList\n\t\t.map(listItem => listItem.dataSet.key)\n\t\t.indexOf(dataSet.key);\n\n\t// no coloring for this data set => return none\n\tif (dataSetIndex === -1)\n\t\treturn attributeList[0];\n\n\t// has coloring => return the corresponding attr\n\tconst attributeIndex = attributeList\n\t\t.map(({ key }) => key)\n\t\t.indexOf(appliedColoringList[dataSetIndex].attribute.key);\n\n\treturn attributeList[attributeIndex];\n};\n\n// initColorPaneState\n\nexport const initColorPaneState = linkPaneList => {\n\tconst newDataSetList = linkPaneList;\n\tconst newDataSet = newDataSetList[0];\n\tconst newAttributeList = [ \n\t\t{ key: 'NONE', displayName: 'NONE' }, \n\t\t...newDataSet.colorPane.attributeList \n\t];\n\tconst newAppliedColoringList = [];\n\n\tfor (let linkDataObject of linkPaneList)\n\t\tif (linkDataObject.defaultColorAttrName !== null) {\n\t\t\tconst dataSet = linkDataObject;\n\t\t\tconst attribute = linkDataObject.colorPane.attributeList\n\t\t\t\t.filter(({ attributeName }) => attributeName === linkDataObject.defaultColorAttrName)[0];\n\n\t\t\tnewAppliedColoringList.push({ dataSet, attribute });\n\t\t}\n\n\treturn {\n\t\tisOpen: false,\n\t\tdataSetList: newDataSetList,\n\t\tdataSet: newDataSet,\n\t\tattributeList: newAttributeList,\n\t\tattribute: generateColorPaneAttribute(\n\t\t\tnewDataSet,\n\t\t\tnewAttributeList,\n\t\t\tnewAppliedColoringList\n\t\t),\n\t\tappliedColoringList: newAppliedColoringList\n\t};\n};\n\n// updateAppliedColoringList (called when selecting attribute)\n\nexport const updateAppliedColoringList = (prevAppliedColoringList, newItem) => {\n\t// no coloring for this data set => remove from list\n\tif (newItem.attribute.key === 'NONE')\n\t\treturn prevAppliedColoringList\n\t\t\t.filter(listItem => listItem.dataSet.key !== newItem.dataSet.key);\n\n\t// has coloring => add to list\n\tconst filteredAppliedColoringList = prevAppliedColoringList\n\t\t.filter(listItem => listItem.dataSet.key !== newItem.dataSet.key);\n\n\treturn [ ...filteredAppliedColoringList, newItem ];\n};","// initFilterPaneState\n\nexport const initFilterPaneState = linkPaneList => {\n\tconst newDataSetList = linkPaneList.filter(({ isSubItem }) => !isSubItem);\n\tconst newDataSet = newDataSetList[0];\n\tconst newAttributeList = [ \n\t\t{ key: 'NONE', displayName: 'SELECT AN ATTRIBUTE' }, \n\t\t...newDataSet.filterPane.attributeList \n\t];\n\tconst newAttribute = newAttributeList[0]; // none by default\n\n\treturn {\n\t\tisOpen: false,\n\t\tdataSetList: newDataSetList,\n\t\tdataSet: newDataSet,\n\t\tattributeList: newAttributeList,\n\t\tattribute: newAttribute,\n\t\tattributeValueList: [],\n\t\tattributeValue: '',\n\t\tappliedFilterList: []\n\t}\n};\n\n// generateFilterPaneAttributeValueList\n// called when selecting attribute or removing filter\n\nexport const generateFilterPaneAttributeValueList = (\n\tdataSet, \n\tattribute, \n\tappliedFilterList,\n\tcountryIDToData\n) => {\n\tconst matchedFilterList = appliedFilterList.filter(listItem => \n\t\tlistItem.dataSet.key === dataSet.key && \n\t\tlistItem.attribute.key === attribute.key);\n\tconst { linkRowList } = dataSet;\n\tconst { attributeName, isCategorical, isID } = attribute;\n\n\t// only have one filter for each dataSet / attribute pair\n\tif (matchedFilterList.length > 0)\n\t\treturn matchedFilterList[0].attributeValueList;\n\n\tif (isCategorical) {\n\t\tconst categorySet = new Set();\n\t\tconst categoryList = [];\n\n\t\tfor (let linkRowObject of linkRowList)\n\t\t\tif (linkRowObject[attributeName] !== '')\n\t\t\t\tcategorySet.add(linkRowObject[attributeName]);\n\n\t\tfor (let category of categorySet)\n\t\t\tcategoryList.push({ \n\t\t\t\tkey: category,\n\t\t\t\tcategory: category,\n\t\t\t\tdisplayName: isID ? countryIDToData[category].displayName : category,\n\t\t\t\tisSelected: true\n\t\t\t});\n\n\t\treturn categoryList.sort((a, b) => {\n\t\t\tif (a.displayName < b.displayName) return -1;\n\t\t\tif (a.displayName > b.displayName) return 1;\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\tif (!isCategorical) {\n\t\tlet min = Infinity, max = -Infinity;\n\n\t\tfor (let linkRowObject of linkRowList)\n\t\t\tif (linkRowObject[attributeName] !== '') {\n\t\t\t\tmin = Math.min(min, +linkRowObject[attributeName]);\n\t\t\t\tmax = Math.max(max, +linkRowObject[attributeName]);\n\t\t\t}\n\n\t\treturn [ min, max ];\n\t}\n};\n\n// generateFilterPaneAttributeValue\n// called when selecting attribute or removing filter\n\nexport const generateFilterPaneAttributeValue = (\n\tdataSet, \n\tattribute, \n\tattributeValueList,\n\tappliedFilterList,\n) => {\n\tconst matchedFilterList = appliedFilterList.filter(listItem => \n\t\tlistItem.dataSet.key === dataSet.key && \n\t\tlistItem.attribute.key === attribute.key);\n\tconst { isCategorical } = attribute;\n\n\t// only have one filter for each dataSet / attribute pair\n\tif (matchedFilterList.length > 0) \n\t\treturn matchedFilterList[0].attributeValue; \n\n\tif (isCategorical) return '';\n\tif (!isCategorical) return attributeValueList;\n};\n\n// updateAppliedFilterList (call when select item or change slider)\n\nexport const updateAppliedFilterList = (prevAppliedFilterList, newItem) => {\n\tconst filteredAppliedFilterList = prevAppliedFilterList\n\t\t.filter(listItem => \n\t\t\t!(listItem.dataSet.key === newItem.dataSet.key && \n\t\t\tlistItem.attribute.key === newItem.attribute.key));\n\n\t// only add if something is being filtered\n\tlet needToAddNewFilter = false;\n\n\tif (newItem.attribute.isCategorical) {\n\t\tfor (let { isSelected } of newItem.attributeValueList)\n\t\t\tif (!isSelected) { needToAddNewFilter = true; break; }\n\t}\n\telse if (!newItem.attribute.isCategorical)\n\t\tneedToAddNewFilter = newItem.attributeValueList[0] !== newItem.attributeValue[0]\n\t\t\t\t\t\t  || newItem.attributeValueList[1] !== newItem.attributeValue[1];\n\n\treturn needToAddNewFilter \n\t\t ? [ ...filteredAppliedFilterList, newItem ] \n\t\t : filteredAppliedFilterList;\n};","import { \n\tuseEffect, \n\tuseReducer, \n\tuseCallback \n} from 'react';\nimport {\n\tinitLinkPaneList,\n\tinitSourcePaneList,\n\tinitTargetPaneList,\n\ttoggleItemList,\n\tselectItemList,\n\tupdateSourcePaneList,\n\tupdateTargetPaneList,\n} from './updateDataSelectionPanes';\nimport {\n\tupdateLinkTypeList,\n\tupdateLinkTypeListColor,\n\tupdateLinkList\n} from './updateVisualizationPane';\nimport { \n\tupdateTimelineSliderState,\n\tgenerateTimelineSliderMin,\n\tgenerateTimelineSliderMax\n} from './updateTimelineSlider';\nimport { \n\tupdateDetailPaneState,\n\tcheckIsDirected,\n\tcheckIsWeighted,\n\tcheckIsNetworkMetric,\n\tgenerateSubOption1List,\n\tgenerateSubOption2List,\n\tcheckIsOverflown\n} from './updateDetailPane';\nimport {\n\tinitColorPaneState,\n\tgenerateColorPaneAttribute,\n\tupdateAppliedColoringList\n} from './updateColorPane';\nimport {\n\tinitFilterPaneState,\n\tgenerateFilterPaneAttributeValueList,\n\tgenerateFilterPaneAttributeValue,\n\tupdateAppliedFilterList\n} from './updateFilterPane';\nimport { \n\ttimelineSliderOptions \n} from '../config';\n\nconst initialState = {\n\tlinkPane: { list: [] },\n\tsourcePane: { list: [] },\n\ttargetPane: { list: [] },\n\tvisualizationPane: { \n\t\tlinkTypeList: [], // for generating legend and Defs\n\t\tlinkList: [], // for generating links\n\t\tlinkTypeToColor: {} // for preserving color change\n\t},\n\tcolorPicker: {\n\t\tisOpen: false,\n\t\tlinkKey: null,\n\t\tcurrColor: null,\n\t\tcolorTop: null,\n\t\tcolorLeft: null,\n\t\tcolorWidth: null,\n\t\tcolorHeight: null\n\t},\n\ttimelineSlider: {\n\t\tyearAttribute: timelineSliderOptions['no-filter'],\n\t\tyearAttributeList: [ timelineSliderOptions['no-filter'] ],\n\t\tmin: new Date().getFullYear() - 10, \n\t\tmax: new Date().getFullYear() + 10, \n\t\tvalue: new Date().getFullYear()\n\t},\n\tdetailPane: { \n\t\tisOpen: false,\n\t\tmainOption: null,\n\t\tmainOptionList: [ null ],\n\t\tsubOption1: null,\n\t\tsubOption1List: [ null ],\n\t\tsubOption2: null,\n\t\tsubOption2List: [ null ]\n\t},\n\tcolorPane: {\n\t\tisOpen: false,\n\t\tdataSetList: [ null ],\n\t\tdataSet: null,\n\t\tattributeList: [ null ],\n\t\tattribute: null,\n\t\tappliedColoringList: [] // { dataSet, attribute }\n\t},\n\tfilterPane: {\n\t\tisOpen: false,\n\t\tdataSetList: [ null ],\n\t\tdataSet: null,\n\t\tattributeList: [ null ],\n\t\tattribute: null,\n\t\t// categorical: { key, displayName, isSelected }\n\t\t// numerical: [ lower, upper ]\n\t\tattributeValueList: [ null ],\n\t\t// categorical: not matter\n\t\t// numerical: [ selected lower, selected upper ]\n\t\tattributeValue: null,\n\t\tappliedFilterList: [] // { dataSet, attribute, attributeValueList (no need to compute again), attributeValue } \n\t},\n\tsearchWindow: { isOpen: false },\n\treference: { isOpen: false },\n\thover: { object: null, data: null },\n\tfocus: { object: null, data: null },\n\tisLoading: true\n};\n\nconst reducer = (prevState, dataState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INIT_INTERFACE': {\n\t\t\tconst { \n\t\t\t\tnodeList,\n\t\t\t\tlinkDataList, \n\t\t\t\ttimeSeriesDataList, \n\t\t\t\tcountryIDToData \n\t\t\t} = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = initLinkPaneList(linkDataList);\n\t\t\tconst newColorPaneState = initColorPaneState(newLinkPaneList);\n\t\t\tconst newFilterPaneState = initFilterPaneState(newLinkPaneList);\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewLinkTypeToColor \n\t\t\t] = updateLinkTypeList(\n\t\t\t\tnewLinkPaneList,\n\t\t\t\tnewColorPaneState.appliedColoringList,\n\t\t\t\tnewFilterPaneState.appliedFilterList,\n\t\t\t\tprevLinkTypeToColor,\n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tnewColorPaneState.appliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState,\n\t\t\t\tcolorPane: newColorPaneState,\n\t\t\t\tfilterPane: newFilterPaneState,\n\t\t\t\tisLoading: false\n\t\t\t};\n\t\t}\n\n\t\t// data selection pane\n\n\t\tcase 'SELECT_LINK_PANE_ITEM': {\n\t\t\tconst { linkKey } = action;\n\t\t\tconst { \n\t\t\t\ttimeSeriesDataList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst {\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList },\n\t\t\t\tfilterPane: { appliedFilterList: prevAppliedFilterList }\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = toggleItemList(prevLinkPaneList, linkKey);\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewLinkTypeToColor \n\t\t\t] = updateLinkTypeList(\n\t\t\t\tnewLinkPaneList, \n\t\t\t\tprevAppliedColoringList, \n\t\t\t\tprevAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = updateSourcePaneList(newLinkTypeList, prevSourcePaneList);\n\t\t\tconst newTargetPaneList = updateTargetPaneList(newLinkTypeList, prevTargetPaneList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_LINK_PANE_ITEMS': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst { \n\t\t\t\ttimeSeriesDataList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList },\n\t\t\t\tfilterPane: { appliedFilterList: prevAppliedFilterList }\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = selectItemList(prevLinkPaneList, isSelected);\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewLinkTypeToColor \n\t\t\t] = updateLinkTypeList(\n\t\t\t\tnewLinkPaneList, \n\t\t\t\tprevAppliedColoringList, \n\t\t\t\tprevAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = updateSourcePaneList(newLinkTypeList, prevSourcePaneList);\n\t\t\tconst newTargetPaneList = updateTargetPaneList(newLinkTypeList, prevTargetPaneList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_SOURCE_PANE_ITEM': {\n\t\t\tconst { sourceKey } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { linkTypeList: prevLinkTypeList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst newSourcePaneList = toggleItemList(prevSourcePaneList, sourceKey);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tprevTargetPaneList, \n\t\t\t\tprevTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\t...prevState.visualizationPane, \n\t\t\t\t\tlinkList: newLinkList \n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_SOURCE_PANE_ITEMS': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { linkTypeList: prevLinkTypeList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst newSourcePaneList = selectItemList(prevSourcePaneList, isSelected);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tprevTargetPaneList, \n\t\t\t\tprevTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\t...prevState.visualizationPane, \n\t\t\t\t\tlinkList: newLinkList \n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_TARGET_PANE_ITEM': {\n\t\t\tconst { targetKey } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { linkTypeList: prevLinkTypeList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst newTargetPaneList = toggleItemList(prevTargetPaneList, targetKey);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tprevSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tprevTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\t...prevState.visualizationPane, \n\t\t\t\t\tlinkList: newLinkList\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_TARGET_PANE_ITEMS': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { linkTypeList: prevLinkTypeList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst newTargetPaneList = selectItemList(prevTargetPaneList, isSelected);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tprevSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tprevTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\t...prevState.visualizationPane, \n\t\t\t\t\tlinkList: newLinkList\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_DATA_SELECTION_PANE_ITEM': {\n\t\t\tconst { textEl } = action;\n\t\t\tconst { top, height } = textEl.getBoundingClientRect();\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'DATA_SELECTION_PANE_ITEM', \n\t\t\t\tdata: { \n\t\t\t\t\tleft: 240, // avoid blocking the close button \n\t\t\t\t\ttop: top - 8 + height / 2,\n\t\t\t\t\ttext: textEl.innerText\n\t\t\t\t}\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_DATA_SELECTION_PANE_ITEM': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\n\t\t// visualizataion pane\n\n\t\tcase 'CHANGE_TIMELINE_SLIDER': {\n\t\t\tconst { value } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst {\n\t\t\t\tvisualizationPane: { linkTypeList: prevLinkTypeList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst newTimelineSliderState = { ...prevTimelineSliderState, value };\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tprevSourcePaneList, \n\t\t\t\tprevTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\t...prevState.visualizationPane, \n\t\t\t\t\tlinkList: newLinkList\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_YEAR_ATTRIBUTE': {\n\t\t\tconst { yearAttribute } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst {\n\t\t\t\tvisualizationPane: { linkTypeList: prevLinkTypeList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst newTimelineSliderState = yearAttribute.key === 'no-filter' ? {\n\t\t\t\t...prevTimelineSliderState, \n\t\t\t\tyearAttribute: yearAttribute,\n\t\t\t\tmin: new Date().getFullYear() - 10, \n\t\t\t\tmax: new Date().getFullYear() + 10, \n\t\t\t\tvalue: new Date().getFullYear()\n\t\t\t} : {\n\t\t\t\t...prevTimelineSliderState,\n\t\t\t\tyearAttribute: yearAttribute,\n\t\t\t\tmin: generateTimelineSliderMin(prevLinkTypeList, yearAttribute),\n\t\t\t\tmax: generateTimelineSliderMax(prevLinkTypeList, yearAttribute),\n\t\t\t\tvalue: yearAttribute.type === 'point' ? new Date().getFullYear() : [\n\t\t\t\t\tgenerateTimelineSliderMin(prevLinkTypeList, yearAttribute),\n\t\t\t\t\tgenerateTimelineSliderMax(prevLinkTypeList, yearAttribute)\n\t\t\t\t]\n\t\t\t};\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tprevSourcePaneList, \n\t\t\t\tprevTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(newLinkList, timeSeriesDataList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\t...prevState.visualizationPane, \n\t\t\t\t\tlinkList: newLinkList\n\t\t\t\t},\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_VIS_PANE_LABEL': {\n\t\t\tconst { nodeID } = action;\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'NODE', \n\t\t\t\tdata: { nodeID }\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_VIS_PANE_LABEL': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'MOUSE_MOVE_VIS_PANE_LINK': {\n\t\t\tconst { \n\t\t\t\ttop, \n\t\t\t\tleft,\n\t\t\t\tsourceID, \n\t\t\t\ttargetID, \n\t\t\t\tlinkType,\n\t\t\t\tlinkRowList, \n\t\t\t\ttooltipAttrList,\n\t\t\t\teventName\n\t\t\t} = action;\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'LINK', \n\t\t\t\tdata: {\n\t\t\t\t\ttop, \n\t\t\t\t\tleft,\n\t\t\t\t\tsourceID, \n\t\t\t\t\ttargetID,\n\t\t\t\t\tlinkType,\n\t\t\t\t\tlinkRowList, \n\t\t\t\t\ttooltipAttrList,\n\t\t\t\t\teventName\n\t\t\t\t}\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_VIS_PANE_LINK': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'CLICK_VIS_PANE_LINK': {\n\t\t\tconst {\n\t\t\t\tsourceID, \n\t\t\t\ttargetID, \n\t\t\t\tlinkRowList, \n\t\t\t\tdataTableAttrList,\n\t\t\t\teventName\n\t\t\t} = action;\n\n\t\t\treturn { ...prevState, \n\t\t\t\tfocus: { object: 'LINK', data: {\n\t\t\t\t\tsourceID, \n\t\t\t\t\ttargetID, \n\t\t\t\t\tlinkRowList, \n\t\t\t\t\tdataTableAttrList,\n\t\t\t\t\teventName\n\t\t\t\t} },\n\t\t\t\thover: { object: null, data: null } // when click on link, remove highlight and tooltip\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_POP_UP_WINDOW': {\n\t\t\treturn { ...prevState, focus: { object: null, data: null } };\n\t\t}\n\t\tcase 'OPEN_COLOR_PICKER': {\n\t\t\tconst { linkKey, currColor, colorEl } = action;\n\t\t\tconst { top, left, width, height } = colorEl.getBoundingClientRect();\n\n\t\t\treturn { ...prevState, \n\t\t\t\tcolorPicker: { \n\t\t\t\t\tisOpen: true,\n\t\t\t\t\tlinkKey: linkKey,\n\t\t\t\t\tcurrColor: currColor,\n\t\t\t\t\tcolorTop: top - 8,\n\t\t\t\t\tcolorLeft: left - 8,\n\t\t\t\t\tcolorWidth: width,\n\t\t\t\t\tcolorHeight: height\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_COLOR_PICKER': {\n\t\t\treturn { ...prevState, \n\t\t\t\tcolorPicker: { \n\t\t\t\t\tisOpen: false, \n\t\t\t\t\tlinkKey: null,\n\t\t\t\t\tcurrColor: null,\n\t\t\t\t\tcolorTop: null,\n\t\t\t\t\tcolorLeft: null,\n\t\t\t\t\tcolorWidth: null,\n\t\t\t\t\tcolorHeight: null\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_COLOR': {\n\t\t\tconst { linkKey, newColor } = action;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkTypeList: prevLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: prevLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList }\n\t\t\t} = prevState;\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewLinkTypeToColor \n\t\t\t] = updateLinkTypeListColor(\n\t\t\t\tprevLinkTypeList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tlinkKey, \n\t\t\t\tnewColor\n\t\t\t);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tprevSourcePaneList, \n\t\t\t\tprevTargetPaneList, \n\t\t\t\tprevTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tvisualizationPane: {\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tcolorPicker: { \n\t\t\t\t\tisOpen: false, \n\t\t\t\t\tlinkKey: null,\n\t\t\t\t\tcurrColor: null,\n\t\t\t\t\tcolorTop: null,\n\t\t\t\t\tcolorLeft: null,\n\t\t\t\t\tcolorWidth: null,\n\t\t\t\t\tcolorHeight: null\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_CONTROL_BUTTON': {\n\t\t\tconst { buttonEl, text, isDark } = action;\n\t\t\tconst buttonBBox = buttonEl.getBoundingClientRect();\n\t\t\tconst top = buttonBBox.top - 8 + buttonBBox.height / 2;\n\t\t\tconst left = buttonBBox.left - 8 - 8;\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'CONTROL_BUTTON', \n\t\t\t\tdata: { top, left, text, isDark }\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_CONTROL_BUTTON': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\n\t\t// search window\n\n\t\tcase 'OPEN_SEARCH_WINDOW': {\n\t\t\treturn { ...prevState, \n\t\t\t\tsearchWindow: {  isOpen: true },\n\t\t\t\thover: { object: null, data: null }\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_SEARCH_WINDOW': {\n\t\t\treturn { ...prevState, searchWindow: {  isOpen: false } };\n\t\t}\n\n\t\t// detail pane\n\n\t\tcase 'TOGGLE_DETAIL_PANE': {\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst {\n\t\t\t\tvisualizationPane: { linkList: prevLinkList },\n\t\t\t\tdetailPane: { isOpen: prevIsOpen },\n\t\t\t\tcolorPane: prevColorPaneState,\n\t\t\t\tfilterPane: prevFilterPaneState\n\t\t\t} = prevState;\n\t\t\tconst newDetailPaneState = updateDetailPaneState(prevLinkList, timeSeriesDataList, { \n\t\t\t\t...prevState.detailPane, isOpen: !prevIsOpen \n\t\t\t});\n\t\t\tconst newColorPaneState = { ...prevColorPaneState, isOpen: false }; // always close\n\t\t\tconst newFilterPaneState = { ...prevFilterPaneState, isOpen: false }; // always close\n\n\t\t\treturn { ...prevState, \n\t\t\t\tdetailPane: newDetailPaneState,\n\t\t\t\tcolorPane: newColorPaneState,\n\t\t\t\tfilterPane: newFilterPaneState,\n\t\t\t\thover: { object: null, data: null } // remove tooltip when open or close\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_DETAIL_PANE_MAIN_OPTION': {\n\t\t\tconst { option: newMainOption } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { visualizationPane: { linkList: prevLinkList } } = prevState;\n\t\t\tconst isDirected = checkIsDirected(prevLinkList);\n\t\t\tconst isWeighted = checkIsWeighted(prevLinkList);\n\t\t\tconst isNetworkMetric = checkIsNetworkMetric(newMainOption);\n\t\t\tconst newSubOption1List = generateSubOption1List(timeSeriesDataList, newMainOption, isDirected);\n\t\t\tconst newSubOption1 = newSubOption1List[0];\n\t\t\tconst newSubOption2List = generateSubOption2List(timeSeriesDataList, newMainOption, isWeighted);\n\t\t\tconst newSubOption2 = !isNetworkMetric ? newSubOption2List[newSubOption2List.length - 1] : newSubOption2List[0];\n\n\t\t\treturn { ...prevState, detailPane: { ...prevState.detailPane,\n\t\t\t\tmainOption: newMainOption,\n\t\t\t\tsubOption1: newSubOption1,\n\t\t\t\tsubOption1List: newSubOption1List,\n\t\t\t\tsubOption2: newSubOption2,\n\t\t\t\tsubOption2List: newSubOption2List\n\t\t\t} };\n\t\t}\n\t\tcase 'SELECT_DETAIL_PANE_SUB_OPTION': {\n\t\t\tconst { key, option } = action;\n\n\t\t\treturn { ...prevState, \n\t\t\t\tdetailPane: { ...prevState.detailPane, [ key ]: option }\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_DETAIL_PANE_ITEM': {\n\t\t\tconst { itemEl, titleEl, titleText, itemData } = action;\n\t\t\tconst isHoveredNode = 'nodeID' in itemData;\n\t\t\tconst hoverStateObject = isHoveredNode ? 'DETAIL_PANE_NODE' : 'DETAIL_PANE_LINK';\n\t\t\tconst hoverStateData = { ...itemData, showTooltip: false };\n\t\t\tconst isTextTooLong = checkIsOverflown(titleEl);\n\n\t\t\tif (isTextTooLong) {\n\t\t\t\tconst itemBBox = itemEl.getBoundingClientRect();\n\t\t\t\tconst right = 250 + 5; // 250 is width of detail pane\n\t\t\t\tconst top = itemBBox.top - 8 + itemBBox.height / 2;\n\n\t\t\t\thoverStateData.showTooltip = true;\n\t\t\t\thoverStateData.right = right;\n\t\t\t\thoverStateData.top = top;\n\t\t\t\thoverStateData.text = titleText;\n\t\t\t}\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: hoverStateObject, \n\t\t\t\tdata: hoverStateData \n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_DETAIL_PANE_ITEM': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'CLICK_DETAIL_PANE_DETAIL_BUTTON': {\n\t\t\tconst { mainOption, subOption1, subOption2, entryList } = action;\n\t\t\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\t\t\tconst focusStateObject = isSelectedNetworkMetric ? 'BAR_LIST' : 'SPARK_LINE_LIST';\n\t\t\tconst headerText = isSelectedNetworkMetric ? `${ mainOption } (${ subOption1 } + ${ subOption2 })` : mainOption;\n\t\t\tconst focusStateData = { headerText, entryList };\n\n\t\t\treturn { ...prevState, focus: { \n\t\t\t\tobject: focusStateObject, \n\t\t\t\tdata: focusStateData \n\t\t\t} };\n\t\t}\n\n\t\t// color pane\n\n\t\tcase 'TOGGLE_COLOR_PANE': {\n\t\t\tconst {\n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: prevColorPaneState,\n\t\t\t\tfilterPane: prevFilterPaneState\n\t\t\t} = prevState;\n\t\t\tconst newDetailPaneState = { ...prevDetailPaneState, isOpen: false };\n\t\t\tconst newColorPaneState = { ...prevColorPaneState, isOpen: !prevColorPaneState.isOpen };\n\t\t\tconst newFilterPaneState = { ...prevFilterPaneState, isOpen: false };\n\t\t\t\n\t\t\treturn { ...prevState, \n\t\t\t\tdetailPane: newDetailPaneState,\n\t\t\t\tcolorPane: newColorPaneState,\n\t\t\t\tfilterPane: newFilterPaneState,\n\t\t\t\thover: { object: null, data: null } // remove tooltip when open or close\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_COLOR_PANE_DATASET': {\n\t\t\tconst { option: newDataSet } = action;\n\t\t\tconst { colorPane: { \n\t\t\t\tdataSet: prevDataSet, \n\t\t\t\tappliedColoringList: prevAppliedColoringList \n\t\t\t} } = prevState;\n\t\t\tconst newAttributeList = [ { key: 'NONE', displayName: 'NONE' }, ...newDataSet.colorPane.attributeList ];\n\t\t\tconst newAttribute = generateColorPaneAttribute(newDataSet, newAttributeList, prevAppliedColoringList);\n\n\t\t\tif (newDataSet === prevDataSet)\n\t\t\t\treturn prevState;\n\n\t\t\treturn { ...prevState, colorPane: { ...prevState.colorPane,\n\t\t\t\tdataSet: newDataSet,\n\t\t\t\tattributeList: newAttributeList,\n\t\t\t\tattribute: newAttribute\n\t\t\t} };\n\t\t}\n\t\tcase 'SELECT_COLOR_PANE_ATTRIBUTE': {\n\t\t\tconst { option: newAttribute } = action;\n\t\t\tconst {\n\t\t\t\tnodeList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst {\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tcolorPane: { \n\t\t\t\t\tdataSet: prevDataSet, \n\t\t\t\t\tattribute: prevAttribute, \n\t\t\t\t\tappliedColoringList: prevAppliedColoringList \n\t\t\t\t},\n\t\t\t\tfilterPane: { appliedFilterList: prevAppliedFilterList }\n\t\t\t} = prevState;\n\t\t\tconst newAppliedColoringList = updateAppliedColoringList(prevAppliedColoringList, { \n\t\t\t\tdataSet: prevDataSet,\n\t\t\t\tattribute: newAttribute \n\t\t\t});\n\t\t\tconst [\n\t\t\t\tnewLinkTypeList,\n\t\t\t\tnewLinkTypeToColor\n\t\t\t] = updateLinkTypeList(\n\t\t\t\tprevLinkPaneList, \n\t\t\t\tnewAppliedColoringList, \n\t\t\t\tprevAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tnewAppliedColoringList\n\t\t\t);\n\n\t\t\tif (newAttribute === prevAttribute)\n\t\t\t\treturn prevState;\n\n\t\t\treturn { ...prevState,\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tcolorPane: { \n\t\t\t\t\t...prevState.colorPane,\n\t\t\t\t\tattribute: newAttribute,\n\t\t\t\t\tappliedColoringList: newAppliedColoringList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_COLOR_PANE_LIST_ITEM': {\n\t\t\tconst { listItem: selectedAppliedColoringListItem } = action;\n\t\t\tconst {\n\t\t\t\tnodeList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst {\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tcolorPane: { \n\t\t\t\t\tdataSet: prevDataSet, \n\t\t\t\t\tattributeList: prevAttributeList,\n\t\t\t\t\tappliedColoringList: prevAppliedColoringList\n\t\t\t\t},\n\t\t\t\tfilterPane: { appliedFilterList: prevAppliedFilterList }\n\t\t\t} = prevState;\n\t\t\tconst newAppliedColoringList = prevAppliedColoringList\n\t\t\t\t.filter(listItem => listItem !== selectedAppliedColoringListItem);\n\t\t\tconst newAttribute = generateColorPaneAttribute(prevDataSet, prevAttributeList, newAppliedColoringList);\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList,\n\t\t\t\tnewLinkTypeToColor\n\t\t\t] = updateLinkTypeList(\n\t\t\t\tprevLinkPaneList,\n\t\t\t\tnewAppliedColoringList,\n\t\t\t\tprevAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tnewAppliedColoringList\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tcolorPane: { \n\t\t\t\t\t...prevState.colorPane,\n\t\t\t\t\tattribute: newAttribute,\n\t\t\t\t\tappliedColoringList: newAppliedColoringList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// filter pane\n\n\t\tcase 'TOGGLE_FILTER_PANE': {\n\t\t\tconst { \n\t\t\t\tdetailPane: prevDetailPaneState,\n\t\t\t\tcolorPane: prevColorPaneState,\n\t\t\t\tfilterPane: prevFilterPaneState\n\t\t\t} = prevState;\n\t\t\tconst newDetailPaneState = { ...prevDetailPaneState, isOpen: false };\n\t\t\tconst newColorPaneState = { ...prevColorPaneState, isOpen: false };\n\t\t\tconst newFilterPaneState = { ...prevFilterPaneState, isOpen: !prevFilterPaneState.isOpen };\n\n\t\t\treturn { ...prevState, \n\t\t\t\tdetailPane: newDetailPaneState,\n\t\t\t\tcolorPane: newColorPaneState,\n\t\t\t\tfilterPane: newFilterPaneState,\n\t\t\t\thover: { object: null, data: null } // remove tooltip when open or close\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_FILTER_PANE_DATASET': {\n\t\t\tconst { option: newDataSet } = action;\n\t\t\tconst { filterPane: { dataSet: prevDataSet } } = prevState;\n\t\t\tconst newAttributeList = [ \n\t\t\t\t{ key: 'NONE', displayName: 'SELECT AN ATTRIBUTE' }, \n\t\t\t\t...newDataSet.filterPane.attributeList \n\t\t\t];\n\t\t\tconst newAttribute = newAttributeList[0];\n\t\t\tconst newAttributeValueList = [];\n\t\t\tconst newAttributeValue = '';\n\n\t\t\tif (newDataSet === prevDataSet)\n\t\t\t\treturn prevState;\n\n\t\t\treturn { ...prevState, filterPane: { ...prevState.filterPane,\n\t\t\t\tdataSet: newDataSet,\n\t\t\t\tattributeList: newAttributeList,\n\t\t\t\tattribute: newAttribute,\n\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\tattributeValue: newAttributeValue\n\t\t\t} };\n\t\t}\n\t\tcase 'SELECT_FILTER_PANE_ATTRIBUTE': {\n\t\t\tconst { option: newAttribute } = action;\n\t\t\tconst { countryIDToData } = dataState;\n\t\t\tconst { filterPane: { \n\t\t\t\tdataSet: prevDataSet, \n\t\t\t\tattribute: prevAttribute, \n\t\t\t\tappliedFilterList: prevAppliedFilterList \n\t\t\t} } = prevState;\n\t\t\tconst newAttributeValueList = generateFilterPaneAttributeValueList(prevDataSet, newAttribute, prevAppliedFilterList, countryIDToData);\n\t\t\tconst newAttributeValue = generateFilterPaneAttributeValue(prevDataSet, newAttribute, newAttributeValueList, prevAppliedFilterList);\n\n\t\t\tif (newAttribute === prevAttribute)\n\t\t\t\treturn prevState;\n\n\t\t\treturn { ...prevState, filterPane: { ...prevState.filterPane,\n\t\t\t\tattribute: newAttribute,\n\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\tattributeValue: newAttributeValue\n\t\t\t} };\n\t\t}\n\t\tcase 'SELECT_FILTER_PANE_CATEGORY': {\n\t\t\tconst { itemKey } = action;\n\t\t\tconst {\n\t\t\t\tnodeList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst {\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList },\n\t\t\t\tfilterPane: {\n\t\t\t\t\tdataSet: prevDataSet, \n\t\t\t\t\tattribute: prevAttribute, \n\t\t\t\t\tattributeValueList: prevAttributeValueList, \n\t\t\t\t\tappliedFilterList: prevAppliedFilterList\n\t\t\t\t} \n\t\t\t} = prevState;\n\t\t\tconst newAttributeValueList = prevAttributeValueList\n\t\t\t\t.map(listItem => listItem.key === itemKey ? { ...listItem, isSelected: !listItem.isSelected } : listItem);\n\t\t\tconst newAppliedFilterList = updateAppliedFilterList(prevAppliedFilterList, {\n\t\t\t\tdataSet: prevDataSet,\n\t\t\t\tattribute: prevAttribute,\n\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\tattributeValue: '' // categorical attr => ''\n\t\t\t});\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList,\n\t\t\t\tnewLinkTypeToColor\n\t\t\t] = updateLinkTypeList(\n\t\t\t\tprevLinkPaneList, \n\t\t\t\tprevAppliedColoringList, \n\t\t\t\tnewAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tfilterPane: { \n\t\t\t\t\t...prevState.filterPane,\n\t\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\t\tappliedFilterList: newAppliedFilterList\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_FILTER_PANE_CATEGORIES': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst {\n\t\t\t\tnodeList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst {\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList },\n\t\t\t\tfilterPane: {\n\t\t\t\t\tdataSet: prevDataSet, \n\t\t\t\t\tattribute: prevAttribute, \n\t\t\t\t\tattributeValueList: prevAttributeValueList, \n\t\t\t\t\tappliedFilterList: prevAppliedFilterList\n\t\t\t\t} \n\t\t\t} = prevState;\n\t\t\tconst newAttributeValueList = prevAttributeValueList\n\t\t\t\t.map(listItem => ({ ...listItem, isSelected: isSelected }));\n\t\t\tconst newAppliedFilterList = updateAppliedFilterList(prevAppliedFilterList, {\n\t\t\t\tdataSet: prevDataSet,\n\t\t\t\tattribute: prevAttribute,\n\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\tattributeValue: '' // categorical attr => ''\n\t\t\t});\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList,\n\t\t\t\tnewLinkTypeToColor\n\t\t\t] = updateLinkTypeList(\n\t\t\t\tprevLinkPaneList, \n\t\t\t\tprevAppliedColoringList, \n\t\t\t\tnewAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\t\t\t\n\t\t\treturn { ...prevState,\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tfilterPane: { \n\t\t\t\t\t...prevState.filterPane,\n\t\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\t\tappliedFilterList: newAppliedFilterList\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'CHANGE_FILTER_PANE_RANGE': {\n\t\t\tconst { value: newAttributeValue } = action;\n\t\t\tconst {\n\t\t\t\tnodeList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst {\n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList },\n\t\t\t\tfilterPane: {\n\t\t\t\t\tdataSet: prevDataSet, \n\t\t\t\t\tattribute: prevAttribute, \n\t\t\t\t\tattributeValueList: prevAttributeValueList, \n\t\t\t\t\tappliedFilterList: prevAppliedFilterList\n\t\t\t\t} \n\t\t\t} = prevState;\n\t\t\tconst newAppliedFilterList = updateAppliedFilterList(prevAppliedFilterList, { \n\t\t\t\tdataSet: prevDataSet, \n\t\t\t\tattribute: prevAttribute, \n\t\t\t\tattributeValueList: prevAttributeValueList, \n\t\t\t\tattributeValue: newAttributeValue \n\t\t\t});\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList,\n\t\t\t\tnewLinkTypeToColor\n\t\t\t] = updateLinkTypeList(\n\t\t\t\tprevLinkPaneList, \n\t\t\t\tprevAppliedColoringList, \n\t\t\t\tnewAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tfilterPane: { \n\t\t\t\t\t...prevState.filterPane,\n\t\t\t\t\tattributeValue: newAttributeValue,\n\t\t\t\t\tappliedFilterList: newAppliedFilterList\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_FILTER_PANE_FILTER': {\n\t\t\tconst { listItem: selectedFilter } = action;\n\t\t\tconst {\n\t\t\t\tnodeList,\n\t\t\t\tcountryIDToData\n\t\t\t} = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tvisualizationPane: { linkTypeToColor: prevLinkTypeToColor },\n\t\t\t\tcolorPane: { appliedColoringList: prevAppliedColoringList },\n\t\t\t\tfilterPane: { \n\t\t\t\t\tdataSet: prevDataSet,\n\t\t\t\t\tattribute: prevAttribute,\n\t\t\t\t\tappliedFilterList: prevAppliedFilterList \n\t\t\t\t} \n\t\t\t} = prevState;\n\t\t\tconst newAppliedFilterList = prevAppliedFilterList.filter(listItem => listItem !== selectedFilter);\n\t\t\tconst newAttributeValueList = generateFilterPaneAttributeValueList(prevDataSet, prevAttribute, newAppliedFilterList, countryIDToData);\n\t\t\tconst newAttributeValue = generateFilterPaneAttributeValue(prevDataSet, prevAttribute, newAttributeValueList, newAppliedFilterList);\n\t\t\tconst [ \n\t\t\t\tnewLinkTypeList,\n\t\t\t\tnewLinkTypeToColor\n\t\t\t] = updateLinkTypeList(\n\t\t\t\tprevLinkPaneList, \n\t\t\t\tprevAppliedColoringList, \n\t\t\t\tnewAppliedFilterList, \n\t\t\t\tprevLinkTypeToColor, \n\t\t\t\tcountryIDToData\n\t\t\t);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkTypeList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkTypeList);\n\t\t\tconst newLinkList = updateLinkList(\n\t\t\t\tnewLinkTypeList, \n\t\t\t\tnewSourcePaneList, \n\t\t\t\tnewTargetPaneList, \n\t\t\t\tnewTimelineSliderState,\n\t\t\t\tprevAppliedColoringList\n\t\t\t);\n\n\t\t\treturn { ...prevState, \n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { \n\t\t\t\t\tlinkList: newLinkList,\n\t\t\t\t\tlinkTypeList: newLinkTypeList,\n\t\t\t\t\tlinkTypeToColor: newLinkTypeToColor\n\t\t\t\t},\n\t\t\t\tfilterPane: { \n\t\t\t\t\t...prevState.filterPane,\n\t\t\t\t\tappliedFilterList: newAppliedFilterList,\n\t\t\t\t\tattributeValueList: newAttributeValueList,\n\t\t\t\t\tattributeValue: newAttributeValue\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\n\t\t// reference\n\n\t\tcase 'OPEN_REFERENCE': {\n\t\t\treturn { ...prevState, \n\t\t\t\treference: {  isOpen: true },\n\t\t\t\thover: { object: null, data: null }\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_REFERENCE': {\t\t\t\n\t\t\treturn { ...prevState, reference: {  isOpen: false } };\n\t\t}\n\n\t\t// default\n\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t\t}\n\t}\n};\n\nexport const useInterfaceState = dataState => {\n\tconst memoizedReducer = useCallback((prevState, action) => \n\t\treducer(prevState, dataState, action), [ dataState ]);\n\tconst [ interfaceState, dispatch ] = useReducer(memoizedReducer, initialState);\n\n\tuseEffect(() => {\n\t\tif (dataState.isLoading) \n\t\t\treturn;\n\t\t\n\t\tdispatch({ type: 'INIT_INTERFACE' });\n\t}, [ dataState ]);\n\n\treturn [ interfaceState, dispatch ];\n};","import './DataSelectionPaneItem.css';\n\nexport const DataSelectionPaneItem = ({\n\tisSelected,\n\tdisplayName,\n\thandleSelect,\n\thandleMouseEnter,\n\thandleMouseLeave\n}) => \n\t<label \n\t\tclassName=\"item\"\n\t\tonMouseEnter={ handleMouseEnter } \n\t\tonMouseLeave={ handleMouseLeave }\n\t>\n\t\t<input type=\"checkbox\" checked={ isSelected } onChange={ handleSelect } />\n\t\t<span className=\"checkmark\" />\n\t\t<span className=\"text\">{ displayName }</span>\n\t</label>","import { DataSelectionPaneItem } from './DataSelectionPaneItem';\nimport { FaRegSquare, FaRegCheckSquare } from \"react-icons/fa\";\nimport './DataSelectionPane.css';\n\nexport const DataSelectionPane = ({\n\tid, \n\theaderText, \n\theaderIcon, \n\titemList,\n\thandleSelectItem,\n\thandleClickSelectNone,\n\thandleClickSelectAll,\n\thandleMouseEnterItem,\n\thandleMouseLeaveItem\n}) =>\n\t<div className=\"data-selection-pane\" id={ id }>\n\t\t<div className=\"header\">\n\t\t\t{ headerIcon }<span className=\"text\">{ headerText }</span>\n\t\t</div>\n\t\t<div className=\"content\">\n\t\t\t{ itemList\n\t\t\t\t.filter(itemObject => itemObject.isShown)\n\t\t\t\t.map(itemObject => \n\t\t\t\t\t<DataSelectionPaneItem\n\t\t\t\t\t\tkey={ itemObject.key }\n\t\t\t\t\t\tisSelected={ itemObject.isSelected }\n\t\t\t\t\t\tdisplayName={ itemObject.displayName }\n\t\t\t\t\t\thandleSelect={ () => { handleSelectItem(itemObject.key) } }\n\t\t\t\t\t\thandleMouseEnter={ handleMouseEnterItem }\n\t\t\t\t\t\thandleMouseLeave={ handleMouseLeaveItem }\n\t\t\t\t\t/>) }\n\t\t</div>\n\t\t<div className=\"footer\">\n\t\t\t<span className=\"select-none button\" onClick={ handleClickSelectNone }>\n\t\t\t\t<FaRegSquare/><span className=\"text\">Select None</span>\n\t\t\t</span>\n\t\t\t<span className=\"select-all button\" onClick={ handleClickSelectAll }>\n\t\t\t\t<FaRegCheckSquare/><span className=\"text\">Select All</span>\n\t\t\t</span>\n\t\t</div>\n\t</div>","import $ from 'jquery';\nimport { memo } from 'react'; // avoid re-rendering on tooltip and time slider changes\nimport { DataSelectionPane } from './DataSelectionPane';\nimport { BiNetworkChart } from 'react-icons/bi';\nimport { CgSoftwareUpload, CgSoftwareDownload } from \"react-icons/cg\";\n\nconst checkIsOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) => \n\tscrollHeight > clientHeight || scrollWidth > clientWidth;\n\nexport const DataSelectionPanes = memo(({\n\tlinkPaneList,\n\tsourcePaneList,\n\ttargetPaneList,\n\tdispatch\n}) => {\n\tconst handleSelectLink = linkKey => \n\t\tdispatch({ type: 'SELECT_LINK_PANE_ITEM', linkKey });\n\tconst handleSelectLinks = isSelected => \n\t\tdispatch({ type: 'SELECT_LINK_PANE_ITEMS', isSelected });\n\tconst handleSelectSource = sourceKey => \n\t\tdispatch({ type: 'SELECT_SOURCE_PANE_ITEM', sourceKey });\n\tconst handleSelectSources = isSelected => \n\t\tdispatch({ type: 'SELECT_SOURCE_PANE_ITEMS', isSelected });\n\tconst handleSelectTarget = targetKey => \n\t\tdispatch({ type: 'SELECT_TARGET_PANE_ITEM', targetKey });\n\tconst handleSelectTargets = isSelected => \n\t\tdispatch({ type: 'SELECT_TARGET_PANE_ITEMS', isSelected });\n\tconst handleMouseEnterItem = event => {\n\t\tconst textEl = $(event.target).closest('.item').find('.text')[0];\n\t\tconst isTextTooLong = checkIsOverflown(textEl);\n\n\t\tif (isTextTooLong)\n\t\t\tdispatch({ type: 'MOUSE_ENTER_DATA_SELECTION_PANE_ITEM', textEl });\n\t};\n\tconst handleMouseLeaveItem = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_DATA_SELECTION_PANE_ITEM' });\n\n\treturn (\n\t\t<>\n\t\t\t<DataSelectionPane\n\t\t\t\tid=\"link-pane\" \n\t\t\t\theaderIcon={ <BiNetworkChart /> }\n\t\t\t\theaderText=\"Links\" \n\t\t\t\titemList={ linkPaneList }\n\t\t\t\thandleSelectItem={ handleSelectLink }\n\t\t\t\thandleClickSelectNone={ () => { handleSelectLinks(false) } }\n\t\t\t\thandleClickSelectAll={ () => { handleSelectLinks(true) } }\n\t\t\t\thandleMouseEnterItem={ handleMouseEnterItem }\n\t\t\t\thandleMouseLeaveItem={ handleMouseLeaveItem }\n\t\t\t/>\n\t\t\t<DataSelectionPane \n\t\t\t\tid=\"source-pane\"\n\t\t\t\theaderIcon={ <CgSoftwareUpload /> }\n\t\t\t\theaderText=\"Sources\" \n\t\t\t\titemList={ sourcePaneList }\n\t\t\t\thandleSelectItem={ handleSelectSource }\n\t\t\t\thandleClickSelectNone={ () => { handleSelectSources(false) } }\n\t\t\t\thandleClickSelectAll={ () => { handleSelectSources(true) } }\n\t\t\t\thandleMouseEnterItem={ handleMouseEnterItem }\n\t\t\t\thandleMouseLeaveItem={ handleMouseLeaveItem }\n\t\t\t/>\n\t\t\t<DataSelectionPane \n\t\t\t\tid=\"target-pane\" \n\t\t\t\theaderIcon={ <CgSoftwareDownload /> }\n\t\t\t\theaderText=\"Targets\" \n\t\t\t\titemList={ targetPaneList }\n\t\t\t\thandleSelectItem={ handleSelectTarget }\n\t\t\t\thandleClickSelectNone={ () => { handleSelectTargets(false) } }\n\t\t\t\thandleClickSelectAll={ () => { handleSelectTargets(true) } }\n\t\t\t\thandleMouseEnterItem={ handleMouseEnterItem }\n\t\t\t\thandleMouseLeaveItem={ handleMouseLeaveItem }\n\t\t\t/>\n\t\t</>\n\t);\n});","import { useState, useEffect } from 'react';\nimport { \n\tzoom, \n\tselect,\n\tzoomIdentity,\n\tgeoNaturalEarth1,\n\tgeoPath\n} from 'd3';\n\nexport const margin = {\n\ttop: 30, \n\tleft: -51, \n\tbottom: 60, // more space for the timeline slider\n\tright: 10\n};\n\nexport const useProjection = (SVGRef, landData) => {\n\tconst [ projectionState, setProjection ] = useState({\n\t\tprojection: null,\n\t\tpath: null,\n\t\tzoomHandler: null,\n\t\tisLoading: true\n\t});\n\n\tuseEffect(() => {\n\t\tif (SVGRef.current === null ||\n\t\t\tlandData === null)\n\t\t\treturn;\n\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst { width, height } = SVGEl.getBoundingClientRect();\n\t\tconst projection = geoNaturalEarth1()\n\t\t\t.fitExtent([ \n\t\t\t\t[ margin.left, margin.top ], \n\t\t\t\t[ width - margin.right, height - margin.bottom ] \n\t\t\t], landData);\n\t\tconst path = geoPath(projection);\n\t\tconst initialScale = projection.scale();\n\t\tconst initialTranslate = projection.translate();\n\t\tconst zoomHandler = zoom()\n\t\t\t.scaleExtent([ \n\t\t\t\tinitialScale * 0.8, \n\t\t\t\tinitialScale * 10 \n\t\t\t]);\n\n\t\tzoomHandler.on('zoom', e => {\n\t\t\tconst newScale = e.transform.k;\n\t\t\tconst newTranslate = [ e.transform.x, e.transform.y ];\n\n\t\t\tsetProjection(prevProjectionState => {\n\t\t\t\tif (!prevProjectionState.projection)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprojection,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tzoomHandler,\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t};\n\t\t\t\tif (prevProjectionState.projection) {\n\t\t\t\t\tprevProjectionState.projection\n\t\t\t\t\t\t.translate(newTranslate)\n\t\t\t\t\t\t.scale(newScale);\n\n\t\t\t\t\treturn { ...prevProjectionState }; // re-render on zoom\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tselect(SVGEl)\n\t\t\t.call(zoomHandler)\n\t\t\t.call(\n\t\t\t\tzoomHandler.transform, \n\t\t\t\tzoomIdentity\n\t\t\t\t\t.translate(...initialTranslate)\n\t\t\t\t\t.scale(initialScale)\n\t\t\t);\n\t\treturn () => { \n\t\t\tselect(SVGEl).on('.zoom', null) \n\t\t};\n\t}, [ SVGRef, landData ]);\n\n\treturn projectionState;\n};","import $ from 'jquery';\nimport { memo } from 'react';\nimport './VisualizationPaneLegend.css';\n\nexport const VisualizationPaneLegend = memo(({ linkTypeList, dispatch }) => {\n\tconst handleClickColor = (e, linkKey, currColor) => \n\t\tdispatch({ \n\t\t\ttype: 'OPEN_COLOR_PICKER',\n\t\t\tlinkKey: linkKey, \n\t\t\tcurrColor: currColor,\n\t\t\tcolorEl: $(e.target).closest('.legend-item').find('span.color')[0]\n\t\t});\n\n\treturn (\n\t\t<div className=\"visualization-pane-legend\">\n\t\t\t{ linkTypeList.map(({ key, color, displayName, isSegment, parentLinkDataObject  }) =>\n\t\t\t\t<div\n\t\t\t\t\tkey={ key }\n\t\t\t\t\tclassName=\"legend-item\"\n\t\t\t\t\tonClick={ e => { handleClickColor(e, key, color) } }\n\t\t\t\t>\n\t\t\t\t\t<span className=\"color\" style={{ background: color, color: color }} />\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\t{ !isSegment ? displayName : `${ parentLinkDataObject.displayName } (${ displayName })` }\n\t\t\t\t\t</span>\n\t\t\t\t</div>) }\n\t\t</div>\n\t);\n});","import $ from 'jquery';\nimport { memo } from 'react';\nimport { select, geoNaturalEarth1, zoomIdentity } from 'd3';\nimport { \n\tBiZoomIn, \n\tBiZoomOut, \n\tBiCurrentLocation, \n\tBiSearch, \n\tBiDetail,\n\tBiColorFill,\n\tBiFilterAlt,\n\tBiInfoCircle\n} from \"react-icons/bi\";\nimport { IoCloseCircle } from \"react-icons/io5\";\nimport { margin } from '../useVisualizationPane/useProjection';\nimport './VisualizationPaneControls.css';\n\nexport const VisualizationPaneControls = memo(({\n\tSVGRef, \n\tlandData, \n\tprojectionState,\n\tdetailPaneIsOpen,\n\tcolorPaneIsOpen,\n\tfilterPaneIsOpen,\n\tdispatch\n}) => {\n\tconst handleMouseEnterButton = event => dispatch({ \n\t\ttype: 'MOUSE_ENTER_CONTROL_BUTTON',\n\t\tbuttonEl: $(event.target).closest('.button')[0],\n\t\ttext: $(event.target).closest('.button').attr('tooltip-text'),\n\t\tisDark: $(event.target).closest('.button').hasClass('dark')\n\t});\n\tconst handleMouseLeaveButton = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_CONTROL_BUTTON' });\n\n\tconst handleClickZoomInBtn = () => {\n\t\tconst { zoomHandler } = projectionState;\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst SVG = select(SVGEl)\n\t\t\t.transition()\n\t\t\t.duration(400);\n\n\t\tzoomHandler.scaleBy(SVG, 2);\n\t};\n\tconst handleClickZoomOutBtn = () => {\n\t\tconst { zoomHandler } = projectionState;\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst SVG = select(SVGEl)\n\t\t\t.transition()\n\t\t\t.duration(400);\n\n\t\tzoomHandler.scaleBy(SVG, 1 / 2);\n\t};\n\tconst handleClickResetBtn = () => {\n\t\tconst { zoomHandler } = projectionState;\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst SVG = select(SVGEl)\n\t\t\t.transition()\n\t\t\t.duration(400);\n\n\t\tconst { width, height } = SVGEl.getBoundingClientRect();\n\t\tconst projection = geoNaturalEarth1()\n\t\t\t.fitExtent([ \n\t\t\t\t[ margin.left, margin.top ], \n\t\t\t\t[ width - margin.right, height - margin.bottom ] \n\t\t\t], landData);\n\t\tconst initialScale = projection.scale();\n\t\tconst initialTranslate = projection.translate();\n\n\t\t // reset translate because screen size may have changed\n\t\t zoomHandler.scaleExtent([ \n\t\t\tinitialScale * 0.8, \n\t\t\tinitialScale * 10 \n\t\t]);\n\t\tSVG.call(\n\t\t\tzoomHandler.transform, \n\t\t\tzoomIdentity\n\t\t\t\t.translate(...initialTranslate)\n\t\t\t\t.scale(initialScale)\n\t\t);\n\t};\n\tconst handleClickSearchWindowBtn = () => \n\t\tdispatch({ type: 'OPEN_SEARCH_WINDOW' });\n\tconst handleClickDetailPaneBtn = () =>\n\t\tdispatch({ type: 'TOGGLE_DETAIL_PANE' });\n\tconst handleClickColorPaneBtn = () =>\n\t\tdispatch({ type: 'TOGGLE_COLOR_PANE' });\n\tconst handleClickFilterPaneBtn = () => \n\t\tdispatch({ type: 'TOGGLE_FILTER_PANE' });\n\tconst handleClickReferenceButton = () => \n\t\tdispatch({ type: 'OPEN_REFERENCE' });\n\n\treturn (\n\t\t<div className=\"controls\">\n\t\t\t<div\n\t\t\t\tclassName=\"zoom-in-btn button\"\n\t\t\t\ttooltip-text=\"Zoom in\"\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\tonClick={ handleClickZoomInBtn }\n\t\t\t><BiZoomIn /></div>\n\t\t\t<div\n\t\t\t\tclassName=\"zoom-out-btn button\"\n\t\t\t\ttooltip-text=\"Zoom out\"\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\tonClick={ handleClickZoomOutBtn }\n\t\t\t><BiZoomOut /></div>\n\t\t\t<div \n\t\t\t\tclassName=\"reset-btn button\"\n\t\t\t\ttooltip-text=\"Reset zoom and pan\"\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\tonClick={ handleClickResetBtn }\n\t\t\t><BiCurrentLocation /></div>\n\t\t\t<div \n\t\t\t\tclassName=\"search-window-btn button\"\n\t\t\t\ttooltip-text=\"Open search window\"\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\tonClick={ handleClickSearchWindowBtn }\n\t\t\t><BiSearch /></div>\n\t\t\t{ !detailPaneIsOpen ? \n\t\t\t\t<div \n\t\t\t\t\tclassName=\"detail-pane-btn button\"\n\t\t\t\t\ttooltip-text=\"Show details of current network\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickDetailPaneBtn }\n\t\t\t\t><BiDetail /></div> :\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"detail-pane-btn button dark\"\n\t\t\t\t\ttooltip-text=\"Close right pane\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickDetailPaneBtn }\n\t\t\t\t><IoCloseCircle /></div>\n\t\t\t}\n\t\t\t{ !colorPaneIsOpen ?\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"color-pane-btn button\"\n\t\t\t\t\ttooltip-text=\"Color links\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickColorPaneBtn }\n\t\t\t\t><BiColorFill /></div> :\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"color-pane-btn button dark\"\n\t\t\t\t\ttooltip-text=\"Close right pane\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickColorPaneBtn }\n\t\t\t\t><IoCloseCircle /></div> }\n\t\t\t{ !filterPaneIsOpen ?\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"filter-pane-btn button\"\n\t\t\t\t\ttooltip-text=\"Filter links\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickFilterPaneBtn }\n\t\t\t\t><BiFilterAlt /></div> :\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"filter-pane-btn button dark\"\n\t\t\t\t\ttooltip-text=\"Close right pane\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickFilterPaneBtn }\n\t\t\t\t><IoCloseCircle /></div> }\n\t\t\t<div\n\t\t\t\tclassName=\"reference button\"\n\t\t\t\ttooltip-text=\"References\"\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\tonClick={ handleClickReferenceButton }\n\t\t\t><BiInfoCircle /></div>\n\t\t</div>\n\t);\n}, (prevProps, nextProps) => {\n\tconst { \n\t\tSVGRef: prevSVGRef,\n\t\tlandData: prevLandData,\n\t\tprojectionState: { zoomHandler: prevZoomHandler },\n\t\tdetailPaneIsOpen: prevDetailPaneIsOpen,\n\t\tcolorPaneIsOpen: prevColorPaneIsOpen,\n\t\tfilterPaneIsOpen: prevFilterPaneIsOpen\n\t} = prevProps;\n\tconst { \n\t\tSVGRef: nextSVGRef,\n\t\tlandData: nextLandData,\n\t\tprojectionState: { zoomHandler: nextZoomHandler\t},\n\t\tdetailPaneIsOpen: nextDetailPaneIsOpen,\n\t\tcolorPaneIsOpen: nextColorPaneIsOpen,\n\t\tfilterPaneIsOpen: nextFilterPaneIsOpen\n\t} = nextProps;\n\n\treturn prevSVGRef === nextSVGRef &&\n\t\t   prevLandData === nextLandData &&\n\t\t   prevZoomHandler === nextZoomHandler &&\n\t\t   prevDetailPaneIsOpen === nextDetailPaneIsOpen &&\n\t\t   prevColorPaneIsOpen === nextColorPaneIsOpen &&\n\t\t   prevFilterPaneIsOpen === nextFilterPaneIsOpen;\n});","import { memo } from 'react';\n\nexport const VisualizationPaneDefs = memo(({ linkTypeList }) => {\n\treturn (\n\t\t<defs>\n\t\t\t{ linkTypeList\n\t\t\t\t.filter(({ isDirected }) => isDirected)\n\t\t\t\t.map(({ linkType, color }) => \n\t\t\t\t\t<marker \n\t\t\t\t\t\tkey={ linkType } \n\t\t\t\t\t\tid={ `arrow-end-${ linkType }` } \n\t\t\t\t\t\trefX=\"5\" \n\t\t\t\t\t\trefY=\"3.5\" \n\t\t\t\t\t\tmarkerWidth=\"10\" \n\t\t\t\t\t\tmarkerHeight=\"10\" \n\t\t\t\t\t\tmarkerUnits=\"userSpaceOnUse\" \n\t\t\t\t\t\torient=\"auto\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path d=\"M 0 0 7 3.5 0 7\" style={{ fill: color }} />\n\t\t\t\t\t</marker>) }\n\t\t</defs>\n\t);\n});","import { memo } from 'react';\nimport './VisualizationPaneMap.css';\n\nexport const VisualizationPaneMap = memo(({ \n\tlandData, \n\tinteriorData, \n\tprojectionState \n}) => {\n\tconst { path } = projectionState;\n\n\treturn (\n\t\t<g className=\"map\">\n\t\t\t{ landData.features.map(feature => \n\t\t\t\t<path key=\"land\" className=\"land\" d={ path(feature) }></path>) }\n\t\t\t<path className=\"interiors\" d={ path(interiorData) } />\n\t\t</g>\n\t);\n});","import { line, curveNatural } from 'd3';\n\n// helpers\n\nconst findDistance = ([ x1, y1 ], [ x2, y2 ]) => \n\tMath.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\nconst findSlope = ([ x1, y1 ], [ x2, y2 ]) => (y1 - y2) / (x1 - x2);\n\nconst findMiddlePoint = ([ x1, y1 ], [ x2, y2 ]) => [ (x1 + x2) / 2, (y1 + y2) / 2 ];\n\nconst findUnitVector = s => {\n\tconst xu = Math.sqrt(1 / (1 + s * s));\n\tconst yu = s * xu;\n\n\treturn xu >= 0 ? [ xu, yu ] : [ -xu, -yu ]; // always points to right\n};\n\nconst findCentre = ([ x1, y1 ], [ x2, y2 ], r) => {\n\tconst xa = (x2 - x1) / 2;\n\tconst ya = (y2 - y1) / 2;\n\tconst x0 = x1 + xa;\n\tconst y0 = y1 + ya;\n\tconst a = Math.sqrt(xa * xa + ya * ya);\n\tconst b = Math.sqrt(r * r - a * a);\n\tconst xc = x0 + b * ya / a;\n\tconst yc = y0 - b * xa / a;\n\n\treturn [ xc, yc ];\n};\n\nconst findAngle = ([ x, y ], [ xc, yc ]) => {\n\tconst xAdjusted = x - xc;\n\tconst yAdjusted = y - yc;\n\n\tif (xAdjusted > 0 && yAdjusted === 0) return 0;\n\tif (xAdjusted > 0 && yAdjusted > 0) return Math.atan(yAdjusted / xAdjusted);\n\tif (xAdjusted < 0 && yAdjusted > 0) return Math.PI / 2 - Math.atan(yAdjusted / -xAdjusted) + Math.PI / 2;\n\tif (xAdjusted === 0 && yAdjusted > 0) return Math.PI / 2;\n\tif (xAdjusted < 0 && yAdjusted < 0) return Math.atan(-yAdjusted / -xAdjusted) + Math.PI;\n\tif (xAdjusted < 0 && yAdjusted === 0) return Math.PI;\n\tif (xAdjusted > 0 && yAdjusted < 0) return Math.PI / 2 - Math.atan(-yAdjusted / xAdjusted) + Math.PI / 2 * 3;\n\tif (xAdjusted === 0 && yAdjusted < 0) return Math.PI / 2 * 3\n};\n\nconst findCircleCircleIntersection = ([ a, b, r0 ], [ c, d, r1 ]) => {\n\tconst D = Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));\n\tconst r = 0.25 * Math.sqrt((D + r0 + r1) * (D + r0 - r1) * (D - r0 + r1) * (-D + r0 + r1));\n\n\tconst rDiff = (r0 * r0 - r1 * r1);\n\tconst DD = (D * D);\n\tconst xi1 = (a + c) / 2 + (c - a) * rDiff / (2 * DD) + 2 * (b - d) * r / DD; \n\tconst yi1 = (b + d) / 2 + (d - b) * rDiff / (2 * DD) - 2 * (a - c) * r / DD;\n\tconst xi2 = (a + c) / 2 + (c - a) * rDiff / (2 * DD) - 2 * (b - d) * r / DD; \n\tconst yi2 = (b + d) / 2 + (d - b) * rDiff / (2 * DD) + 2 * (a - c) * r / DD;\n\n\treturn [ [ xi1, yi1 ], [ xi2, yi2 ] ];\n};\n\n// main functions\n\nexport const directedLink = {\n\ttargetRadius: 15,\n\tselfLoopRadius: 20,\n\tselfLoopRadiusIncrement: 3,\n\tarcDivisor: 1.5,\n\tarcRadiusIncrement: 15,\n\n\tgeneratePathData(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst pointsAreSame = sourcePoint[0] === targetPoint[0] &&\n\t\t\t\t\t\t\t  sourcePoint[1] === targetPoint[1];\n\n\t\treturn pointsAreSame ? \n\t\t\tself.generateSelfLoop(sourcePoint, index) : \n\t\t\tself.generateArc(sourcePoint, targetPoint, index);\n\t},\n\tgenerateArc(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst arcDivisor = self.arcDivisor;\n\t\tconst radiusIncrement = self.arcRadiusIncrement;\n\n\t\t// find radius\n\t\tconst distance = findDistance(sourcePoint, targetPoint);\n\t\tconst radius = distance / arcDivisor + radiusIncrement * index;\n\t\tconst targetRadius = self.targetRadius >= distance ? distance / 2 : self.targetRadius;\n\n\t\t// find new target (some distance away from original)\n\t\tconst centre = findCentre(sourcePoint, targetPoint, radius);\n\t\tconst [ intersection1, intersection2 ] = findCircleCircleIntersection(\n\t\t\t[ ...centre, radius ], [ ...targetPoint, targetRadius ]\n\t\t);\n\t\tconst sourceAngle = findAngle(sourcePoint, centre);\n\t\tconst targetAngle = findAngle(targetPoint, centre);\n\t\tconst intersection1Angle = findAngle(intersection1, centre);\n\t\tconst intersection1BtwSourceAndTarget = \n\t\t\t(intersection1Angle >= sourceAngle && intersection1Angle <= targetAngle) ||\n\t\t\t(intersection1Angle >= targetAngle && intersection1Angle <= sourceAngle);\n\t\tconst newTargetPoint = (sourceAngle < Math.PI && targetAngle > Math.PI) ?\n\t\t\t\t\t\t\t   (intersection1BtwSourceAndTarget ? intersection2 : intersection1) :\n\t\t\t\t\t\t\t   (intersection1BtwSourceAndTarget ? intersection1 : intersection2);\n\n\t\t// return path\n\t\treturn `M ${ sourcePoint[0] } ${ sourcePoint[1] } ` + \n\t\t\t   `A ${ radius } ${ radius } 0 0 0 ${ newTargetPoint[0] } ${ newTargetPoint[1] }`;\n\t},\n\tgenerateSelfLoop(sourcePoint, index) {\n\t\tconst self = this;\n\t\tconst radiusIncrement = self.selfLoopRadiusIncrement;\n\t\tconst radius = self.selfLoopRadius + radiusIncrement * index;\n\n\t\t// find target\n\t\tconst centre = [ sourcePoint[0] + radius, sourcePoint[1] ];\n\t\tconst targetAngle = Math.PI + Math.PI * 2 - Math.PI / 8;\n\t\tconst targetPoint = [\n\t\t\tradius * Math.cos(targetAngle) + centre[0],\n\t\t\tradius * Math.sin(targetAngle) + centre[1]\n\t\t];\n\n\t\t// return path\n\t\treturn `M ${ sourcePoint[0] } ${ sourcePoint[1] } ` + \n\t\t\t   `A ${ radius } ${ radius } 0 1 0 ${ targetPoint[0] } ${ targetPoint[1] }`;\n\t}\n};\n\nexport const undirectedLink = {\n\tselfLoopRadius: 20,\n\tdistanceIncrement: 10,\n\tradiusIncrement: 3,\n\n\tgeneratePathData(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst pointsAreSame = sourcePoint[0] === targetPoint[0] &&\n\t\t\t\t\t\t\t  sourcePoint[1] === targetPoint[1];\n\n\t\tif (pointsAreSame)\n\t\t\treturn self.generateSelfLoop(sourcePoint, index);\n\n\t\tif (index === -1)\n\t\t\treturn self.generateStraightLine(sourcePoint, targetPoint);\n\n\t\treturn self.generateCurve(sourcePoint, targetPoint, index);\n\t},\n\tgenerateStraightLine(sourcePoint, targetPoint) {\n\t\treturn `M ${ sourcePoint[0] } ${ sourcePoint[1] } ` +\n\t\t\t   `L ${ targetPoint[0] } ${ targetPoint[1] }`;\n\t},\n\tgenerateCurve(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst distanceIncrement = self.distanceIncrement;\n\t\tconst pathGenerator = line().curve(curveNatural);\n\t\t\n\t\t// find unit vector\n\t\tconst middlePoint = findMiddlePoint(sourcePoint, targetPoint);\n\t\tconst sameX = sourcePoint[0] === targetPoint[0];\n\t\tconst sameY = sourcePoint[1] === targetPoint[1];\n\t\tlet unitVector = null;\n\n\t\tif (!sameX && !sameY) {\n\t\t\tconst perpendicularSlope = -1 / findSlope(sourcePoint, targetPoint);\n\t\t\tunitVector = findUnitVector(perpendicularSlope);\n\t\t}\n\t\telse if (sameX) unitVector = [ 1, 0 ];\n\t\telse if (sameY) unitVector = [ 0, 1 ];\n\t\t\n\t\t// find second point\n\t\tconst secondPoint = [ \n\t\t\tmiddlePoint[0] + unitVector[0] * distanceIncrement * index, \n\t\t\tmiddlePoint[1] + unitVector[1] * distanceIncrement * index, \n\t\t];\n\n\t\t// return curve\n\t\treturn pathGenerator([ sourcePoint, secondPoint, targetPoint ]);\n\t},\n\tgenerateSelfLoop(point, index) {\n\t\tconst self = this;\n\t\tconst radiusIncrement = self.radiusIncrement;\n\t\tconst radius = self.selfLoopRadius + radiusIncrement * index;\n\t\t\n\t\treturn `M ${ point[0] } ${ point[1] } ` + \n\t\t\t   `A ${ radius } ${ radius } 0 1 0 ${ point[0] - radius * 2 } ${ point[1] } ` +\n\t\t\t   `A ${ radius } ${ radius } 0 1 0 ${ point[0] } ${ point[1] }`;\n\t}\n};","import { memo } from 'react'; // reduce re-rendering on hover\nimport './VisualizationPaneLink.css';\n\nexport const VisualizationPaneLink = memo(({\n\tsourceID, \n\ttargetID, \n\tlinkType,\n\tcolor,\n\tlinkOpacity,\n\tthinLineOpacity,\n\tisHighlighted,\n\thoveredNodesOrLinks,\n\tmarkerEnd,\n\tpathData,\n\tlinkRowList,\n\ttooltipAttrList,\n\tdataTableAttrList,\n\teventName,\n\tdispatch\n}) => {\n\tconst handleMouseMove = event => \n\t\tdispatch({ \n\t\t\ttype: 'MOUSE_MOVE_VIS_PANE_LINK',\n\t\t\ttop: event.clientY, \n\t\t\tleft: event.clientX,\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tlinkType,\n\t\t\tlinkRowList, \n\t\t\ttooltipAttrList,\n\t\t\teventName\n\t\t});\n\tconst handleMouseLeave = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_VIS_PANE_LINK' });\n\tconst handleClick = () => \n\t\tdispatch({ \n\t\t\ttype: 'CLICK_VIS_PANE_LINK',\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tlinkRowList, \n\t\t\tdataTableAttrList,\n\t\t\teventName\n\t\t});\n\n\treturn (\n\t\t<g \n\t\t\tclassName=\"link\"\n\t\t\tonMouseMove={ handleMouseMove } \n\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t\tonClick={ handleClick }\n\t\t\tstyle={{ \n\t\t\t\topacity: hoveredNodesOrLinks && !isHighlighted ? 0.05 : linkOpacity \n\t\t\t}}\n\t\t>\n\t\t\t<path \n\t\t\t\tclassName=\"thick-line\" \n\t\t\t\td={ pathData } \n\t\t\t\tstyle={{ \n\t\t\t\t\tstroke: color, \n\t\t\t\t\topacity: 0.1 \n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<path \n\t\t\t\tclassName=\"thin-line\" \n\t\t\t\td={ pathData } \n\t\t\t\tmarkerEnd={ markerEnd } \n\t\t\t\tstyle={{ \n\t\t\t\t\tstroke: color, \n\t\t\t\t\topacity: thinLineOpacity \n\t\t\t\t}}\n\t\t\t/>\n\t\t</g>\n\t);\n});","import { directedLink, undirectedLink } from './pathGenerator';\nimport { VisualizationPaneLink } from './VisualizationPaneLink';\n\n// helpers\n\nexport const checkIfIsHighlighted = (linkObject, hoverState) => {\n\tconst { sourceID, targetID, linkType, isDirected } = linkObject;\n\tlet isHighlighted = true;\n\n\tif (hoverState.object === 'NODE' ||\n\t\thoverState.object === 'DETAIL_PANE_NODE')\n\t\tisHighlighted = sourceID === hoverState.data.nodeID || \n\t\t\t\t\t\ttargetID === hoverState.data.nodeID;\n\telse if (hoverState.object === 'LINK')\n\t\tisHighlighted = sourceID === hoverState.data.sourceID && \n\t\t\t\t\t\ttargetID === hoverState.data.targetID && \n\t\t\t\t\t\tlinkType === hoverState.data.linkType;\n\telse if (hoverState.object === 'DETAIL_PANE_LINK' && isDirected) \n\t\tisHighlighted = sourceID === hoverState.data.sourceID && \n\t\t\t\t\t\ttargetID === hoverState.data.targetID;\n\telse if (hoverState.object === 'DETAIL_PANE_LINK' && !isDirected)\n\t\tisHighlighted = (sourceID === hoverState.data.sourceID && targetID === hoverState.data.targetID) ||\n\t\t\t\t\t\t(sourceID === hoverState.data.targetID && targetID === hoverState.data.sourceID);\n\n\treturn isHighlighted;\n};\n\nconst generatePathData = (linkObject, countryIDToData, projection) => {\n\tconst { sourceID, targetID, isDirected, index } = linkObject;\n\tconst sourcePoint = projection([ \n\t\tcountryIDToData[sourceID].longitude, \n\t\tcountryIDToData[sourceID].latitude \n\t]);\n\tconst targetPoint = projection([ \n\t\tcountryIDToData[targetID].longitude, \n\t\tcountryIDToData[targetID].latitude \n\t]);\n\n\treturn isDirected ? \n\t\tdirectedLink.generatePathData(sourcePoint, targetPoint, index) : \n\t\tundirectedLink.generatePathData(sourcePoint, targetPoint, index);\n};\n\nconst generateMarkerEnd = ({ isDirected, linkType }) => \n\tisDirected ? 'url(#arrow-end-' + linkType + ')' : null;\n\n\nconst addSourceTargetIndex = linkList => {\n\tconst sourceTargetIDToLinkRowList = {\n\t\tsameSourceAndTarget: [],\n\t\tdirected: [],\n\t\tundirected: []\n\t};\n\n\t// generate sourceTargetIDToLinkRowList\n\tfor (let linkObject of linkList) {\t\n\t\tconst { sourceID, targetID, isDirected } = linkObject;\n\t\tconst sourceTargetID = `${ sourceID }-${ targetID }`;\n\n\t\tif (sourceID === targetID) {\n\t\t\tif (!(sourceTargetID in sourceTargetIDToLinkRowList.sameSourceAndTarget))\n\t\t\t\tsourceTargetIDToLinkRowList.sameSourceAndTarget[sourceTargetID] = [];\n\t\t\tsourceTargetIDToLinkRowList.sameSourceAndTarget[sourceTargetID].push(linkObject);\n\t\t}\n\t\telse if (!isDirected) {\n\t\t\tif (!(sourceTargetID in sourceTargetIDToLinkRowList.undirected))\n\t\t\t\tsourceTargetIDToLinkRowList.undirected[sourceTargetID] = [];\n\t\t\tsourceTargetIDToLinkRowList.undirected[sourceTargetID].push(linkObject);\n\t\t}\n\t\telse if (isDirected) {\n\t\t\tif (!(sourceTargetID in sourceTargetIDToLinkRowList.directed))\n\t\t\t\tsourceTargetIDToLinkRowList.directed[sourceTargetID] = [];\n\t\t\tsourceTargetIDToLinkRowList.directed[sourceTargetID].push(linkObject);\n\t\t}\n\t}\n\n\t// add index\n\tfor (let key in sourceTargetIDToLinkRowList)\n\t\tfor (let sourceTargetID in sourceTargetIDToLinkRowList[key]) {\n\t\t\tconst linkRowList = sourceTargetIDToLinkRowList[key][sourceTargetID];\n\n\t\t\tfor (let i = 0; i < linkRowList.length; i++)\n\t\t\t\tlinkRowList[i].index = i;\n\n\t\t\tif (linkRowList.length === 1 && key === 'undirected')\n\t\t\t\tlinkRowList[0].index = -1;\n\t\t}\n};\n\n// main functions\n\nconst updateLinkList = (\n\tlinkList,\n\tcountryIDToData,\n\tprojection,\n\thoverState\n) => {\n\taddSourceTargetIndex(linkList);\n\n\tfor (let linkObject of linkList) {\n\t\tconst { sourceID, targetID, linkType } = linkObject;\n\t\tlinkObject.key = `${ sourceID }-${ targetID }-${ linkType }`;\n\t\tlinkObject.pathData = generatePathData(linkObject, countryIDToData, projection);\n\t\tlinkObject.markerEnd = generateMarkerEnd(linkObject);\n\t\tlinkObject.isHighlighted =  checkIfIsHighlighted(linkObject, hoverState);\n\t}\n\n\treturn linkList;\n};\n\nexport const VisualizationPaneLinks = ({\n\tlinkList,\n\tcountryIDToData,\n\tprojectionState,\n\thoverState,\n\tdispatch\n}) => {\n\tconst { projection } = projectionState;\n\tconst hoveredNodesOrLinks = \n\t\thoverState.object === 'NODE' ||\n\t\thoverState.object === 'LINK' ||\n\t\thoverState.object === 'DETAIL_PANE_NODE' ||\n\t\thoverState.object === 'DETAIL_PANE_LINK';\n\tconst updatedLinkList = updateLinkList(\n\t\tlinkList, // convert to linkList\n\t\tcountryIDToData,\n\t\tprojection,\n\t\thoverState\t\t\n\t);\n\n\treturn (\n\t\t<g className=\"links\">\n\t\t\t{ updatedLinkList.map(linkObject => \n\t\t\t\t<VisualizationPaneLink\n\t\t\t\t\tkey={ linkObject.key }\n\t\t\t\t\tsourceID={ linkObject.sourceID }\n\t\t\t\t\ttargetID={ linkObject.targetID }\n\t\t\t\t\tlinkType={ linkObject.linkType } // for highlighting\n\t\t\t\t\tcolor={ linkObject.color }\n\t\t\t\t\tlinkOpacity={ linkObject.linkOpacity }\n\t\t\t\t\tthinLineOpacity={ linkObject.thinLineOpacity }\n\t\t\t\t\tisHighlighted={ linkObject.isHighlighted }\n\t\t\t\t\thoveredNodesOrLinks={ hoveredNodesOrLinks } \n\t\t\t\t\tmarkerEnd={ linkObject.markerEnd }\n\t\t\t\t\tpathData={ linkObject.pathData }\n\t\t\t\t\tlinkRowList={ linkObject.linkRowList }\n\t\t\t\t\ttooltipAttrList={ linkObject.tooltip.attributeList }\n\t\t\t\t\tdataTableAttrList={ linkObject.dataTable.attributeList }\n\t\t\t\t\teventName={ linkObject.eventName }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>) }\n\t\t</g>\n\t);\n};","import { memo } from 'react';\nimport './VisualizationPaneLabel.css';\n\nexport const VisualizationPaneLabel = memo(({ \n\tID, x, y, \n\tdisplayName,\n\tisHighlighted,\n\tdispatch \n}) => {\n\tconst handleMouseEnter = () => \n\t\tdispatch({ type: \"MOUSE_ENTER_VIS_PANE_LABEL\", nodeID: ID });\n\tconst handleMouseLeave = () => \n\t\tdispatch({ type: \"MOUSE_LEAVE_VIS_PANE_LABEL\"  });\n\n\treturn (\n\t\t<g \n\t\t\tclassName=\"label\" \n\t\t\tonMouseEnter={ handleMouseEnter } \n\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t\tstyle={{ opacity: isHighlighted ? 1 : 0.1 }}\n\t\t>\n\t\t\t<text className=\"background\" x={ x } y={ y }>{ displayName }</text>\n\t\t\t<text className=\"text\" x={ x } y={ y }>{ displayName }</text>\n\t\t</g>\n\t);\n});","import { VisualizationPaneLabel } from './VisualizationPaneLabel';\nimport { checkIfIsHighlighted } from '../VisualizationPaneLinks/VisualizationPaneLinks';\n\nconst generateMetadata = (linkList, hoverState) => {\n\tconst nodeIDSet = new Set();\n\tconst highlightedNodeIDSet = new Set();\n\n\tfor (let linkObject of linkList) {\n\t\tconst { sourceID, targetID } = linkObject;\n\t\tconst isHighlighted = checkIfIsHighlighted(linkObject, hoverState);\n\n\t\tnodeIDSet.add(sourceID);\n\t\tnodeIDSet.add(targetID);\n\n\t\tif (isHighlighted) {\n\t\t\thighlightedNodeIDSet.add(sourceID);\n\t\t\thighlightedNodeIDSet.add(targetID);\n\t\t}\n\t}\n\n\treturn [ nodeIDSet, highlightedNodeIDSet ];\n};\n\nconst generateNodeList = (\n\tnodeIDSet, \n\thighlightedNodeIDSet, \n\tprojection, \n\tcountryIDToData\n) => {\n\tconst nodeList = [];\n\n\tfor (let nodeID of nodeIDSet) {\n\t\tconst displayName = countryIDToData[nodeID].displayName;\n\t\tconst isHighlighted = highlightedNodeIDSet.has(nodeID);\n\t\tconst [ x, y ] = projection([\n\t\t\tcountryIDToData[nodeID].longitude,\n\t\t\tcountryIDToData[nodeID].latitude\n\t\t]);\n\n\t\tnodeList.push({\n\t\t\tkey: nodeID,\n\t\t\tID: nodeID,\n\t\t\tx: x, y: y,\n\t\t\tdisplayName: displayName,\n\t\t\tisHighlighted: isHighlighted\n\t\t});\n\t}\n\n\treturn nodeList;\n};\n\nexport const VisualizationPaneLabels = ({ \n\tlinkList,\n\tcountryIDToData,\n\tprojectionState,\n\thoverState,\n\tdispatch\n}) => {\n\tconst { projection } = projectionState;\n\tconst [ nodeIDSet, highlightedNodeIDSet ] = generateMetadata(linkList, hoverState);\n\tconst nodeList = generateNodeList(nodeIDSet, highlightedNodeIDSet, projection, countryIDToData);\n\n\treturn (\n\t\t<g className=\"labels\">\n\t\t\t{ nodeList.map(nodeObject => \n\t\t\t\t<VisualizationPaneLabel\n\t\t\t\t\tkey={ nodeObject.key }\n\t\t\t\t\tID={ nodeObject.ID }\n\t\t\t\t\tx={ nodeObject.x }\n\t\t\t\t\ty={ nodeObject.y } \n\t\t\t\t\tdisplayName={ nodeObject.displayName }\n\t\t\t\t\tisHighlighted={ nodeObject.isHighlighted }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>) }\n\t\t</g>\n\t);\n};","export const TimelineSliderValueLabel = ({ \n\tchildren, \n\tvalue, \n\tclassName, \n\tdisabled \n}) => {\n\tconst labelClassName = className;\n\tconst labelStyle = {  \n\t\tfontSize: 16,\n\t\tfontWeight: 300,\n\t\tfontFamily: 'Quicksand',\n\t\tmarginBottom: 50,\n\t\tcolor: disabled ? null : '#3d3d3d'\n\t};\n\n\treturn (\n\t\t<span { ...children.props }>\n\t\t\t<span className={ labelClassName } style={ labelStyle } >{ value }</span>\n\t\t</span>\n\t);\n};","import { memo } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Slider, Input, Select, MenuItem } from '@material-ui/core';\nimport { TimelineSliderValueLabel } from './TimelineSliderValueLabel';\nimport './TimelineSlider.css';\n\nconst MySlider = withStyles({\n\troot: {\n\t\ttop: '50%',\n    \tleft: '50%',\n\t\twidth: 'calc(100% - 80px)',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tposition: 'absolute',\n    \ttransform: 'translate(-50%, -50%)',\n    \tpointerEvents: 'auto'\n\t},\n\trail: {\n\t\theight: 4,\n\t\topacity: 1,\n\t\tbackgroundColor: '#ebebeb'\n\t},\n\ttrack: {\n\t\theight: 4,\n\t\tbackgroundColor: 'lightgray'\n\t},\n\tmark: {\n\t\twidth: 4,\n\t\theight: 4,\n\t\tcolor: '#ebebeb',\n\t\ttransform: 'translateX(-50%)',\n\t\tborderRadius: '50%'\n\t},\n\tmarkLabel: {\n\t\tcolor: 'gray',\n\t\topacity: 0.7,\n\t\tfontWeight: 300,\n\t\tfontFamily: 'Quicksand'\n\t},\n\tthumb: {\n\t\tmarginTop: 0,\n\t\tmarginLeft: 0,\n\t\ttransform: 'translateX(-50%)',\n\t\tboxShadow: '0 0 6px 1px #b8b8b8',\n\t\tbackground: 'white',\n\t\t'&:hover': { boxShadow: '0 0 6px 3px #b8b8b8' },\n\t\t'&.MuiSlider-active': { boxShadow: '0 0 6px 3px #b8b8b8' },\n\t\t'&.Mui-focusVisible': { boxShadow: '0 0 6px 3px #b8b8b8' },\n\t\t'&.Mui-disabled': {\n\t\t\twidth: 12,\n    \t\theight: 12,\n    \t\tmarginTop: 0,\n    \t\tmarginLeft: 0\n\t\t}\n\t}\n})(Slider);\n\nconst MyInput = withStyles({\n\troot: {\n\t\tposition: 'absolute',\n    \ttop: '50%',\n    \tleft: '50%',\n    \ttransform: 'translate(-50%,calc(-50% + 22px))',\n\t\tpointerEvents: 'auto',\n\t\tfontFamily: 'Quicksand',\n\t\tfontSize: '0.875rem',\n\t\tfontWeight: 300,\n    \tcolor: 'gray',\n    \topacity: 0.7,\n    \ttransition: 'color 0.3s',\n    \t'&:hover': { color: 'black' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\t'&:focus': { backgroundColor: 'transparent' },\n\t\t'&.MuiSelect-select': { paddingRight: 0 }\n\t},\n\ticon: {\n\t\tcolor: 'currentColor',\n\t\tposition: 'static',\n\t\tfontSize: '1rem'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t}\n});\n\nexport const TimelineSlider = memo(({ timelineSliderState, dispatch }) => {\n\tconst classes = useStyles();\n\n\tconst handleChangeSlider = (event, value) => \n\t\tdispatch({ \n\t\t\ttype: 'CHANGE_TIMELINE_SLIDER', \n\t\t\tvalue: value \n\t\t});\n\tconst handleSelectYearAttribute = event => \n\t\tdispatch({ \n\t\t\ttype: 'SELECT_YEAR_ATTRIBUTE',\n\t\t\tyearAttribute: event.target.value\n\t\t});\n\n\treturn (\n\t\t<div className=\"timeline-slider-container\">\n\t\t\t<MySlider \n\t\t\t\tmin={ timelineSliderState.min }\n\t\t\t\tmax={ timelineSliderState.max } \n\t\t\t\tvalue={ timelineSliderState.value }\n\t\t\t\tstep={ 1 } valueLabelDisplay=\"on\"\n\t\t\t\tonChange={ handleChangeSlider }\n\t\t\t\tValueLabelComponent={ TimelineSliderValueLabel }\n\t\t\t\ttrack={ timelineSliderState.yearAttribute.type === 'range' ? 'normal' : false }\n\t\t\t\tdisabled={ timelineSliderState.yearAttribute.type === 'no-filter' }\n\t\t\t\tmarks={[\n\t\t\t\t\t{ value: timelineSliderState.min, label: timelineSliderState.min }, \n\t\t\t\t\t{ value: timelineSliderState.max, label: timelineSliderState.max }\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t<MySelect \n\t\t\t\tvalue={ timelineSliderState.yearAttribute }\n\t\t\t\tonChange={ handleSelectYearAttribute }\n\t\t\t\tinput={ <MyInput disableUnderline={ true } /> }\n\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t>\n\t\t\t\t{ timelineSliderState.yearAttributeList.map(yearAttribute =>\n\t\t\t\t\t<MyMenuItem key={ yearAttribute.key } value={ yearAttribute }>\n\t\t\t\t\t\t{ yearAttribute.displayName }\n\t\t\t\t\t</MyMenuItem>) }\n\t\t\t</MySelect>\n\t\t</div>\n\t);\n});","import './Loader.css';\n\nexport const Loader = ({ isLoading = true }) => {\n\treturn ( isLoading ? \n\t\t<div className=\"loader\">\n\t\t\t<div className=\"background\"></div>\n\t\t\t<div className=\"loader-container\">\n\t\t\t\t<div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n\t\t\t</div>\n\t\t</div> : null\n\t);\n};","import { useRef, memo } from 'react'; // memo to avoid re-rendering on data selection pane tooltip\nimport { useProjection } from './useVisualizationPane/useProjection';\nimport { VisualizationPaneLegend } from './VisualizationPaneLegend/VisualizationPaneLegend';\nimport { VisualizationPaneControls } from './VisualizationPaneControls/VisualizationPaneControls';\nimport { VisualizationPaneDefs } from './VisualizationPaneDefs/VisualizationPaneDefs';\nimport { VisualizationPaneMap } from './VisualizationPaneMap/VisualizationPaneMap';\nimport { VisualizationPaneLinks } from './VisualizationPaneLinks/VisualizationPaneLinks';\nimport { VisualizationPaneLabels } from './VisualizationPaneLabels/VisualizationPaneLabels';\nimport { TimelineSlider } from './TimelineSlider/TimelineSlider';\nimport { Loader } from '../widgets/Loader/Loader';\nimport './VisualizationPane.css';\n\nexport const VisualizationPane = memo(({\n\tlandData, \n\tinteriorData,\n\tcountryIDToData,\n\tlinkList,\n\tlinkTypeList,\n\ttimelineSliderState,\n\thoverState,\n\tdetailPaneIsOpen,\n\tcolorPaneState,\n\tfilterPaneState,\n\tdispatch\n}) => {\n\tconst SVGRef = useRef(null);\n\tconst projectionState = useProjection(SVGRef, landData);\n\tconst isVisPaneExpanded = !detailPaneIsOpen && !colorPaneState.isOpen && !filterPaneState.isOpen;\n\n\treturn (\n\t\t<div \n\t\t\tid=\"visualization-pane\" \n\t\t\tclassName={ \n\t\t\t\tisVisPaneExpanded ? \n\t\t\t\t\"expanded loader-installed\" : \n\t\t\t\t\"collapsed loader-installed\"\n\t\t\t}\n\t\t>\n\t\t\t<VisualizationPaneLegend \n\t\t\t\tlinkTypeList={ linkTypeList }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<VisualizationPaneControls \n\t\t\t\tSVGRef={ SVGRef }\n\t\t\t\tlandData={ landData }\n\t\t\t\tprojectionState={ projectionState }\n\t\t\t\tdetailPaneIsOpen={ detailPaneIsOpen }\n\t\t\t\tcolorPaneIsOpen={ colorPaneState.isOpen }\n\t\t\t\tfilterPaneIsOpen={ filterPaneState.isOpen }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<svg ref={ SVGRef }>\n\t\t\t\t{ projectionState.isLoading ? null : <> { /* render upon finish loading */ }\n\t\t\t\t\t<VisualizationPaneDefs \n\t\t\t\t\t\tlinkTypeList={ linkTypeList }\n\t\t\t\t\t/>\n\t\t\t\t\t<VisualizationPaneMap \n\t\t\t\t\t\tlandData={ landData }\n\t\t\t\t\t\tinteriorData={ interiorData }\n\t\t\t\t\t\tprojectionState={ projectionState } \n\t\t\t\t\t/>\n\t\t\t\t\t<VisualizationPaneLinks \n\t\t\t\t\t\tlinkList={ linkList }\n\t\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\t\tprojectionState={ projectionState }\n\t\t\t\t\t\thoverState={ hoverState }\n\t\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\t/>\n\t\t\t\t\t<VisualizationPaneLabels\n\t\t\t\t\t\tlinkList={ linkList }\n\t\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\t\tprojectionState={ projectionState }\n\t\t\t\t\t\thoverState={ hoverState }\n\t\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\t/>\n\t\t\t\t</> }\n\t\t\t</svg>\n\t\t\t<TimelineSlider \n\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<Loader \n\t\t\t\tisLoading={ projectionState.isLoading } \n\t\t\t/>\n\t\t</div>\n\t);\n}, (prevProps, nextProps) =>\n\tprevProps.landData === nextProps.landData &&\n\tprevProps.interiorData === nextProps.interiorData &&\n\tprevProps.countryIDToData === nextProps.countryIDToData &&\n\tprevProps.linkList === nextProps.linkList &&\n\tprevProps.linkTypeList === nextProps.linkTypeList &&\n\tprevProps.timelineSliderState === nextProps.timelineSliderState &&\n\tprevProps.detailPaneIsOpen === nextProps.detailPaneIsOpen && \n\tprevProps.colorPaneState === nextProps.colorPaneState && \n\tprevProps.filterPaneState === nextProps.filterPaneState && \n\tprevProps.dispatch === nextProps.dispatch && !(\n\t\t// visualization pane looks different for these hover events\n\t\tprevProps.hoverState.object === 'LINK' ||\n   \t\tnextProps.hoverState.object === 'LINK' ||\n   \t\tprevProps.hoverState.object === 'NODE' ||\n   \t\tnextProps.hoverState.object === 'NODE' ||\n   \t\tprevProps.hoverState.object === 'DETAIL_PANE_NODE' ||\n   \t\tnextProps.hoverState.object === 'DETAIL_PANE_NODE' ||\n   \t\tprevProps.hoverState.object === 'DETAIL_PANE_LINK' ||\n   \t\tnextProps.hoverState.object === 'DETAIL_PANE_LINK'\n\t)\n);","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\n\nconst MyInput = withStyles({ \n\troot: { \n\t\twidth: '100%',\n\t\tcolor: '#d3d3d3',\n    \tfontFamily: 'Quicksand',\n    \tfontSize: 20,\n    \t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '2px solid rgba(211, 211, 211, 0.6)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px solid rgba(211, 211, 211, 0.6)' },\n\t\t'&:after': { borderBottom: '2px solid rgba(168, 168, 168, 1)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({ \n\ticon: {\n\t\tcolor: '#d3d3d3'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13,\n\t\t'&.Mui-selected': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&.Mui-selected:hover': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.05)' }\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t\tcolor: '#d3d3d3',\n\t\tbackground: '#2d3138',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: 10,\n    \t\theight: 10,\n    \t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-track': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: 'rgb(0, 0, 0)'\n\t\t}\n\t}\n});\n\nexport const DetailPaneHeaderMainOption = ({\n\tmainOption, \n\tmainOptionList,\n\tdispatch\n}) => {\n\tconst classes = useStyles();\n\n\tconst handleSelectMainOption = event => \n\t\tdispatch({\n\t\t\ttype: 'SELECT_DETAIL_PANE_MAIN_OPTION',\n\t\t\toption: event.target.value\n\t\t});\n\n\treturn (\n\t\t<MySelect\n\t\t\tvalue={ mainOption }\n\t\t\tonChange={ handleSelectMainOption }\n\t\t\tinput={ <MyInput /> }\n\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t>\n\t\t\t{ mainOptionList.map(option => \n\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t</MySelect>\n\t);\n};","import { checkIsNetworkMetric } from '../../useInterfaceState/updateDetailPane';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport './DetailPaneHeaderSubOptions.css';\n\nconst MyInput = withStyles({\n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 600,\n\t    fontSize: 12,\n\t    color: '#d3d3d3',\n\t    \"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '2px solid rgba(211, 211, 211, 0.6)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px solid rgba(211, 211, 211, 0.6)' },\n\t\t'&:after': { borderBottom: '2px solid rgba(168, 168, 168, 1)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\tpadding: 0,\n\t\t'&.MuiSelect-select': { paddingRight: 0 }\n\t},\n\ticon: {\n\t\tdisplay: 'none'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 12,\n\t\t'&.Mui-selected': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&.Mui-selected:hover': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.05)' }\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t\tcolor: '#d3d3d3',\n\t\tbackground: '#2d3138',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: 10,\n    \t\theight: 10,\n    \t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-track': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: 'rgb(0, 0, 0)'\n\t\t}\n\t}\n});\n\nexport const DetailPaneHeaderSubOptions = ({\n\tmainOption,\n\tsubOption1, \n\tsubOption1List,\n\tsubOption2, \n\tsubOption2List,\n\tdispatch\n}) => {\n\tconst classes = useStyles();\n\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\n\tconst handleSelectSubOption = (event, key) => \n\t\tdispatch({\n\t\t\ttype: 'SELECT_DETAIL_PANE_SUB_OPTION',\n\t\t\tkey, option: event.target.value\n\t\t});\n\n\tif (isSelectedNetworkMetric)\n\t\treturn (\n\t\t\t<div className=\"sub-options\">\n\t\t\t\t(Modelling network as <MySelect\n\t\t\t\t\tvalue={ subOption1 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption1') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption1List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect> and <MySelect\n\t\t\t\t\tvalue={ subOption2 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption2') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption2List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect> graph)\n\t\t\t</div>\n\t\t);\n\n\tif (!isSelectedNetworkMetric)\n\t\treturn (\n\t\t\t<div className=\"sub-options\">\n\t\t\t\t(Between <MySelect\n\t\t\t\t\tvalue={ subOption1 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption1') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption1List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect> and <MySelect\n\t\t\t\t\tvalue={ subOption2 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption2') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption2List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect>)\n\t\t\t</div>\n\t\t);\n};","import { memo } from 'react';\nimport { DetailPaneHeaderMainOption } from './DetailPaneHeaderMainOption';\nimport { DetailPaneHeaderSubOptions } from './DetailPaneHeaderSubOptions';\nimport './DetailPaneHeader.css';\n\nexport const DetailPaneHeader = memo(({\n\tmainOption, \n\tmainOptionList,\n\tsubOption1, \n\tsubOption1List,\n\tsubOption2, \n\tsubOption2List,\n\tdispatch\n}) => {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<DetailPaneHeaderMainOption \n\t\t\t\tmainOption={ mainOption }\n\t\t\t\tmainOptionList={ mainOptionList }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<DetailPaneHeaderSubOptions \n\t\t\t\tmainOption={ mainOption }\n\t\t\t\tsubOption1={ subOption1 }\n\t\t\t\tsubOption1List={ subOption1List }\n\t\t\t\tsubOption2={ subOption2 }\n\t\t\t\tsubOption2List={ subOption2List }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</div>\n\t);\n});","import './SparkLine.css';\n\nexport const width = 120;\n\nexport const height = 30;\n\nexport const margin = {\n\ttop: 10,\n\tleft: 25,\n\tbottom: 10,\n\tright: 25\n};\n\nexport const SparkLine = ({\n\tstartYear, endYear,\n\tstartX, endX,\n\tstartY, endY,\n\tpathData\n}) => {\n\treturn (\n\t\t<svg>\n\t\t\t<g style={{ transform: `translate(${ margin.left }px, ${ margin.top }px)` }}>\n\t\t\t\t<path d={ pathData }></path>\n\t\t\t\t<text className=\"start year\" x={ startX } y={ startY } dx=\"-3\">{ startYear }</text>\n\t\t\t\t<text className=\"end year\" x={ endX } y={ endY } dx=\"3\">{ endYear }</text>\n\t\t\t</g>\n\t\t</svg>\n\t)\n};","import cytoscape from 'cytoscape';\nimport networkjs from 'networkjs';\nimport { scaleLinear, line, curveBasis, extent, format } from 'd3';\nimport { checkIsNetworkMetric } from '../../useInterfaceState/updateDetailPane';\nimport { width, height, margin } from './SparkLine';\n\n// helpers\n\nconst findMaxSetSize = nodeIDToSet => {\n\tlet maxSetSize = 0;\n\n\tfor (let nodeID in nodeIDToSet)\n\t\tif (nodeIDToSet[nodeID].size > maxSetSize)\n\t\t\tmaxSetSize = nodeIDToSet[nodeID].size;\n\n\treturn maxSetSize;\n};\n\nconst findMaxMetricValue = (graph, metricFunction) => {\n\tlet maxMetricValue = 0;\n\n\tgraph.nodes().forEach(node => {\n\t\tconst metricValue = metricFunction(node);\n\n\t\tif (metricValue > maxMetricValue)\n\t\t\tmaxMetricValue = metricValue;\n\t});\n\n\treturn maxMetricValue;\n};\n\nconst generateNodeIDSet = linkList => {\n\tconst nodeIDSet = new Set();\n\n\tfor (let { sourceID, targetID } of linkList) {\n\t\tnodeIDSet.add(sourceID);\n\t\tnodeIDSet.add(targetID);\n\t}\n\n\treturn nodeIDSet;\n};\n\nconst generateLinkIDSet = (linkList, isDirected) => {\n\tconst linkIDSet = new Set();\n\n\tif (isDirected)\n\t\tfor (let { sourceID, targetID } of linkList)\n\t\t\tlinkIDSet.add(`${ sourceID }-${ targetID }`);\n\n\telse if (!isDirected)\n\t\tfor (let { sourceID, targetID } of linkList) {\n\t\t\tconst newSourceID = sourceID < targetID ? sourceID : targetID; // smaller one\n\t\t\tconst newTargetID = sourceID < targetID ? targetID : sourceID; // larger one\n\t\t\tlinkIDSet.add(`${ newSourceID }-${ newTargetID }`);\n\t\t}\n\n\treturn linkIDSet;\n};\n\nconst generateLinkIDToWeight = (linkList, isDirected, isWeightDistance=false) => {\n\tconst linkIDToStatistics = {};\n\tconst linkIDToWeight = {};\n\n\tif (isDirected)\n\t\tfor (let { sourceID, targetID, linkRowList } of linkList) {\n\t\t\tconst linkID = `${ sourceID }-${ targetID }`;\n\n\t\t\tif (!(linkID in linkIDToStatistics))\n\t\t\t\tlinkIDToStatistics[linkID] = { weightSum: 0, weightCount: 0 };\n\n\t\t\t// assume weighted graph (there is weight attribute for each row)\n\t\t\tfor (let { weight } of linkRowList)\n\t\t\t\tif (weight !== '') {\n\t\t\t\t\tlinkIDToStatistics[linkID].weightSum += +weight;\n\t\t\t\t\tlinkIDToStatistics[linkID].weightCount++;\n\t\t\t\t}\n\t\t}\n\n\telse if (!isDirected)\n\t\tfor (let { sourceID, targetID, linkRowList } of linkList) {\n\t\t\tconst newSourceID = sourceID < targetID ? sourceID : targetID; // smaller one\n\t\t\tconst newTargetID = sourceID < targetID ? targetID : sourceID; // larger one\n\t\t\tconst linkID = `${ newSourceID }-${ newTargetID }`;\n\n\t\t\tif (!(linkID in linkIDToStatistics))\n\t\t\t\tlinkIDToStatistics[linkID] = { weightSum: 0, weightCount: 0 };\n\n\t\t\t// assume weighted graph (there is weight attribute for each row)\n\t\t\tfor (let { weight } of linkRowList)\n\t\t\t\tif (weight !== '') {\n\t\t\t\t\tlinkIDToStatistics[linkID].weightSum += +weight;\n\t\t\t\t\tlinkIDToStatistics[linkID].weightCount++;\n\t\t\t\t}\n\t\t}\n\n\tif (isWeightDistance)\n\t\tfor (let linkID in linkIDToStatistics)\n\t\t\tlinkIDToWeight[linkID] = linkIDToStatistics[linkID].weightCount === 0 ? null :\n\t\t\t\t1 / (linkIDToStatistics[linkID].weightSum / linkIDToStatistics[linkID].weightCount);\n\n\telse if (!isWeightDistance)\n\t\tfor (let linkID in linkIDToStatistics)\n\t\t\tlinkIDToWeight[linkID] = linkIDToStatistics[linkID].weightCount === 0 ? null :\n\t\t\t\tlinkIDToStatistics[linkID].weightSum / linkIDToStatistics[linkID].weightCount;\n\n\treturn linkIDToWeight;\n};\n\nconst generateCytoscapeGraph = (linkList, isDirected, isWeighted, isWeightDistance=false) => {\n\tconst data = [];\n\tconst graph = cytoscape();\n\n\tif (!isDirected && !isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(linkList);\n\t\tconst linkIDSet = generateLinkIDSet(linkList, false);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tdata.push({ data: { source: sourceID, target: targetID } });\n\t\t}\n\t}\n\telse if (!isDirected && isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(linkList);\n\t\tconst linkIDSet = generateLinkIDSet(linkList, false);\n\t\tconst linkIDToWeight = generateLinkIDToWeight(linkList, false, isWeightDistance);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ source, target ] = linkID.split('-');\n\t\t\tconst weight = linkIDToWeight[linkID];\n\n\t\t\tif (weight !== null)\n\t\t\t\tdata.push({ data: { source, target, weight } });\n\t\t}\n\t}\n\telse if (isDirected && !isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(linkList);\n\t\tconst linkIDSet = generateLinkIDSet(linkList, true);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tdata.push({ data: { source: sourceID, target: targetID } });\n\t\t}\n\t}\n\telse if (isDirected && isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(linkList);\n\t\tconst linkIDSet = generateLinkIDSet(linkList, true);\n\t\tconst linkIDToWeight = generateLinkIDToWeight(linkList, true, isWeightDistance);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ source, target ] = linkID.split('-');\n\t\t\tconst weight = linkIDToWeight[linkID];\n\n\t\t\tif (weight !== null)\n\t\t\t\tdata.push({ data: { source, target, weight } });\n\t\t}\n\t}\n\n\tgraph.add(data);\n\n\treturn graph;\n};\n\nconst generateNetworkJSGraph = (linkList, isWeighted, isWeightDistance=false) => { // must be undirected\n\tconst linkListForGraph = [];\n\tconst graph = new networkjs.datastructures.Graph();\n\n\tif (isWeighted) {\n\t\tconst linkIDSet = generateLinkIDSet(linkList, false);\n\t\tconst linkIDToWeight = generateLinkIDToWeight(linkList, false, isWeightDistance);\n\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tconst weight = linkIDToWeight[linkID];\n\n\t\t\tif (weight !== null)\n\t\t\t\tlinkListForGraph.push([ sourceID, targetID, weight ]);\n\t\t}\n\n\t\tgraph.add_weighted_edges_from(linkListForGraph);\n\t}\n\telse if (!isWeighted) {\n\t\tconst linkIDSet = generateLinkIDSet(linkList, false);\n\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tlinkListForGraph.push([ sourceID, targetID ]);\n\t\t}\n\n\t\tgraph.add_edges_from(linkListForGraph);\n\t}\n\n\treturn graph;\n};\n\n// generateTimeSeriesEntryList\n\nconst generateSourceTargetSet = linkList => {\n\tconst sourceTargetIDSet = new Set();\n\n\tfor (let { sourceID, targetID, isDirected } of linkList) {\n\t\tif (isDirected)\n\t\t\tsourceTargetIDSet.add(sourceID + '-' + targetID);\n\t\telse if (!isDirected) {\n\t\t\tsourceTargetIDSet.add(sourceID + '-' + targetID);\n\t\t\tsourceTargetIDSet.add(targetID + '-' + sourceID);\n\t\t}\n\t}\n\n\treturn sourceTargetIDSet;\n};\n\nconst filterIDToTimeSeriesList = (\n\tIDSet,\n\tIDToTimeSeriesList,\n\tstartYear, endYear\n) => {\n\tconst filteredIDToTimeSeriesList = {};\n\n\tfor (let ID of IDSet) {\n\t\tconst timeSeriesList = (ID in IDToTimeSeriesList) ? IDToTimeSeriesList[ID] : [];\n\t\t\t\n\t\tfilteredIDToTimeSeriesList[ID] = timeSeriesList\n\t\t\t.filter(({ year, value }) => \n\t\t\t\tyear >= startYear && year <= endYear && \n\t\t\t\tvalue !== null && value !== 0) // filter zero to avoid inf\n\t\t\t.sort((a, b) => a.year - b.year);\n\t}\n\n\treturn filteredIDToTimeSeriesList;\n};\n\nconst setYScaleDomain = (yScale, timeSeriesList) => {\n\tconst [ min, max ] = extent(timeSeriesList, d => d.value);\n\n\tyScale.domain([ min, max ]);\n};\n\nconst generateTimeSeriesEntryList = (\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tlinkList,\n\tmainOption,\n\tsubOption1,\n\tsubOption2\n) => {\n\tconst entryList = [];\n\tconst { data: IDToTimeSeriesList, metadata: { isBilateral } } = \n\t\ttimeSeriesDataList.filter(({ metadata: { displayName } }) => displayName === mainOption)[0];\n\tconst IDSet = isBilateral ? generateSourceTargetSet(linkList) : generateNodeIDSet(linkList);\n\tconst startYear = +subOption1 < +subOption2 ? +subOption1 : +subOption2;\n\tconst endYear = +subOption1 < +subOption2 ? +subOption2 : +subOption1;\n\tconst filteredIDToTimeSeriesList = filterIDToTimeSeriesList(\n\t\tIDSet,\n\t\tIDToTimeSeriesList,\n\t\tstartYear, endYear\n\t);\n\tconst xScale = scaleLinear()\n\t\t.domain([ startYear, endYear ])\n\t\t.range([ 0, width - margin.left - margin.right ]);\n\tconst yScale = scaleLinear()\n\t\t.range([ height - margin.top - margin.bottom, 0 ]);\n\tconst pathGenerator = line()\n\t\t.curve(curveBasis)\n    \t.x(d => xScale(d.year))\n    \t.y(d => yScale(d.value));\n    const percentFormatter = format('.0%');\n\n    for (let ID in filteredIDToTimeSeriesList) {\n    \tif (filteredIDToTimeSeriesList[ID].length === 0) continue; // not include empty time series\n    \tsetYScaleDomain(yScale, filteredIDToTimeSeriesList[ID]); // set for each loop\n\n    \tconst timeSeriesList = filteredIDToTimeSeriesList[ID];\n    \tconst startValue = timeSeriesList[0].value;\n    \tconst endValue = timeSeriesList[timeSeriesList.length - 1].value;\n    \tconst percentChange = (endValue - startValue) / Math.abs(startValue);\n    \tconst contentText = percentChange > 0 \n\t\t\t\t\t\t  ? `+${ percentFormatter(percentChange) }` \n\t\t\t\t\t\t  : percentFormatter(percentChange);\n\n\t\tconst pathData = pathGenerator(timeSeriesList);\n\t\tconst startYear = timeSeriesList[0].year;\n\t\tconst endYear = timeSeriesList[timeSeriesList.length - 1].year;\n\t\tconst startX = xScale(startYear), endX = xScale(endYear);\n\t\tconst startY = yScale(startValue), endY = yScale(endValue);\n\n\t\tif (isBilateral) {\n\t\t\tconst [ sourceID, targetID ] = ID.split('-');\n\t\t\tconst sourceName = countryIDToData[sourceID].displayName;\n    \t\tconst targetName = countryIDToData[targetID].displayName;\n    \t\tconst titleText = `${ sourceName } → ${ targetName }`;\n\n    \t\tentryList.push({\n\t\t\t\tkey: ID,\n\t\t\t\titemData: { sourceID, targetID }, // for hovering\n\t\t\t\ttitleText, contentText,\n\t\t\t\tstartYear, endYear,\n\t\t\t\tstartX, endX,\n\t\t\t\tstartY, endY,\n\t\t\t\tpathData, percentChange // percentChange for sorting\n\t\t\t});\n\t\t}\n\t\telse if (!isBilateral) {\n\t\t\tconst nodeID = ID;\n\t\t\tconst titleText = countryIDToData[nodeID].displayName;\n\n\t\t\tentryList.push({\n\t\t\t\tkey: ID,\n\t\t\t\titemData: { nodeID }, // for hovering\n\t\t\t\ttitleText, contentText,\n\t\t\t\tstartYear, endYear,\n\t\t\t\tstartX, endX,\n\t\t\t\tstartY, endY,\n\t\t\t\tpathData, percentChange // percentChange for sorting\n\t\t\t});\n\t\t}\n    }\n\n\treturn entryList\n\t\t.sort((a, b) => b.percentChange - a.percentChange);\n};\n\n// generateDegreeEntryList (undirected + unweighted)\n\nconst generateNodeIDToConnectedNodeIDSet = linkList => {\n\tconst nodeIDToConectedNodeIDSet = {};\n\n\tfor (let { sourceID, targetID } of linkList) {\n\t\tif (!(sourceID in nodeIDToConectedNodeIDSet))\n\t\t\tnodeIDToConectedNodeIDSet[sourceID] = new Set();\n\t\tif (!(targetID in nodeIDToConectedNodeIDSet))\n\t\t\tnodeIDToConectedNodeIDSet[targetID] = new Set();\n\n\t\tnodeIDToConectedNodeIDSet[sourceID].add(targetID);\n\t\tnodeIDToConectedNodeIDSet[targetID].add(sourceID);\n\t}\n\n\treturn nodeIDToConectedNodeIDSet;\n};\n\nconst generateDegreeEntryList = (linkList, countryIDToData) => {\n\tconst entryList = [];\n\tconst nodeIDToConectedNodeIDSet = generateNodeIDToConnectedNodeIDSet(linkList);\n\tconst maxDegree = findMaxSetSize(nodeIDToConectedNodeIDSet);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxDegree ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToConectedNodeIDSet) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst degree = nodeIDToConectedNodeIDSet[nodeID].size;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: degree,\n\t\t\twidth: widthScale(degree)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateInDegreeEntryList (directed + unweighted)\n\nconst generateNodeIDToSourceIDSet = linkList => {\n\tconst nodeIDToSourceIDSet = {};\n\n\tfor (let { sourceID, targetID } of linkList) {\n\t\tif (!(targetID in nodeIDToSourceIDSet))\n\t\t\tnodeIDToSourceIDSet[targetID] = new Set();\n\n\t\tnodeIDToSourceIDSet[targetID].add(sourceID);\n\t}\n\n\treturn nodeIDToSourceIDSet;\n};\n\nconst generateInDegreeEntryList = (linkList, countryIDToData) => {\n\tconst entryList = [];\n\tconst nodeIDToSourceIDSet = generateNodeIDToSourceIDSet(linkList);\n\tconst maxInDegree = findMaxSetSize(nodeIDToSourceIDSet);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxInDegree ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToSourceIDSet) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst inDegree = nodeIDToSourceIDSet[nodeID].size;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: inDegree,\n\t\t\twidth: widthScale(inDegree)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateOutDegreeEntryList (directed + unweighted)\n\nconst generateNodeIDToTargetIDSet = linkList => {\n\tconst nodeIDToTargetIDSet = {};\n\n\tfor (let { sourceID, targetID } of linkList) {\n\t\tif (!(sourceID in nodeIDToTargetIDSet))\n\t\t\tnodeIDToTargetIDSet[sourceID] = new Set();\n\n\t\tnodeIDToTargetIDSet[sourceID].add(targetID);\n\t}\n\n\treturn nodeIDToTargetIDSet;\n};\n\nconst generateOutDegreeEntryList = (linkList, countryIDToData) => {\n\tconst entryList = [];\n\tconst nodeIDToTargetIDSet = generateNodeIDToTargetIDSet(linkList);\n\tconst maxOutDegree = findMaxSetSize(nodeIDToTargetIDSet);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxOutDegree ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToTargetIDSet) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst outDegree = nodeIDToTargetIDSet[nodeID].size;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: outDegree,\n\t\t\twidth: widthScale(outDegree)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateClosenessEntryList\n\nconst generateClosenessEntryList = (linkList, countryIDToData, isDirected, isWeighted) => {\n\tconst entryList = [];\n\tconst graph = generateCytoscapeGraph(linkList, isDirected, isWeighted, true);\n\tconst option = !isWeighted ? { directed: isDirected } : { directed: isDirected, weight: e => e.data('weight') };\n\tconst closenessFunction = graph.$().ccn(option);\n\tconst maxCloseness = findMaxMetricValue(graph, closenessFunction.closeness);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxCloseness ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tgraph.nodes().forEach(node => {\n\t\tconst nodeID = node.data().id;\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst closeness = closenessFunction.closeness(node);\n\t\tconst contextText = Math.round((closeness + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(closeness)\n\t\t});\n\t});\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateBetweennessEntryList\n\nconst generateBetweennessEntryList = (linkList, countryIDToData, isDirected, isWeighted) => {\n\tconst entryList = [];\n\tconst graph = generateCytoscapeGraph(linkList, isDirected, isWeighted, true);\n\tconst option = !isWeighted ? { directed: isDirected } : { directed: isDirected, weight: e => e.data('weight') };\n\tconst betweennessFunction = graph.$().bc(option);\n\tconst maxBetweenness = findMaxMetricValue(graph, betweennessFunction.betweennessNormalized);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxBetweenness ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tgraph.nodes().forEach(node => {\n\t\tconst nodeID = node.data().id;\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst betweenness = betweennessFunction.betweennessNormalized(node);\n\t\tconst contextText = Math.round((betweenness + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(betweenness)\n\t\t});\n\t});\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateEigenvectorEntryList (undirected)\n\nconst findMaxEigenvector = nodeIDToEigenvector => {\n\tlet maxEigenvector = 0;\n\n\tfor (let nodeID in nodeIDToEigenvector) {\n\t\tconst eigenvector = nodeIDToEigenvector[nodeID];\n\n\t\tif (eigenvector > maxEigenvector)\n\t\t\tmaxEigenvector = eigenvector;\n\t}\n\n\treturn maxEigenvector;\n};\n\nconst generateEigenvectorEntryList = (linkList, countryIDToData, isWeighted) => {\n\tconst entryList = [];\n\tconst graph = generateNetworkJSGraph(linkList, isWeighted);\n\tconst nodeIDToEigenvector = networkjs.algorithms.centrality.eigenvector_centrality(graph);\n\tconst maxEigenvector = findMaxEigenvector(nodeIDToEigenvector);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxEigenvector ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToEigenvector) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst eigenvector = nodeIDToEigenvector[nodeID];\n\t\tconst contextText = Math.round((eigenvector + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(eigenvector)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generatePageRankEntryList (directed + unweighted)\n\nconst generatePageRankEntryList = (linkList, countryIDToData) => {\n\tconst entryList = [];\n\tconst graph = generateCytoscapeGraph(linkList, true, false);\n\tconst pageRankFunction = graph.$().pageRank();\n\tconst maxPageRank = findMaxMetricValue(graph, pageRankFunction.rank);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxPageRank ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tgraph.nodes().forEach(node => {\n\t\tconst nodeID = node.data().id;\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst pageRank = pageRankFunction.rank(node);\n\t\tconst contextText = Math.round((pageRank + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(pageRank)\n\t\t});\n\t});\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateEntryList\n\nexport const generateEntryList = (\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tlinkList,\n\tmainOption,\n\tsubOption1,\n\tsubOption2\n) => {\n\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isSelectedTimeSeries = !isSelectedNetworkMetric;\n\tconst isDirected = subOption1 === 'directed';\n\tconst isWeighted = subOption2 === 'weighted';\n\n\tif (isSelectedTimeSeries)\n\t\treturn generateTimeSeriesEntryList(countryIDToData, timeSeriesDataList, linkList, mainOption, subOption1, subOption2);\n\tif (mainOption === 'Degree')\n\t\treturn generateDegreeEntryList(linkList, countryIDToData);\n\tif (mainOption === 'In Degree')\n\t\treturn generateInDegreeEntryList(linkList, countryIDToData);\n\tif (mainOption === 'Out Degree')\n\t\treturn generateOutDegreeEntryList(linkList, countryIDToData);\n\tif (mainOption === 'Closeness')\n\t\treturn generateClosenessEntryList(linkList, countryIDToData, isDirected, isWeighted);\n\tif (mainOption === 'Betweenness')\n\t\treturn generateBetweennessEntryList(linkList, countryIDToData, isDirected, isWeighted);\n\tif (mainOption === 'Eigenvector')\n\t\treturn generateEigenvectorEntryList(linkList, countryIDToData, isWeighted);\n\tif (mainOption === 'PageRank')\n\t\treturn generatePageRankEntryList(linkList, countryIDToData);\n\n\treturn [];\n};\n\nexport const generateKEntryList = (entryList, k) => {\n\tconst topEntryList = entryList.length <= k * 2 ? entryList\n\t\t\t\t\t   : entryList.filter((entryObject, index) => index >= 0 && index < k);\n\tconst bottomEntryList = entryList.length <= k * 2 ? []\n\t\t\t\t\t\t  : entryList.filter((entryObject, index) => index >= entryList.length - k && index <= entryList.length - 1);\n\n\treturn [ topEntryList, bottomEntryList ];\n};","import $ from 'jquery';\nimport './DetailPaneContentItem.css';\n\nexport const DetailPaneContentItem = ({\n\ttitleText,\n\tcontentText,\n\tclassName,\n\titemData,\n\tvisualization,\n\tdispatch\n}) => {\n\tconst handleMouseLeave = () => dispatch({ type: 'MOUSE_LEAVE_DETAIL_PANE_ITEM' });\n\tconst handleMouseEnter = event => dispatch({ \n\t\ttype: 'MOUSE_ENTER_DETAIL_PANE_ITEM',\n\t\titemEl: $(event.target).closest('.item')[0],\n\t\ttitleEl: $(event.target).closest('.item').find('.title')[0],\n\t\ttitleText, itemData\n\t});\n\n\treturn (\n\t\t<div \n\t\t\tclassName={ `${ className } item` }\n\t\t\tonMouseEnter={ handleMouseEnter }\n\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t>\n\t\t\t<div className=\"title\">{ titleText }</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<span className=\"text\">{ contentText }</span>\n\t\t\t\t{ visualization }\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import './Bar.css';\n\nexport const Bar = ({ width, percent = true }) => {\n\tif (percent)\n\t\treturn <div className=\"bar\" style={{ width: `${ width }%` }}></div>;\n\telse if (!percent)\n\t\treturn <div className=\"bar\" style={{ width: width }}></div>\n};","import { memo } from 'react';\nimport { checkIsNetworkMetric } from '../../useInterfaceState/updateDetailPane';\nimport { generateEntryList, generateKEntryList } from './generateEntryList';\nimport { DetailPaneContentItem } from './DetailPaneContentItem';\nimport { SparkLine } from './SparkLine';\nimport { Bar } from './Bar';\nimport { BiDetail } from \"react-icons/bi\";\nimport './DetailPaneContent.css';\n\nexport const DetailPaneContent = memo(({\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tlinkList,\n\tmainOption,\n\tsubOption1,\n\tsubOption2,\n\tdispatch\n}) => {\n\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isSelectedTimeSeries = !isSelectedNetworkMetric;\n\tconst entryList = generateEntryList(\t\t\n\t\tcountryIDToData,\n\t\ttimeSeriesDataList,\n\t\tlinkList,\n\t\tmainOption,\n\t\tsubOption1,\n\t\tsubOption2\n\t);\n\tconst [ \n\t\ttopEntryList, \n\t\tbottomEntryList \n\t] = generateKEntryList(entryList, isSelectedTimeSeries ? 5 : 10);\n\n\tconst handleClickDetailButton = () => dispatch({\n\t\ttype: 'CLICK_DETAIL_PANE_DETAIL_BUTTON',\n\t\tmainOption, subOption1, subOption2, entryList\n\t});\n\n\tlet timeSeriesClassName = null;\n\n\tif (isSelectedTimeSeries) {\n\t\tconst timeSeriesDataObject = timeSeriesDataList\n\t\t\t.filter(({ metadata: { displayName } }) => displayName === mainOption)[0];\n\t\tconst isBilateral = timeSeriesDataObject.metadata.isBilateral;\n\n\t\ttimeSeriesClassName = isBilateral ? 'bilateral' : 'non-bilateral';\n\t}\n\n\tif (entryList.length === 0)\n\t\treturn null;\n\n\treturn (\n\t\t<div className={ !timeSeriesClassName ? 'content' : `content ${ timeSeriesClassName }` }>\n\t\t\t{ topEntryList.map(entryObject => \n\t\t\t\t<DetailPaneContentItem \n\t\t\t\t\tkey={ entryObject.key }\n\t\t\t\t\ttitleText={ entryObject.titleText }\n\t\t\t\t\tcontentText={ entryObject.contentText }\n\t\t\t\t\tclassName={ isSelectedTimeSeries ? 'spark-line' : 'bar' }\n\t\t\t\t\titemData={ entryObject.itemData }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\tvisualization={ isSelectedTimeSeries ? \n\t\t\t\t\t\t<SparkLine\n\t\t\t\t\t\t\tstartYear={ entryObject.startYear }\n\t\t\t\t\t\t\tendYear={ entryObject.endYear }\n\t\t\t\t\t\t\tstartX={ entryObject.startX }\n\t\t\t\t\t\t\tendX={ entryObject.endX }\n\t\t\t\t\t\t\tstartY={ entryObject.startY }\n\t\t\t\t\t\t\tendY={ entryObject.endY }\n\t\t\t\t\t\t\tpathData={ entryObject.pathData }\n\t\t\t\t\t\t/> : \n\t\t\t\t\t\t<Bar width={ entryObject.width } /> }\n\t\t\t\t/>) }\n\n\t\t\t{ bottomEntryList.length > 0 ? <div className=\"seperator\">⋮</div> : null }\n\n\t\t\t{ bottomEntryList.map(entryObject => \n\t\t\t\t<DetailPaneContentItem \n\t\t\t\t\tkey={ entryObject.key }\n\t\t\t\t\ttitleText={ entryObject.titleText }\n\t\t\t\t\tcontentText={ entryObject.contentText }\n\t\t\t\t\tclassName={ isSelectedTimeSeries ? 'spark-line' : 'bar' }\n\t\t\t\t\titemData={ entryObject.itemData }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\tvisualization={ isSelectedTimeSeries ? \n\t\t\t\t\t\t<SparkLine\n\t\t\t\t\t\t\tstartYear={ entryObject.startYear }\n\t\t\t\t\t\t\tendYear={ entryObject.endYear }\n\t\t\t\t\t\t\tstartX={ entryObject.startX }\n\t\t\t\t\t\t\tendX={ entryObject.endX }\n\t\t\t\t\t\t\tstartY={ entryObject.startY }\n\t\t\t\t\t\t\tendY={ entryObject.endY }\n\t\t\t\t\t\t\tpathData={ entryObject.pathData }\n\t\t\t\t\t\t/> : \n\t\t\t\t\t\t<Bar width={ entryObject.width } /> }\n\t\t\t\t/>) }\n\n\t\t\t<div \n\t\t\t\tclassName=\"see-full-list-button\" \n\t\t\t\tonClick={ handleClickDetailButton }\n\t\t\t><BiDetail />Click to see full list</div>\n\t\t</div>\n\t);\n});","import { memo } from 'react'; // avoid re-rendering on tooltip \nimport { DetailPaneHeader } from './DetailPaneHeader/DetailPaneHeader';\nimport { DetailPaneContent } from './DetailPaneContent/DetailPaneContent';\nimport './DetailPane.css';\n\nexport const DetailPane = memo(({\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tlinkList,\n\tdetailPaneState,\n\tdispatch\n}) => {\n\tconst {\n\t\tisOpen,\n\t\tmainOption,\n\t\tmainOptionList,\n\t\tsubOption1,\n\t\tsubOption1List,\n\t\tsubOption2,\n\t\tsubOption2List\n\t} = detailPaneState;\n\n\tif (!isOpen)\n\t\treturn null;\n\n\treturn (\n\t\t<div id=\"detail-pane\">\n\t\t\t<DetailPaneHeader\n\t\t\t\tmainOption={ mainOption }\n\t\t\t\tmainOptionList={ mainOptionList }\n\t\t\t\tsubOption1={ subOption1 }\n\t\t\t\tsubOption1List={ subOption1List }\n\t\t\t\tsubOption2={ subOption2 }\n\t\t\t\tsubOption2List={ subOption2List }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<DetailPaneContent \n\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\ttimeSeriesDataList={ timeSeriesDataList }\n\t\t\t\tlinkList={ linkList }\n\t\t\t\tmainOption={ mainOption }\n\t\t\t\tsubOption1={ subOption1 }\n\t\t\t\tsubOption2={ subOption2 }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</div>\n\t);\n});","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport './DarkDropDown.css';\n\nconst MyInput = withStyles({ \n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontSize: 15,\n\t\tfontWeight: 300,\n\t\tcolor: '#d3d3d3',\n\t\twidth: '100%',\n\t\t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '2px solid rgba(211, 211, 211, 0.6)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px solid rgba(211, 211, 211, 0.6)' },\n\t\t'&:after': { borderBottom: '2px solid rgba(168, 168, 168, 1)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({ \n\troot: { '&:focus': { backgroundColor: 'transparent' } },\n\ticon: { color: '#d3d3d3' }\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13,\n\t\t'&.Mui-selected': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&.Mui-selected:hover': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.05)' }\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t\tcolor: '#d3d3d3',\n\t\tbackground: '#2d3138',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: 10,\n    \t\theight: 10,\n    \t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-track': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: 'rgb(0, 0, 0)'\n\t\t}\n\t}\n});\n\nexport const DarkDropDown = ({ \n\tlist, \n\toption,\n\tclassName,\n\tlabelText,\n\thandleSelect \n}) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={ className }>\n\t\t\t<div className=\"label\">{ labelText }</div>\n\t\t\t<MySelect\n\t\t\t\tvalue={ option }\n\t\t\t\tonChange={ handleSelect }\n\t\t\t\tinput={ <MyInput /> }\n\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t>\n\t\t\t\t{ list.map(option => \n\t\t\t\t\t<MyMenuItem key={ option.displayName } value={ option }>\n\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t</MyMenuItem>) }\n\t\t\t</MySelect>\n\t\t</div>\n\t);\n};","import { IoCloseOutline } from 'react-icons/io5';\nimport './ColorPaneList.css';\n\nexport const ColorPaneList = ({ appliedColoringList, dispatch }) => {\n\tconst handleClickRemoveButton = listItem =>\n\t\tdispatch({ type: 'REMOVE_COLOR_PANE_LIST_ITEM', listItem });\n\n\tif (appliedColoringList.length === 0)\n\t\treturn null;\n\n\treturn (\n\t\t<div className=\"applied-coloring\">\n\n\t\t\t<div className=\"label\">APPLIED COLORING</div>\n\n\t\t\t<div className=\"list\">\n\t\t\t\t{ appliedColoringList.map(listItem => \n\t\t\t\t\t<div key={ `${ listItem.dataSet.key }-${ listItem.attribute.key }` } className=\"list-item\">\n\n\t\t\t\t\t\t<span \n\t\t\t\t\t\t\tclassName=\"remove-button\"\n\t\t\t\t\t\t\tonClick={ () => { handleClickRemoveButton(listItem) } }\n\t\t\t\t\t\t><IoCloseOutline /></span>\n\n\t\t\t\t\t\t<span className=\"description\">{ \n\t\t\t\t\t\t\t`Colored ${ listItem.dataSet.displayName } by ${ listItem.attribute.displayName }` \n\t\t\t\t\t\t}</span>\n\n\t\t\t\t\t</div>) }\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n};","import { memo } from 'react'; // avoid re-rendering on tooltip \nimport { DarkDropDown } from '../widgets/DarkDropDown/DarkDropDown';\nimport { ColorPaneList } from './ColorPaneList';\nimport './ColorPane.css';\n\nexport const ColorPane = memo(({\n\tcolorPaneState,\n\tdispatch\n}) => {\n\tconst {\n\t\tisOpen,\n\t\tdataSetList,\n\t\tdataSet,\n\t\tattributeList,\n\t\tattribute,\n\t\tappliedColoringList\n\t} = colorPaneState;\n\n\tconst handleSelectDataSet = event =>\n\t\tdispatch({ \n\t\t\ttype: 'SELECT_COLOR_PANE_DATASET',\n\t\t\toption: event.target.value\n\t\t});\n\tconst handleSelectAttribute = event =>\n\t\tdispatch({ \n\t\t\ttype: 'SELECT_COLOR_PANE_ATTRIBUTE',\n\t\t\toption: event.target.value\n\t\t});\n\n\tif (!isOpen)\n\t\treturn null;\n\n\treturn (\n\t\t<div id=\"color-pane\">\n\t\t\t<DarkDropDown\n\t\t\t\tlist={ dataSetList }\n\t\t\t\toption={ dataSet }\n\t\t\t\tclassName='data-set-drop-down'\n\t\t\t\tlabelText='DATASET'\n\t\t\t\thandleSelect={ handleSelectDataSet }\n\t\t\t/>\n\t\t\t<DarkDropDown\n\t\t\t\tlist={ attributeList }\n\t\t\t\toption={ attribute }\n\t\t\t\tclassName='attribute-drop-down'\n\t\t\t\tlabelText='COLOR BY'\n\t\t\t\thandleSelect={ handleSelectAttribute }\n\t\t\t/>\n\t\t\t<ColorPaneList\n\t\t\t\tappliedColoringList={ appliedColoringList }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</div>\n\t);\n});","import { FaRegSquare, FaRegCheckSquare } from \"react-icons/fa\";\nimport './FilterPaneCategoryList.css';\n\nexport const FilterPaneCategoryList = ({\n\tcategoryList,\n\tdispatch\n}) => {\n\tconst handleSelectItem = itemKey =>\n\t\tdispatch({ type: 'SELECT_FILTER_PANE_CATEGORY', itemKey });\n\tconst handleClickSelectNone = () =>\n\t\tdispatch({ type: 'SELECT_FILTER_PANE_CATEGORIES', isSelected: false });\n\tconst handleClickSelectAll = () =>\n\t\tdispatch({ type: 'SELECT_FILTER_PANE_CATEGORIES', isSelected: true });\n\n\treturn (\n\t\t<div className=\"category-list\">\n\t\t\t<div className=\"content\">\n\t\t\t\t{ categoryList.map(({ key, displayName, isSelected }) => \n\t\t\t\t\t<label className=\"item\" key={ key }>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\tchecked={ isSelected } \n\t\t\t\t\t\t\tonChange={ () => { handleSelectItem(key) } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t<span className=\"text\">{ displayName }</span>\n\t\t\t\t\t</label>) }\n\t\t\t</div>\n\t\t\t<div className=\"footer\">\n\t\t\t\t<span className=\"select-none button\" onClick={ handleClickSelectNone }>\n\t\t\t\t\t<FaRegSquare/><span className=\"text\">Select None</span>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"select-all button\" onClick={ handleClickSelectAll }>\n\t\t\t\t\t<FaRegCheckSquare/><span className=\"text\">Select All</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","export const FilterPaneRangeFilterValueLabel = ({ children, value, className }) => {\n\tconst labelClassName = className;\n\tconst labelStyle = {\n\t\tfontSize: 15,\n\t\tfontWeight: 300,\n\t\tfontFamily: 'Quicksand',\n\t\tmarginBottom: 40,\n\t\tcolor: '#d3d3d3'\n\t};\n\n\treturn (\n\t\t<span { ...children.props }>\n\t\t\t<span className={ labelClassName } style={ labelStyle } >{ value }</span>\n\t\t</span>\n\t);\n};","import { withStyles } from '@material-ui/core/styles';\nimport { Slider } from '@material-ui/core';\nimport { FilterPaneRangeFilterValueLabel } from './FilterPaneRangeFilterValueLabel';\nimport './FilterPaneRangeFilter.css';\n\nconst MySlider = withStyles({\n\troot: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n    \tleft: '50%',\n    \twidth: 'calc(100% - 60px)',\n    \ttransform: 'translate(-50%, -50%)',\n    \tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\trail: {\n\t\theight: 2,\n\t\topacity: 1,\n\t\tbackgroundColor: 'gray'\n\t},\n\ttrack: {\n\t\theight: 6,\n\t\tbackgroundColor: '#d3d3d3'\n\t},\n\tmark: {\n\t\twidth: 2,\n\t\theight: 2,\n\t\tcolor: 'gray',\n\t\ttransform: 'translateX(-50%)',\n\t\tborderRadius: '50%'\n\t},\n\tmarkLabel: {\n\t\ttop: 20,\n\t\tcolor: 'gray',\n\t\tfontWeight: 300,\n\t\tfontSize: 13,\n\t\tfontFamily: 'Quicksand'\n\t},\n\tthumb: {\n\t\twidth: 16,\n    \theight: 16,\n\t\tmarginTop: 0,\n\t\tmarginLeft: 0,\n\t\tborder: '3px solid #1b1e23',\n\t\ttransform: 'translateX(-50%)',\n\t\tbackground: '#d3d3d3',\n\t\t'&:hover': { boxShadow: 'none' },\n\t\t'&.MuiSlider-active': { boxShadow: 'none' },\n\t\t'&.Mui-focusVisible': { boxShadow: 'none' },\n\t}\n})(Slider);\n\nexport const FilterPaneRangeFilter = ({\n\tmin,\n\tmax,\n\tvalue,\n\tdispatch\n}) => {\n\tconst handleChangeSlider = (event, value) => \n\t\tdispatch({ type: 'CHANGE_FILTER_PANE_RANGE', value });\n\n\treturn (\n\t\t<div className=\"range-filter\">\n\t\t\t<MySlider\n\t\t\t\tmin={ min }\n\t\t\t\tmax={ max }\n\t\t\t\tvalue={ value }\n\t\t\t\tstep={ 1 } // assumed integers\n\t\t\t\tvalueLabelDisplay=\"on\"\n\t\t\t\tValueLabelComponent={ FilterPaneRangeFilterValueLabel }\n\t\t\t\tonChange={ handleChangeSlider }\n\t\t\t\tmarks={[\n\t\t\t\t\t{ value: min, label: min }, \n\t\t\t\t\t{ value: max, label: max }\n\t\t\t\t]}\n\t\t\t/>\n\t\t</div>\n\t);\n};","import { FilterPaneCategoryList } from './FilterPaneCategoryList';\nimport { FilterPaneRangeFilter } from './FilterPaneRangeFilter';\n\nexport const FilterPaneAttributeValue = ({\n\tattribute,\n\tattributeValueList,\n\tattributeValue,\n\tdispatch\n}) => {\n\tconst { isCategorical } = attribute;\n\n\tif (attribute.key === 'NONE')\n\t\treturn null;\n\n\tif (isCategorical)\n\t\treturn (\n\t\t\t<FilterPaneCategoryList \n\t\t\t\tcategoryList={ attributeValueList } \n\t\t\t\tdispatch={ dispatch }\n\t\t\t/> \n\t\t); // { key, displayName, isSelected }\n\n\tif (!isCategorical) \n\t\treturn (\n\t\t\t<FilterPaneRangeFilter \n\t\t\t\tmin={ attributeValueList[0] } \n\t\t\t\tmax={ attributeValueList[1] } \n\t\t\t\tvalue={ attributeValue } \n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t);\n}","import { IoCloseOutline } from 'react-icons/io5';\nimport './FilterPaneFilterList.css';\n\nexport const FilterPaneFilterList = ({ appliedFilterList, dispatch }) => {\n\tconst handleClickRemoveButton = listItem =>\n\t\tdispatch({ type: 'REMOVE_FILTER_PANE_FILTER', listItem });\n\n\tif (appliedFilterList.length === 0)\n\t\treturn null;\n\n\treturn (\n\t\t<div className=\"applied-filters\">\n\n\t\t\t<div className=\"label\">APPLIED FILTERS</div>\n\n\t\t\t<div className=\"list\">\n\t\t\t\t{ appliedFilterList.map(listItem => \n\t\t\t\t\t<div key={ `${ listItem.dataSet.key }-${ listItem.attribute.key }` } className=\"list-item\">\n\n\t\t\t\t\t\t<span \n\t\t\t\t\t\t\tclassName=\"remove-button\"\n\t\t\t\t\t\t\tonClick={ () => { handleClickRemoveButton(listItem) } }\n\t\t\t\t\t\t><IoCloseOutline /></span>\n\n\t\t\t\t\t\t<span className=\"description\">{ \n\t\t\t\t\t\t\t`Filtered ${ listItem.dataSet.displayName } by ${ listItem.attribute.displayName }` \n\t\t\t\t\t\t}</span>\n\n\t\t\t\t\t</div>) }\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};","import { memo } from 'react'; // avoid re-rendering on tooltip \nimport { DarkDropDown } from '../widgets/DarkDropDown/DarkDropDown';\nimport { FilterPaneAttributeValue } from './FilterPaneAttributeValue/FilterPaneAttributeValue';\nimport { FilterPaneFilterList } from './FilterPaneFilterList/FilterPaneFilterList';\nimport './FilterPane.css';\n\nexport const FilterPane = memo(({\n\tfilterPaneState,\n\tdispatch\n}) => {\n\tconst {\n\t\tisOpen,\n\t\tdataSetList,\n\t\tdataSet,\n\t\tattributeList,\n\t\tattribute,\n\t\tattributeValueList,\n\t\tattributeValue,\n\t\tappliedFilterList\n\t} = filterPaneState;\n\n\tconst handleSelectDataSet = event =>\n\t\tdispatch({ \n\t\t\ttype: 'SELECT_FILTER_PANE_DATASET',\n\t\t\toption: event.target.value\n\t\t});\n\tconst handleSelectAttribute = event =>\n\t\tdispatch({ \n\t\t\ttype: 'SELECT_FILTER_PANE_ATTRIBUTE',\n\t\t\toption: event.target.value\n\t\t});\n\n\tif (!isOpen)\n\t\treturn null;\n\n\treturn (\n\t\t<div id=\"filter-pane\">\n\t\t\t<DarkDropDown\n\t\t\t\tlist={ dataSetList }\n\t\t\t\toption={ dataSet }\n\t\t\t\tclassName='data-set-drop-down'\n\t\t\t\tlabelText='DATASET'\n\t\t\t\thandleSelect={ handleSelectDataSet }\n\t\t\t/>\n\t\t\t<DarkDropDown\n\t\t\t\tlist={ attributeList }\n\t\t\t\toption={ attribute }\n\t\t\t\tclassName='attribute-drop-down'\n\t\t\t\tlabelText='FILTER BY'\n\t\t\t\thandleSelect={ handleSelectAttribute }\n\t\t\t/>\n\t\t\t<FilterPaneAttributeValue\n\t\t\t\tattribute={ attribute }\n\t\t\t\tattributeValueList={ attributeValueList }\n\t\t\t\tattributeValue={ attributeValue }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<FilterPaneFilterList\n\t\t\t\tappliedFilterList={ appliedFilterList }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</div>\n\t);\n});","import { memo } from 'react';\nimport { FaTimes } from \"react-icons/fa\";\nimport { BiSearch } from \"react-icons/bi\";\nimport './SearchWindowHeader.css';\n\nexport const SearchWindowHeader = memo(({\n\tsourceState,\n\ttargetState,\n\tsearchDispatch,\n\tinterfaceDispatch\n}) => {\n\tconst { \n\t\tquery: sourceQuery,\n\t\tlist: sourceList,\n\t\tlistTop: sourceListTop,\n\t\tlistLeft: sourceListLeft\n\t} = sourceState;\n\tconst { \n\t\tquery: targetQuery,\n\t\tlist: targetList,\n\t\tlistTop: targetListTop,\n\t\tlistLeft: targetListLeft\n\t} = targetState;\n\n\tconst handleClickCloseButton = () => interfaceDispatch({ type: 'CLOSE_SEARCH_WINDOW' });\n\tconst handleChangeSourceInput = event => searchDispatch({ type: 'INPUT_SOURCE_QUERY', inputEl: event.target });\n\tconst handleChangeTargetInput = event => searchDispatch({ type: 'INPUT_TARGET_QUERY', inputEl: event.target });\n\tconst handleClickSearchButton = () => searchDispatch({ type: 'START_SEARCHING' });\n\tconst handleClickCountryName = (sourceOrTarget, countryName) => \n\t\tsearchDispatch({\n\t\t\ttype: 'CLICK_COUNTRY_NAME',\n\t\t\tsourceOrTarget: sourceOrTarget,\n\t\t\tcountryName: countryName\n\t\t});\n\tconst handleMouseEnterCountryName = (sourceOrTarget, countryName) => \n\t\tsearchDispatch({\n\t\t\ttype: 'MOUSE_ENTER_COUNTRY_NAME',\n\t\t\tsourceOrTarget: sourceOrTarget,\n\t\t\tcountryName: countryName\n\t\t});\n\tconst handleMounseLeaveCountryName = (sourceOrTarget, countryName) => \n\t\tsearchDispatch({\n\t\t\ttype: 'MOUSE_LEAVE_COUNTRY_NAME',\n\t\t\tsourceOrTarget: sourceOrTarget,\n\t\t\tcountryName: countryName\n\t\t});\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t\n\t\t\t<div className=\"search-bar\">\n\t\t\t\t<label className=\"source input-box\">\n\t\t\t\t\t<div className=\"label\">SOURCE</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tvalue={ sourceQuery }\n\t\t\t\t\t\tonChange={ handleChangeSourceInput }\n\t\t\t\t\t\tonFocus={ handleChangeSourceInput }\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label className=\"target input-box\">\n\t\t\t\t\t<div className=\"label\">TARGET</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tvalue={ targetQuery }\n\t\t\t\t\t\tonChange={ handleChangeTargetInput }\n\t\t\t\t\t\tonFocus={ handleChangeTargetInput }\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"search-button\" \n\t\t\t\t\tonClick={ handleClickSearchButton }\n\t\t\t\t><BiSearch /></div>\n\t\t\t</div>\n\n\t\t\t<FaTimes \n\t\t\t\tclassName=\"close-button\"\n\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t/>\n\n\t\t\t{ sourceList.length === 0 ? null :\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"source country-list\" \n\t\t\t\t\tstyle={{ top: sourceListTop, left: sourceListLeft }}\n\t\t\t\t>{ sourceList.map(({ countryName, selected }) => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ countryName }\n\t\t\t\t\t\tclassName={ selected ? \"source country-name selected\" : \"source country-name\" }\n\t\t\t\t\t\tonClick={ () => { handleClickCountryName('source', countryName) } }\n\t\t\t\t\t\tonMouseEnter={ () => { handleMouseEnterCountryName('source', countryName) } }\n\t\t\t\t\t\tonMouseLeave={ () => { handleMounseLeaveCountryName('source', countryName) } }\n\t\t\t\t\t>{ countryName }</div>) }\n\t\t\t\t</div> }\n\n\t\t\t{ targetList.length === 0 ? null :\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"target country-list\" \n\t\t\t\t\tstyle={{ top: targetListTop, left: targetListLeft }}\n\t\t\t\t>{ targetList.map(({ countryName, selected }) => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ countryName }\n\t\t\t\t\t\tclassName={ selected ? \"target country-name selected\" : \"target country-name\" }\n\t\t\t\t\t\tonClick={ () => { handleClickCountryName('target', countryName) } }\n\t\t\t\t\t\tonMouseEnter={ () => { handleMouseEnterCountryName('target', countryName) } }\n\t\t\t\t\t\tonMouseLeave={ () => { handleMounseLeaveCountryName('target', countryName) } }\n\t\t\t\t\t>{ countryName }</div>) }\n\t\t\t\t</div> }\n\n\t\t</div>\n\t);\n});","import { format } from 'd3';\nimport './LineChart.css';\n\nexport const bilateralLineChart = {\n\twidth: 180,\n\theight: 60,\n\tmargin: {\n\t\ttop: 10,\n\t\tleft: 30,\n\t\tbottom: 10,\n\t\tright: 30\n\t}\n};\n\nexport const nonBilateralLineChart = {\n\twidth: 370,\n\theight: 70,\n\tmargin: {\n\t\ttop: 10,\n\t\tleft: 40,\n\t\tbottom: 10,\n\t\tright: 40\n\t}\n};\n\nexport const LineChart = ({ isBilateral, data }) => {\n\tconst percentFormatter = format('.0%');\n\n\tif (isBilateral) {\n\t\tconst { margin } = bilateralLineChart;\n\t\tconst { \n\t\t\ttitleText, \n\t\t\tstartYear, endYear, \n\t\t\tstartX, endX, \n\t\t\tstartY, endY, \n\t\t\tpathData, percentChange \n\t\t} = data;\n\t\tconst formattedPercentChange = percentChange > 0 \n\t\t\t\t\t\t\t\t\t ? `+${ percentFormatter(percentChange) }`\n\t\t\t\t\t\t\t\t\t : percentFormatter(percentChange);\n\n\t\treturn (\n\t\t\t<div className=\"line-chart\">\n\t\t\t\t<div className=\"title\">{ titleText }</div>\n\t\t\t\t<div className=\"percent-change\">{ formattedPercentChange }</div>\n\t\t\t\t<svg>\n\t\t\t\t\t<g style={{ transform: `translate(${ margin.left }px, ${ margin.top }px)` }}>\n\t\t\t\t\t\t<path d={ pathData }></path>\n\t\t\t\t\t\t<text className=\"start year\" x={ startX } y={ startY } dx=\"-3\">{ startYear }</text>\n\t\t\t\t\t\t<text className=\"end year\" x={ endX } y={ endY } dx=\"3\">{ endYear }</text>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!isBilateral) {\n\t\tconst { margin } = nonBilateralLineChart;\n\t\tconst { \n\t\t\tcountryName, metricName, \n\t\t\tstartValue, endValue, \n\t\t\tstartYear, endYear, \n\t\t\tstartX, endX, \n\t\t\tstartY, endY, \n\t\t\tpathData, percentChange \n\t\t} = data;\n\t\tconst verb = percentChange >= 0 ? 'increased' : 'decreased';\n\t\tconst roundedStartValue = Math.round((startValue + Number.EPSILON) * 1000) / 1000;\n\t\tconst roundedEndValue = Math.round((endValue + Number.EPSILON) * 1000) / 1000;\n\t\tconst formattedPercentChange = percentChange > 0 \n\t\t\t\t\t\t\t\t\t ? `+${ percentFormatter(percentChange) }`\n\t\t\t\t\t\t\t\t\t : percentFormatter(percentChange);\n\n\t\treturn (\n\t\t\t<div className=\"line-chart\">\n\t\t\t\t<div className=\"description\">\n\t\t\t\t\tThe { metricName } of <span>{ countryName }</span> { verb } from <span>{ roundedStartValue }\n\t\t\t\t\t</span> in <span>{ startYear }</span> to <span>{ roundedEndValue }</span> in <span>{ endYear }\n\t\t\t\t\t</span> (<span>{ formattedPercentChange }</span>).\n\t\t\t\t</div>\n\t\t\t\t<svg>\n\t\t\t\t\t<g style={{ transform: `translate(${ margin.left }px, ${ margin.top }px)` }}>\n\t\t\t\t\t\t<path d={ pathData }></path>\n\t\t\t\t\t\t<text className=\"start year\" x={ startX } y={ startY } dx=\"-5\">{ startYear }</text>\n\t\t\t\t\t\t<text className=\"end year\" x={ endX } y={ endY } dx=\"5\">{ endYear }</text>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n};","import { LineChart } from './LineChart';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport './TimeSeriesSection.css';\n\nconst MyInput = withStyles({\n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 15,\n\t\t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '1px dashed rgba(0, 0, 0, 1)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' },\n\t\t'&:after': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\tpadding: 0,\n\t\t'&.MuiSelect-select': { paddingRight: 0 },\n\t\t'&:focus': { backgroundColor: 'transparent' }\n\t},\n\ticon: {\n\t\tdisplay: 'none'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2\n\t}\n});\n\nexport const TimeSeriesSection = ({ \n\tsectionHeaderText, \n\tisBilateral, \n\tlineChartList,\n\tfilterYearList,\n\tfilterStartYear,\n\tfilterEndYear,\n\thandleChangeStartYear,\n\thandleChangeEndYear\n}) => {\n\tconst classes = useStyles();\n\n\tif (isBilateral)\n\t\treturn (\n\t\t\t<div className=\"time-series-section section bilateral\">\n\t\t\t\t<div className=\"header\">{ sectionHeaderText }</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t{ lineChartList.map(lineChartObject => \n\t\t\t\t\t\t\t<LineChart \n\t\t\t\t\t\t\t\tkey={ lineChartObject.key }\n\t\t\t\t\t\t\t\tisBilateral={ isBilateral }\n\t\t\t\t\t\t\t\tdata={ lineChartObject }\n\t\t\t\t\t\t\t/>) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"dummy-for-padding\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: Between <MySelect \n\t\t\t\t\t\tvalue={ filterStartYear }\n\t\t\t\t\t\tonChange={ handleChangeStartYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect> and <MySelect \n\t\t\t\t\t\tvalue={ filterEndYear }\n\t\t\t\t\t\tonChange={ handleChangeEndYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\tif (!isBilateral)\n\t\treturn (\n\t\t\t<div className=\"time-series-section section non-bilateral\">\n\t\t\t\t<div className=\"header\">{ sectionHeaderText }</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t{ lineChartList.map(lineChartObject => \n\t\t\t\t\t\t<LineChart \n\t\t\t\t\t\t\tkey={ lineChartObject.key }\n\t\t\t\t\t\t\tisBilateral={ isBilateral }\n\t\t\t\t\t\t\tdata={ lineChartObject }\n\t\t\t\t\t\t/>) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: Between <MySelect \n\t\t\t\t\t\tvalue={ filterStartYear }\n\t\t\t\t\t\tonChange={ handleChangeStartYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect> and <MySelect \n\t\t\t\t\t\tvalue={ filterEndYear }\n\t\t\t\t\t\tonChange={ handleChangeEndYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n};","import $ from 'jquery'; \nimport 'jquery-ui/ui/widgets/resizable';\nimport { useState, useEffect } from 'react';\nimport Clusterize from 'clusterize.js';\n\nconst widthConstraintRules = {};\n\nconst generateWidthConstraintCSS = () => {\n\tlet widthConstraintCSS = '';\n\n\tfor (let tableName in widthConstraintRules)\n\t\tfor (let columnIndex in widthConstraintRules[tableName])\n\t\t\twidthConstraintCSS += `.${ tableName }.data-table .row > .cell:nth-child(${ columnIndex }) { \n\t\t\t\twidth: ${ widthConstraintRules[tableName][columnIndex] }px;\n\t\t\t}`;\n\n\treturn widthConstraintCSS;\n};\n\nexport const useClusterize = (tableName, tableRowList) => {\n\tconst [ clusterizeObject, initClusterizeObject ] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst handleStartResize = (event, ui) => {\n\t\t\tif (!(tableName in widthConstraintRules))\n\t\t\t\twidthConstraintRules[tableName] = {};\n\n\t\t\tui.element.find('.ui-resizable-handle')\n\t\t\t\t.css('background', 'DodgerBlue');\n\t\t};\n\t\tconst handleEndResize = (event, ui) => {\n\t\t\tconst columnIndex = ui.element.index() + 1;\n\t\t\tconst newWidthAfterResizing = ui.size.width;\n\t\t\tlet widthConstraintCSS = '';\n\n\t\t\twidthConstraintRules[tableName][columnIndex] = newWidthAfterResizing;\n\t\t\twidthConstraintCSS = generateWidthConstraintCSS();\n\t\t\t$('#table-resize-style').html(widthConstraintCSS);\n\n\t\t\tui.element.find('.ui-resizable-handle')\n\t\t\t\t.css('background', '');\n\t\t};\n\n\t\t// init table on mount\n\t\tinitClusterizeObject(new Clusterize({\n\t\t\tscrollId: `${ tableName }-scroll-area`,\n\t  \t\tcontentId: `${ tableName }-content-area`\n\t\t}));\n\t\t$(`.${ tableName }.data-table > .header > .row > .cell`).resizable({\n\t\t\thandles: 'e',\n\t\t\tstart: handleStartResize,\n\t\t\tstop: handleEndResize\n\t\t});\n\n\t\t// remove css on unmount\n\t\treturn () => { \n\t\t\tlet widthConstraintCSS = '';\n\t\t\tdelete widthConstraintRules[tableName];\n\t\t\twidthConstraintCSS = generateWidthConstraintCSS();\n\t\t\t$('#table-resize-style').html(widthConstraintCSS);\n\t\t}\n\t}, [ tableName ]);\n\n\tuseEffect(() => {\n\t\tif (clusterizeObject === null)\n\t\t\treturn;\n\n\t\tclusterizeObject.update(tableRowList);\n\t}, [ clusterizeObject, tableRowList ]);\n};","import $ from 'jquery'; \nimport { useClusterize } from './useClusterize';\nimport './DataTable.css';\n\nexport const DataTable = ({\n\ttableName,\n\tattributeList,\n\ttableRowList\n}) => {\n\tconst handleScroll = event => {\n\t\tconst tableScrollLeft = $(event.target).scrollLeft();\n\t\t$(`.${ tableName }.data-table .header .row`).scrollLeft(tableScrollLeft);\n\t};\n\n\tuseClusterize(tableName, tableRowList);\n\n\treturn (\n\t\t<div className={ `${ tableName } data-table` }>\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ attributeList.map(attributeName => \n\t\t\t\t\t\t<div key={ attributeName } className=\"cell\">\n\t\t\t\t\t\t\t<div className=\"label\">{ attributeName }</div>\n\t\t\t\t\t\t</div>) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclassName=\"content\" \n\t\t\t\tid={ `${ tableName }-scroll-area` }\n\t\t\t\tonScroll={ handleScroll }\n\t\t\t>\n\t\t\t\t<div id={ `${ tableName }-content-area` } className=\"content-wrapper\"></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import { DataTable } from '../../widgets/DataTable/DataTable';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport './DataTableSection.css';\n\nconst MyInput = withStyles({\n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 14,\n\t\t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '1px dashed rgba(0, 0, 0, 1)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' },\n\t\t'&:after': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\tpadding: 0,\n\t\t'&.MuiSelect-select': { paddingRight: 0 },\n\t\t'&:focus': { backgroundColor: 'transparent' }\n\t},\n\ticon: {\n\t\tdisplay: 'none'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({\n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2\n\t}\n});\n\nexport const DataTableSection = ({\n\ttableName,\n\ttableHeaderText,\n\tattributeList,\n\ttableRowList,\n\tfilterAttrNameList,\n\tfilterAttrValueList,\n\tfilterAttrName,\n\tfilterAttrValue,\n\thandleChangeAttrName,\n\thandleChangeAttrValue\n}) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className=\"data-table-section section\">\n\t\t\t<div className=\"header\">{ tableHeaderText }</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<DataTable\n\t\t\t\t\ttableName={ tableName }\n\t\t\t\t\tattributeList={ attributeList }\n\t\t\t\t\ttableRowList={ tableRowList }\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t{ filterAttrValueList.length === 0 ? \n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: <MySelect\n\t\t\t\t\t\tvalue={ filterAttrName }\n\t\t\t\t\t\tonChange={ handleChangeAttrName }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterAttrNameList.map(option => \n\t\t\t\t\t\t\t<MyMenuItem key={ option.key } value={ option }>\n\t\t\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t\t\t</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div> : \n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: <MySelect\n\t\t\t\t\t\tvalue={ filterAttrName }\n\t\t\t\t\t\tonChange={ handleChangeAttrName }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterAttrNameList.map(option => \n\t\t\t\t\t\t\t<MyMenuItem key={ option.key } value={ option }>\n\t\t\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t\t\t</MyMenuItem>) }\n\t\t\t\t\t</MySelect> equals <MySelect\n\t\t\t\t\t\tvalue={ filterAttrValue }\n\t\t\t\t\t\tonChange={ handleChangeAttrValue }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterAttrValueList.map(option => \n\t\t\t\t\t\t\t<MyMenuItem key={ option.key } value={ option }>\n\t\t\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t\t\t</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div> }\n\n\t\t</div>\n\t);\n};","import { memo } from 'react';\nimport { TimeSeriesSection } from './TimeSeriesSection';\nimport { DataTableSection } from './DataTableSection';\nimport './SearchWindowContent.css';\n\nconst generateSearchResultDescription = ({\n\tinferredSourceName,\n\tinferredTargetName,\n\ttimeSeriesSearchResultList,\n\tlinkSearchResultList\n}) => {\n\tconst hasSearchQueries = inferredSourceName !== null || inferredTargetName !== null;\n\tconst hasSearchResults = timeSeriesSearchResultList.length > 0 || linkSearchResultList.length > 0;\n\n\tif (!hasSearchQueries) {\n\t\treturn 'PLEASE ENTER SEARCH QUERIES';\n\t}\n\tif (hasSearchQueries && !hasSearchResults) {\n\t\tif (inferredSourceName !== null && inferredTargetName !== null)\n\t\t\treturn `CANNOT FIND SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() } \n\t\t\t\t\tAND TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName === null && inferredTargetName !== null)\n\t\t\treturn `CANNOT FIND SEARCH RESULTS FOR TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName !== null && inferredTargetName === null)\n\t\t\treturn `CANNOT FIND SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() }`;\n\t}\n\tif (hasSearchQueries && hasSearchResults) {\n\t\tif (inferredSourceName !== null && inferredTargetName !== null)\n\t\t\treturn `SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() } \n\t\t\t\t\tAND TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName === null && inferredTargetName !== null)\n\t\t\treturn `SEARCH RESULTS FOR TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName !== null && inferredTargetName === null)\n\t\t\treturn `SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() }`;\n\t}\n};\n\nexport const SearchWindowContent = memo(({ \n\tcontentState,\n\tsearchDispatch\n}) => {\n\tif (contentState === null)\n\t\treturn null;\n\n\telse if (contentState !== null) {\n\t\tconst { timeSeriesSearchResultList, linkSearchResultList } = contentState;\n\n\t\tconst handleChangeYear = (key, startYear, endYear) => \n\t\t\tsearchDispatch({\n\t\t\t\ttype: 'FILTER_TIME_SERIES_SEARCH_RESULT',\n\t\t\t\tsearchResultKey: key,\n\t\t\t\tfilterStartYear: startYear,\n\t\t\t\tfilterEndYear: endYear\n\t\t\t});\n\t\tconst handleChangeAttrName = (key, filterAttrName) => \n\t\t\tsearchDispatch({\n\t\t\t\ttype: 'SELECT_FILTER_ATTRIBUTE_NAME',\n\t\t\t\tsearchResultKey: key,\n\t\t\t\tfilterAttrName: filterAttrName\n\t\t\t});\n\t\tconst handleChangeAttrValue = (key, filterAttrName, filterAttrValue) => \n\t\t\tsearchDispatch({\n\t\t\t\ttype: 'SELECT_FILTER_ATTRIBUTE_VALUE',\n\t\t\t\tsearchResultKey: key,\n\t\t\t\tfilterAttrName: filterAttrName,\n\t\t\t\tfilterAttrValue: filterAttrValue\n\t\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"content\">\n\n\t\t\t\t<div className=\"result-description\">\n\t\t\t\t\t{ generateSearchResultDescription(contentState) }\n\t\t\t\t</div>\n\n\t\t\t\t{ timeSeriesSearchResultList.map(({\n\t\t\t\t\tkey,\n\t\t\t\t\tsectionHeaderText,\n\t\t\t\t\tisBilateral,\n\t\t\t\t\tlineChartList,\n\t\t\t\t\tfilterYearList,\n\t\t\t\t\tfilterStartYear,\n\t\t\t\t\tfilterEndYear\n\t\t\t\t}) => \n\t\t\t\t\t<TimeSeriesSection \n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\tsectionHeaderText={ sectionHeaderText }\n\t\t\t\t\t\tisBilateral={ isBilateral }\n\t\t\t\t\t\tlineChartList={ lineChartList }\n\t\t\t\t\t\tfilterYearList={ filterYearList }\n\t\t\t\t\t\tfilterStartYear={ filterStartYear }\n\t\t\t\t\t\tfilterEndYear={ filterEndYear }\n\t\t\t\t\t\thandleChangeStartYear={ e => { handleChangeYear(key, e.target.value, filterEndYear) } }\n\t\t\t\t\t\thandleChangeEndYear={ e => { handleChangeYear(key, filterStartYear, e.target.value) } }\n\t\t\t\t\t/>) }\n\n\t\t\t\t{ linkSearchResultList.map(({\n\t\t\t\t\tkey,\n\t\t\t\t\ttableName,\n\t\t\t\t\ttableHeaderText,\n\t\t\t\t\tattributeList,\n\t\t\t\t\ttableRowList,\n\t\t\t\t\tfilterAttrNameList,\n\t\t\t\t\tfilterAttrValueList,\n\t\t\t\t\tfilterAttrName,\n\t\t\t\t\tfilterAttrValue\n\t\t\t\t}) => \n\t\t\t\t\t<DataTableSection \n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\ttableName={ tableName }\n\t\t\t\t\t\ttableHeaderText={ tableHeaderText }\n\t\t\t\t\t\tattributeList={ attributeList }\n\t\t\t\t\t\ttableRowList={ tableRowList }\n\t\t\t\t\t\tfilterAttrNameList={ filterAttrNameList }\n\t\t\t\t\t\tfilterAttrValueList={ filterAttrValueList }\n\t\t\t\t\t\tfilterAttrName={ filterAttrName }\n\t\t\t\t\t\tfilterAttrValue={ filterAttrValue }\n\t\t\t\t\t\thandleChangeAttrName={ e => { handleChangeAttrName(key, e.target.value) } }\n\t\t\t\t\t\thandleChangeAttrValue={ e => { handleChangeAttrValue(key, filterAttrName, e.target.value) } }\n\t\t\t\t\t/>) }\n\n\t\t\t</div>\n\t\t);\n\t}\n});","import levenshtein from 'js-levenshtein';\n\nconst COUNTRY_LIST_LENGTH = 5;\n\nexport const computeWordDistance = (countryName, query) => {\n\tconst queryIsStart = countryName.indexOf(query) === 0;\n\tlet wordDistance = null;\n\n\tif (countryName.length > query.length) {\n\t\tif (queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / countryName.length - 1;\n\t\telse if (!queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / countryName.length;\n\t}\n\telse if (countryName.length <= query.length) {\n\t\tif (queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / query.length - 1;\n\t\telse if (!queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / query.length;\n\t}\n\n\treturn wordDistance;\n};\n\nexport const searchCountryListByQuery = (countryNameList, query) => {\n\tif (query === '')\n\t\treturn [];\n\n\tconst lowerCaseQuery = query.toLowerCase().replace(/\\s+/g, '');\n\tconst similarCountryList = []; // { countryName, wordDistance }\n\n\tfor (let countryName of countryNameList) {\n\t\tconst lowerCaseCountryName = countryName.toLowerCase().replace(/\\s+/g, '');\n\n\t\tsimilarCountryList.push({\n\t\t\tcountryName: countryName,\n\t\t\twordDistance: computeWordDistance(lowerCaseCountryName, lowerCaseQuery),\n\t\t\tselected: false\n\t\t});\n\t}\n\n\treturn similarCountryList\n\t\t.sort((a, b) => a.wordDistance - b.wordDistance)\n\t\t.filter((d, i) => i < COUNTRY_LIST_LENGTH);\n};\n\nexport const getCurrSelectionIndex = countryList => {\n\tfor (let i = 0; i < countryList.length; i++)\n\t\tif (countryList[i].selected)\n\t\t\treturn i;\n\n\treturn null;\n};\n\nexport const getPrevSelectionIndex = currSelectionIndex => {\n\tif (currSelectionIndex === null)\n\t\treturn COUNTRY_LIST_LENGTH - 1;\n\tif (currSelectionIndex === 0)\n\t\treturn COUNTRY_LIST_LENGTH - 1;\n\n\treturn currSelectionIndex - 1;\n};\n\nexport const getNextSelectionIndex = currSelectionIndex => {\n\tif (currSelectionIndex === null)\n\t\treturn 0;\n\tif (currSelectionIndex === COUNTRY_LIST_LENGTH - 1)\n\t\treturn 0;\n\n\treturn currSelectionIndex + 1;\n}\n\nexport const getSelectedCountryName = countryList => {\n\tfor (let { countryName, selected } of countryList)\n\t\tif (selected) return countryName;\n\n\treturn null;\n};","import { scaleLinear, line, curveBasis, extent } from 'd3';\nimport { bilateralLineChart, nonBilateralLineChart } from '../SearchWindowContent/LineChart';\nimport { computeWordDistance } from './updateSearchWindowHeader';\n\n// helpers\n\nconst setYScaleDomain = (yScale, timeSeriesList) => {\n\tconst [ min, max ] = extent(timeSeriesList, d => d.value);\n\n\tyScale.domain([ min, max ]);\n};\n\nexport const findMostSimilarCountry = (countryList, query) => {\n\tif (query === '')\n\t\treturn { ID: null, countryName: null };\n\n\tconst lowerCaseQuery = query.toLowerCase().replace(/\\s+/g, '');\n\tconst sortedCountryList = []; // { ID, countryName, wordDistance }\n\n\tfor (let { name: countryName, ID } of countryList) {\n\t\tconst lowerCaseCountryName = countryName.toLowerCase().replace(/\\s+/g, '');\n\t\tconst wordDistance = computeWordDistance(lowerCaseCountryName, lowerCaseQuery);\n\t\tsortedCountryList.push({ ID, countryName, wordDistance });\n\t}\n\n\treturn sortedCountryList\n\t\t.sort((a, b) => a.wordDistance - b.wordDistance)[0];\n};\n\nconst generateTableRowList = (\n\tfilteredLinkRowList,\n\tdataTableAttrList,\n\tcountryIDToData\n) => {\n\tconst tableRowList = [];\n\n\tfor (let linkRowObject of filteredLinkRowList) {\n\t\tlet rowString = '';\n\n\t\tfor (let { attributeName, isID } of dataTableAttrList) {\n\t\t\tlet attributeValue = linkRowObject[attributeName];\n\n\t\t\tif (attributeValue === '')\n\t\t\t\tattributeValue = 'null';\n\t\t\telse if (isID)\n\t\t\t\tattributeValue = countryIDToData[attributeValue].displayName;\n\n\t\t\trowString += `<div class=\"cell\">${ attributeValue }</div>`;\n\t\t}\n\n\t\trowString = `<div class=\"row\">${ rowString }</div>`;\n\t\ttableRowList.push(rowString);\n\t}\n\n\treturn tableRowList;\n};\n\n/* generateTimeSeriesSearchResultList */\n\nconst filterIDToTimeSeriesList = (\n\tquerySourceID, queryTargetID, \n\tIDToTimeSeriesList,\n\tisBilateral\n) => {\n\tconst filteredIDToTimeSeriesList = {};\n\n\tif (isBilateral)\n\t\tfor (let sourceTargetID in IDToTimeSeriesList) {\n\t\t\tconst [ currSourceID, currTargetID ] = sourceTargetID.split('-');\n\t\t\tconst sourceIsMatched = querySourceID === null || querySourceID === currSourceID;\n\t\t\tconst targetIsMatched = queryTargetID === null || queryTargetID === currTargetID;\n\n\t\t\tif (sourceIsMatched && targetIsMatched)\n\t\t\t\tfilteredIDToTimeSeriesList[sourceTargetID] = IDToTimeSeriesList[sourceTargetID]\n\t\t\t\t\t.filter(({ value }) => value !== null && value !== 0); // filter zero to avoid inf\n\t\t}\n\n\telse if (!isBilateral) {\n\t\tif (querySourceID !== null && querySourceID in IDToTimeSeriesList)\n\t\t\tfilteredIDToTimeSeriesList[querySourceID] = IDToTimeSeriesList[querySourceID]\n\t\t\t\t.filter(({ value }) => value !== null && value !== 0); // filter zero to avoid inf\n\n\t\tif (queryTargetID !== null && queryTargetID in IDToTimeSeriesList)\n\t\t\tfilteredIDToTimeSeriesList[queryTargetID] = IDToTimeSeriesList[queryTargetID]\n\t\t\t\t.filter(({ value }) => value !== null && value !== 0); // filter zero to avoid inf\n\t}\n\n\treturn filteredIDToTimeSeriesList;\n};\n\nexport const generateTimeSeriesSearchResultList = (\n\tsourceID, targetID, \n\tcountryIDToData,\n\ttimeSeriesDataList\n) => {\n\tif (sourceID === null && targetID === null)\n\t\treturn [];\n\n\tconst timeSeriesSearchResultList = []; \n\t/*  \n\t\tsectionHeaderText, \n\t\tisBilateral, \n\t\tlineChartList,\n\t\tfilterYearList,\n\t\tfilterStartYear, \n\t\tfilterEndYear\n\t*/\n\n\tfor (let timeSeriesDataObject of timeSeriesDataList) {\n\t\tconst lineChartList = [];\n\t\tconst IDToTimeSeriesList = timeSeriesDataObject.data;\n\t\tconst { isBilateral, yearList, displayName, metricName } = timeSeriesDataObject.metadata;\n\t\tconst { width, height, margin } = isBilateral ? bilateralLineChart : nonBilateralLineChart;\n\t\tconst filteredIDToTimeSeriesList = filterIDToTimeSeriesList(\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tIDToTimeSeriesList,\n\t\t\tisBilateral\n\t\t);\n\t\tconst xScale = scaleLinear()\n\t\t\t.domain([ yearList[0], yearList[yearList.length - 1] ])\n\t\t\t.range([ 0, width - margin.left - margin.right ]);\n\t\tconst yScale = scaleLinear()\n\t\t\t.range([ height - margin.top - margin.bottom, 0 ]);\n\t\tconst pathGenerator = line()\n\t\t\t.curve(curveBasis)\n\t    \t.x(d => xScale(d.year))\n\t    \t.y(d => yScale(d.value));\n\n\t    // create lineChartList\n\t    for (let ID in filteredIDToTimeSeriesList) {\n\t    \tif (filteredIDToTimeSeriesList[ID].length === 0) continue; // not include empty time series\n\t    \tsetYScaleDomain(yScale, filteredIDToTimeSeriesList[ID]); // set for each loop\n\n\t    \tconst timeSeriesList = filteredIDToTimeSeriesList[ID];\n\t    \tconst startValue = timeSeriesList[0].value;\n    \t\tconst endValue = timeSeriesList[timeSeriesList.length - 1].value;\n    \t\tconst percentChange = (endValue - startValue) / Math.abs(startValue);\n\n    \t\tconst pathData = pathGenerator(timeSeriesList);\n\t\t\tconst startYear = timeSeriesList[0].year;\n\t\t\tconst endYear = timeSeriesList[timeSeriesList.length - 1].year;\n\t\t\tconst startX = xScale(startYear), endX = xScale(endYear);\n\t\t\tconst startY = yScale(startValue), endY = yScale(endValue);\n\n\t\t\tif (isBilateral) {\n\t\t\t\tconst [ sourceID, targetID ] = ID.split('-');\n\t\t\t\tconst sourceName = countryIDToData[sourceID].displayName;\n    \t\t\tconst targetName = countryIDToData[targetID].displayName;\n    \t\t\tconst titleText = `${ sourceName } → ${ targetName }`;\n\n    \t\t\tlineChartList.push({\n\t\t\t\t\tkey: ID,\n\t\t\t\t\ttitleText,\n\t\t\t\t\tstartYear, endYear,\n\t\t\t\t\tstartX, endX,\n\t\t\t\t\tstartY, endY,\n\t\t\t\t\tpathData, percentChange,\n\t\t\t\t\ttimeSeriesList // for filtering\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (!isBilateral) {\n\t\t\t\tconst nodeID = ID;\n\t\t\t\tconst countryName = countryIDToData[nodeID].displayName;\n\n\t\t\t\tlineChartList.push({\n\t\t\t\t\tkey: ID,\n\t\t\t\t\tcountryName, metricName,\n\t\t\t\t\tstartValue, endValue,\n\t\t\t\t\tstartYear, endYear,\n\t\t\t\t\tstartX, endX,\n\t\t\t\t\tstartY, endY,\n\t\t\t\t\tpathData, percentChange,\n\t\t\t\t\ttimeSeriesList // for filtering\n\t\t\t\t});\n\t\t\t}\n\t    }\n\n\t    // push only if there are charts to show\n\t    if (lineChartList.length > 0)\n\t    \ttimeSeriesSearchResultList.push({\n\t    \t\tkey: displayName,\n\t    \t\tsectionHeaderText: displayName,\n\t    \t\tisBilateral: isBilateral,\n\t    \t\tfilterYearList: yearList,\n\t    \t\tfilterStartYear: yearList[0],\n\t    \t\tfilterEndYear: yearList[yearList.length - 1],\n\t    \t\tlineChartList: lineChartList\n\t    \t\t\t.sort((a, b) => b.percentChange - a.percentChange)\n\t    \t});\n\t}\n\n\treturn timeSeriesSearchResultList;\n};\n\n/* generateLinkSearchResultList */\n\nconst filterRawLinkRowList = (\n\tquerySourceID, queryTargetID,\n\trawLinkRowList, isDirected\n) => {\n\tconst filteredLinkRowList = [];\n\n\tfor (let linkRowObject of rawLinkRowList) {\n\t\tif (isDirected) {\n\t\t\tconst currSourceID = linkRowObject.node1;\n\t\t\tconst currTargetID = linkRowObject.node2;\n\t\t\tconst sourceMatched = querySourceID === null || querySourceID === currSourceID;\n\t\t\tconst targetMatched = queryTargetID === null || queryTargetID === currTargetID;\n\n\t\t\tif (sourceMatched && targetMatched)\n\t\t\t\tfilteredLinkRowList.push(linkRowObject);\n\t\t}\n\n\t\telse if (!isDirected) {\n\t\t\tconst currNode1ID = linkRowObject.node1;\n\t\t\tconst currNode2ID = linkRowObject.node2;\n\n\t\t\tconst hasSourceQuery = querySourceID !== null;\n\t\t\tconst hasTargetQuery = queryTargetID !== null;\n\t\t\tconst sourceMatchedNode1 = querySourceID === currNode1ID;\n\t\t\tconst sourceMatchedNode2 = querySourceID === currNode2ID;\n\t\t\tconst targetMatchedNode1 = queryTargetID === currNode1ID;\n\t\t\tconst targetMatchedNode2 = queryTargetID === currNode2ID;\n\n\t\t\tconst selectionCriteria1 = hasSourceQuery && !hasTargetQuery && (sourceMatchedNode1 || sourceMatchedNode2);\n\t\t\tconst selectionCriteria2 = !hasSourceQuery && hasTargetQuery && (targetMatchedNode1 || targetMatchedNode2);\n\t\t\tconst selectionCriteria3 = hasSourceQuery && hasTargetQuery && (sourceMatchedNode1 && targetMatchedNode2);\n\t\t\tconst selectionCriteria4 = hasSourceQuery && hasTargetQuery && (targetMatchedNode1 && sourceMatchedNode2);\n\n\t\t\tif (selectionCriteria1 || selectionCriteria2 || selectionCriteria3 || selectionCriteria4)\n\t\t\t\tfilteredLinkRowList.push(linkRowObject);\n\t\t}\n\t}\n\n\treturn filteredLinkRowList;\n};\n\nexport const generateLinkSearchResultList = (\n\tsourceID, targetID,\n\tcountryIDToData,\n\tlinkDataList\n) => {\n\tif (sourceID === null && targetID === null)\n\t\treturn [];\n\n\tconst linkSearchResultList = []; \n\t/*\n\t\ttableName,\n\t\ttableHeaderText,\n\t\ttableRowList,\n\t\tattributeList,\n\t\tlinkRowList,\n\t\tfilterAttrNameList,\n\t\tfilterAttrValueList,\n\t\tfilterAttrName,\n\t\tfilterAttrValue\n\t*/\n\n\tfor (let linkDataObject of linkDataList) {\n\t\tconst rawLinkRowList = linkDataObject.data;\n\t\tconst { \n\t\t\tlinkType, \n\t\t\tdisplayName, \n\t\t\tisDirected,\n\t\t\tdataTable\n\t\t} = linkDataObject.metadata;\n\t\tconst filteredLinkRowList = filterRawLinkRowList(\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\trawLinkRowList, \n\t\t\tisDirected\n\t\t);\n\n\t\t// push only if have rows in table\n\t\tif (filteredLinkRowList.length > 0) {\n\t\t\tconst tableName = `${ linkType }-table`;\n\t\t\tconst tableHeaderText = `${ displayName } (${ filteredLinkRowList.length } ${ filteredLinkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\tconst attributeList = dataTable.attributeList.map(attribute => attribute.displayName);\n\t\t\tconst filterAttrNameList = [ { key: 'none', attributeName: null, displayName: 'None', isID: false } ];\n\t\t\tconst tableRowList = generateTableRowList(filteredLinkRowList, dataTable.attributeList, countryIDToData);\n\n\t\t\tfor (let { attributeName, displayName, isID } of dataTable.attributeList)\n\t\t\t\tfilterAttrNameList.push({ key: attributeName, attributeName, displayName, isID });\n\n\t\t\tlinkSearchResultList.push({ \n\t\t\t\tkey: tableName,\n\t\t\t\tlinkRowList: filteredLinkRowList,\n\t\t\t\tdisplayName: displayName, // for filtering\n\t\t\t\tdataTableAttrList: dataTable.attributeList, // for filtering\n\t\t\t\tfilterAttrNameList: filterAttrNameList,\n\t\t\t\tfilterAttrValueList: [],\n\t\t\t\tfilterAttrName: filterAttrNameList[0],\n\t\t\t\tfilterAttrValue: '', \n\t\t\t\ttableName,\n\t\t\t\ttableHeaderText,\n\t\t\t\tattributeList,\n\t\t\t\ttableRowList\n\t\t\t});\n\t\t}\n\t}\n\n\treturn linkSearchResultList;\n};\n\n/* filterTimeSeriesSearchResult */\n\nexport const filterTimeSeriesSearchResult = (\n\tprevTimeSeriesSearchResultList,\n\tsearchResultKey,\n\tfilterStartYear,\n\tfilterEndYear\n) => {\n\tconst newTimeSeriesSearchResultList = [ ...prevTimeSeriesSearchResultList ];\n\n\tfor (let timeSeriesSearchResultObject of newTimeSeriesSearchResultList)\n\t\tif (timeSeriesSearchResultObject.key === searchResultKey) {\n\t\t\tconst prevLineChartList = timeSeriesSearchResultObject.lineChartList;\n\t\t\tconst isBilateral = timeSeriesSearchResultObject.isBilateral;\n\n\t\t\tconst { width, height, margin } = isBilateral ? bilateralLineChart : nonBilateralLineChart;\n\t\t\tconst newLineChartList = [];\n\n\t\t\tconst xScale = scaleLinear()\n\t\t\t\t.domain([ filterStartYear, filterEndYear ].sort((a, b) => a - b))\n\t\t\t\t.range([ 0, width - margin.left - margin.right ]);\n\t\t\tconst yScale = scaleLinear()\n\t\t\t\t.range([ height - margin.top - margin.bottom, 0 ]);\n\t\t\tconst pathGenerator = line()\n\t\t\t\t.curve(curveBasis)\n\t\t    \t.x(d => xScale(d.year))\n\t\t    \t.y(d => yScale(d.value));\n\n\t\t\tfor (let lineChartObject of prevLineChartList) {\n\t\t\t\tconst filteredTimeSeriesList = lineChartObject.timeSeriesList\n\t\t\t\t\t.filter(({ year }) => \n\t\t\t\t\t\t(year >= filterStartYear && year <= filterEndYear) ||\n\t\t\t\t\t\t(year >= filterEndYear && year <= filterStartYear));\n\n\t\t\t\tif (filteredTimeSeriesList.length === 0) continue; // not include empty time series\n\t\t\t\tsetYScaleDomain(yScale, filteredTimeSeriesList); // set for each loop\n\t\t\t\t\n\t\t\t\tlineChartObject.startValue = filteredTimeSeriesList[0].value;\n\t\t\t\tlineChartObject.endValue = filteredTimeSeriesList[filteredTimeSeriesList.length - 1].value;\n\t\t\t\tlineChartObject.startYear = filteredTimeSeriesList[0].year;\n\t\t\t\tlineChartObject.endYear = filteredTimeSeriesList[filteredTimeSeriesList.length - 1].year;\n\t\t\t\tlineChartObject.startX = xScale(lineChartObject.startYear);\n\t\t\t\tlineChartObject.endX = xScale(lineChartObject.endYear);\n\t\t\t\tlineChartObject.startY = yScale(lineChartObject.startValue);\n\t\t\t\tlineChartObject.endY = yScale(lineChartObject.endValue);\n\t\t\t\tlineChartObject.pathData = pathGenerator(filteredTimeSeriesList);\n\t\t\t\tlineChartObject.percentChange = (lineChartObject.endValue - lineChartObject.startValue) / Math.abs(lineChartObject.startValue);\n\t\t\t\tnewLineChartList.push(lineChartObject);\n\t\t\t}\n\n\t\t\ttimeSeriesSearchResultObject.lineChartList = newLineChartList\n\t\t\t\t.sort((a, b) => b.percentChange - a.percentChange);\n\t\t\ttimeSeriesSearchResultObject.filterStartYear = filterStartYear;\n\t\t\ttimeSeriesSearchResultObject.filterEndYear = filterEndYear;\n\t\t}\n\n\treturn newTimeSeriesSearchResultList;\n};\n\n/* filterLinkSearchResult */\n\nconst generateFilterAttrValueList = (linkRowList, { attributeName, isID }, countryIDToData) => {\n\tconst attributeValueSet = new Set();\n\tconst filterAttrValueList = [];\n\n\tfor (let linkRowObject of linkRowList)\n\t\tattributeValueSet.add(linkRowObject[attributeName]);\n\n\tfor (let attributeValue of attributeValueSet) {\n\t\tlet displayName = attributeValue;\n\n\t\tif (isID) displayName = countryIDToData[attributeValue].displayName;\n\t\tif (attributeValue === '') displayName = 'null';\n\n\t\tfilterAttrValueList.push({ \n\t\t\tkey: attributeValue, attributeValue, displayName \n\t\t});\n\t}\n\n\treturn filterAttrValueList;\n};\n\nexport const selectFilterAttrName = (\n\tprevLinkSearchResultList,\n\tsearchResultKey,\n\tfilterAttrName,\n\tcountryIDToData\n) => {\n\tconst newLinkSearchResultList = [ ...prevLinkSearchResultList ];\n\n\tfor (let linkSearchResultObject of newLinkSearchResultList)\n\t\tif (linkSearchResultObject.key === searchResultKey) {\n\n\t\t\t// selected same option\n\t\t\tif (linkSearchResultObject.filterAttrName.key === filterAttrName.key) break;\n\n\t\t\t// selected none\n\t\t\tif (filterAttrName.attributeName === null) {\n\t\t\t\tconst displayName = linkSearchResultObject.displayName;\n\t\t\t\tconst dataTableAttrList = linkSearchResultObject.dataTableAttrList;\n\t\t\t\tconst linkRowList = linkSearchResultObject.linkRowList;\n\n\t\t\t\tlinkSearchResultObject.filterAttrValueList = [];\n\t\t\t\tlinkSearchResultObject.filterAttrName = filterAttrName;\n\t\t\t\tlinkSearchResultObject.filterAttrValue = '';\n\t\t\t\tlinkSearchResultObject.tableHeaderText = `${ displayName } (${ linkRowList.length } ${ linkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\t\tlinkSearchResultObject.tableRowList = generateTableRowList(linkRowList, dataTableAttrList, countryIDToData);\n\t\t\t}\n\n\t\t\t// selected different option\n\t\t\telse if (filterAttrName.attributeName !== null) {\n\t\t\t\tconst displayName = linkSearchResultObject.displayName;\n\t\t\t\tconst dataTableAttrList = linkSearchResultObject.dataTableAttrList;\n\t\t\t\tconst linkRowList = linkSearchResultObject.linkRowList;\n\n\t\t\t\tconst filterAttrValueList = generateFilterAttrValueList(linkRowList, filterAttrName, countryIDToData);\n\t\t\t\tconst filterAttrValue = filterAttrValueList[0];\n\n\t\t\t\tconst filteredLinkRowList = linkRowList.filter(linkRowObject => \n\t\t\t\t\tlinkRowObject[filterAttrName.attributeName] === filterAttrValue.attributeValue);\n\t\t\t\tconst tableHeaderText = `${ displayName } (${ filteredLinkRowList.length } ${ filteredLinkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\t\tconst tableRowList = generateTableRowList(filteredLinkRowList, dataTableAttrList, countryIDToData);\n\n\t\t\t\tlinkSearchResultObject.filterAttrValueList = filterAttrValueList;\n\t\t\t\tlinkSearchResultObject.filterAttrName = filterAttrName;\n\t\t\t\tlinkSearchResultObject.filterAttrValue = filterAttrValue;\n\t\t\t\tlinkSearchResultObject.tableHeaderText = tableHeaderText;\n\t\t\t\tlinkSearchResultObject.tableRowList = tableRowList;\n\t\t\t}\n\t\t}\n\n\treturn newLinkSearchResultList;\n};\n\nexport const selectFilterAttrValue = (\n\tprevLinkSearchResultList,\n\tsearchResultKey,\n\tfilterAttrName,\n\tfilterAttrValue,\n\tcountryIDToData\n) => {\n\tconst newLinkSearchResultList = [ ...prevLinkSearchResultList ];\n\n\tfor (let linkSearchResultObject of newLinkSearchResultList)\n\t\tif (linkSearchResultObject.key === searchResultKey) {\n\n\t\t\t// selected same option\n\t\t\tif (linkSearchResultObject.filterAttrValue.key === filterAttrValue.key) break;\n\n\t\t\t// selected different option\n\t\t\tconst displayName = linkSearchResultObject.displayName;\n\t\t\tconst dataTableAttrList = linkSearchResultObject.dataTableAttrList;\n\t\t\tconst linkRowList = linkSearchResultObject.linkRowList;\n\n\t\t\tconst filteredLinkRowList = linkRowList.filter(linkRowObject => \n\t\t\t\tlinkRowObject[filterAttrName.attributeName] === filterAttrValue.attributeValue);\n\t\t\tconst tableHeaderText = `${ displayName } (${ filteredLinkRowList.length } ${ filteredLinkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\tconst tableRowList = generateTableRowList(filteredLinkRowList, dataTableAttrList, countryIDToData);\n\n\t\t\tlinkSearchResultObject.filterAttrValue = filterAttrValue;\n\t\t\tlinkSearchResultObject.tableHeaderText = tableHeaderText;\n\t\t\tlinkSearchResultObject.tableRowList = tableRowList;\n\t\t}\n\n\treturn newLinkSearchResultList;\n};","import $ from 'jquery';\nimport { useReducer, useEffect, useCallback } from 'react';\nimport { \n\tsearchCountryListByQuery,\n\tgetPrevSelectionIndex,\n\tgetCurrSelectionIndex,\n\tgetNextSelectionIndex,\n\tgetSelectedCountryName\n} from './updateSearchWindowHeader';\nimport { \n\tfindMostSimilarCountry,\n\tgenerateTimeSeriesSearchResultList,\n\tgenerateLinkSearchResultList,\n\tfilterTimeSeriesSearchResult,\n\tselectFilterAttrName,\n\tselectFilterAttrValue\n} from './updateSearchWindowContent';\n\nconst initialState = {\n\tsource: { query: '', list: [], listTop: null, listLeft: null },\n\ttarget: { query: '', list: [], listTop: null, listLeft: null },\n\tcontent: null, // inferredSourceName, inferredTargetName, timeSeriesSearchResultList, linkSearchResultList\n\tisLoading: false\n};\n\nconst reducer = (prevState, dataState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INPUT_SOURCE_QUERY': {\n\t\t\tconst { inputEl } = action;\n\t\t\tconst { nodeList } = dataState;\n\t\t\tconst inputBBox = inputEl.getBoundingClientRect();\n\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\n\t\t\treturn { ...prevState, source: {\n\t\t\t\tquery: inputEl.value,\n\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\tlist: searchCountryListByQuery(countryNameList, inputEl.value)\n\t\t\t}, target: { ...prevState.target, list: [] } }; // remove target list\n\t\t}\n\t\tcase 'INPUT_TARGET_QUERY': {\n\t\t\tconst { inputEl } = action;\n\t\t\tconst { nodeList } = dataState;\n\t\t\tconst inputBBox = inputEl.getBoundingClientRect();\n\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\t\t\t\n\t\t\treturn { ...prevState, target: {\n\t\t\t\tquery: inputEl.value,\n\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\tlist: searchCountryListByQuery(countryNameList, inputEl.value)\n\t\t\t}, source: { ...prevState.source, list: [] } }; // remove source list\n\t\t}\n\t\tcase 'REMOVE_COUNTRY_LIST': {\n\t\t\treturn { ...prevState, \n\t\t\t\tsource: { ...prevState.source , list: [] },\n\t\t\t\ttarget: { ...prevState.target , list: [] }\n\t\t\t};\n\t\t}\n\t\tcase 'CLICK_COUNTRY_NAME': {\n\t\t\tconst { sourceOrTarget, countryName } = action;\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: {\n\t\t\t\tquery: countryName, list: [], listTop: null, listLeft: null\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_ENTER_COUNTRY_NAME': {\n\t\t\tconst { sourceOrTarget, countryName } = action;\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\tlist: prevState[sourceOrTarget].list.map(countryObject => \n\t\t\t\t\tcountryObject.countryName !== countryName ? \n\t\t\t\t\t\t{ ...countryObject, selected: false } : \n\t\t\t\t\t\t{ ...countryObject, selected: true })\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_COUNTRY_NAME': {\n\t\t\tconst { sourceOrTarget, countryName } = action;\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\tlist: prevState[sourceOrTarget].list.map(countryObject => \n\t\t\t\t\tcountryObject.countryName !== countryName ? countryObject : \n\t\t\t\t\t\t{ ...countryObject, selected: false })\n\t\t\t} };\n\t\t}\n\t\tcase 'START_SEARCHING': {\n\t\t\treturn { ...prevState, \n\t\t\t\tsource: { ...prevState.source , list: [] },\n\t\t\t\ttarget: { ...prevState.target , list: [] },\n\t\t\t\tisLoading: true \n\t\t\t}; // clear list\n\t\t}\n\t\tcase 'FINISH_SEARCHING': {\n\t\t\tconst { \n\t\t\t\tinferredSourceName,\n\t\t\t\tinferredTargetName,\n\t\t\t\ttimeSeriesSearchResultList,\n\t\t\t\tlinkSearchResultList\n\t\t\t} = action;\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: {\n\t\t\t\t\tinferredSourceName,\n\t\t\t\t\tinferredTargetName,\n\t\t\t\t\ttimeSeriesSearchResultList,\n\t\t\t\t\tlinkSearchResultList\n\t\t\t\t},\n\t\t\t\tisLoading: false\n\t\t\t};\n\t\t}\n\t\tcase 'PRESS_ARROW_UP': {\n\t\t\tconst sourceListIsShown = prevState.source.list.length > 0;\n\t\t\tconst sourceOrTarget = sourceListIsShown ? 'source' : 'target';\n\t\t\tconst currSelectionIndex = getCurrSelectionIndex(prevState[sourceOrTarget].list);\n\t\t\tconst prevSelectionIndex = getPrevSelectionIndex(currSelectionIndex);\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\tlist: prevState[sourceOrTarget].list.map((countryObject, index) => \n\t\t\t\t\tindex !== prevSelectionIndex ? \n\t\t\t\t\t{ ...countryObject, selected: false } :\n\t\t\t\t\t{ ...countryObject, selected: true })\n\t\t\t} };\n\t\t}\n\t\tcase 'PRESS_ARROW_DOWN': {\n\t\t\tconst { el } = action;\n\t\t\tconst { nodeList } = dataState;\n\t\t\tconst sourceInputIsFocused = $(el).closest('.source.input-box').length > 0;\n\t\t\tconst targetInputIsFocused = $(el).closest('.target.input-box').length > 0;\n\t\t\tconst sourceListIsShown = prevState.source.list.length > 0;\n\t\t\tconst targetListIsShown = prevState.target.list.length > 0;\n\n\t\t\t// either one is shown\n\t\t\tif (sourceListIsShown || targetListIsShown) {\n\t\t\t\tconst sourceOrTarget = sourceListIsShown ? 'source' : 'target';\n\t\t\t\tconst currSelectionIndex = getCurrSelectionIndex(prevState[sourceOrTarget].list);\n\t\t\t\tconst nextSelectionIndex = getNextSelectionIndex(currSelectionIndex);\n\n\t\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\t\tlist: prevState[sourceOrTarget].list.map((countryObject, index) => \n\t\t\t\t\t\tindex !== nextSelectionIndex ? \n\t\t\t\t\t\t{ ...countryObject, selected: false } :\n\t\t\t\t\t\t{ ...countryObject, selected: true })\n\t\t\t\t} };\n\t\t\t}\n\n\t\t\t// none is shown but focus on source input\n\t\t\tif (!sourceListIsShown && !targetListIsShown && sourceInputIsFocused) {\n\t\t\t\tconst sourceInputEl = $(el).closest('input')[0];\n\t\t\t\tconst inputBBox = sourceInputEl.getBoundingClientRect();\n\t\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\t\t\t\t\n\t\t\t\treturn { ...prevState, source: {\n\t\t\t\t\tquery: sourceInputEl.value,\n\t\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\t\tlist: searchCountryListByQuery(countryNameList, sourceInputEl.value)\n\t\t\t\t} };\n\t\t\t}\n\n\t\t\t// none is shown but focus on target input\n\t\t\tif (!sourceListIsShown && !targetListIsShown && targetInputIsFocused) {\n\t\t\t\tconst targetInputEl = $(el).closest('input')[0];\n\t\t\t\tconst inputBBox = targetInputEl.getBoundingClientRect();\n\t\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\n\t\t\t\treturn { ...prevState, target: {\n\t\t\t\t\tquery: targetInputEl.value,\n\t\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\t\tlist: searchCountryListByQuery(countryNameList, targetInputEl.value)\n\t\t\t\t} };\n\t\t\t}\n\n\t\t\treturn prevState;\n\t\t}\n\t\tcase 'PRESS_ENTER': {\n\t\t\tconst sourceListIsShown = prevState.source.list.length > 0;\n\t\t\tconst targetListIsShown = prevState.target.list.length > 0;\n\n\t\t\t// try to enter selection to input box if list is open\n\t\t\tif (sourceListIsShown || targetListIsShown) {\n\t\t\t\tconst sourceOrTarget = sourceListIsShown ? 'source' : 'target';\n\t\t\t\tconst selectedCountryName = getSelectedCountryName(prevState[sourceOrTarget].list);\n\n\t\t\t\tif (selectedCountryName !== null)\n\t\t\t\t\treturn { ...prevState, [ sourceOrTarget ]: {\n\t\t\t\t\t\tlist: [], listTop: null, listLeft: null,\n\t\t\t\t\t\tquery: selectedCountryName === null \n\t\t\t\t\t\t\t ? prevState[sourceOrTarget].query \n\t\t\t\t\t\t\t : selectedCountryName\n\t\t\t\t\t} };\n\t\t\t}\n\n\t\t\t// start searching and clear list\n\t\t\treturn { ...prevState, \n\t\t\t\tsource: { ...prevState.source, list: [] },\n\t\t\t\ttarget: { ...prevState.target, list: [] },\n\t\t\t\tisLoading: true \n\t\t\t};\n\t\t}\n\t\tcase 'FILTER_TIME_SERIES_SEARCH_RESULT': {\n\t\t\tconst { searchResultKey, filterStartYear, filterEndYear } = action;\n\t\t\tconst { content: { timeSeriesSearchResultList: prevTimeSeriesSearchResultList } } = prevState;\n\t\t\tconst newTimeSeriesSearchResultList = filterTimeSeriesSearchResult(\n\t\t\t\tprevTimeSeriesSearchResultList,\n\t\t\t\tsearchResultKey,\n\t\t\t\tfilterStartYear,\n\t\t\t\tfilterEndYear\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: { ...prevState.content, \n\t\t\t\t\ttimeSeriesSearchResultList: newTimeSeriesSearchResultList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_FILTER_ATTRIBUTE_NAME': {\n\t\t\tconst { searchResultKey, filterAttrName } = action;\n\t\t\tconst { content: { linkSearchResultList: prevLinkSearchResultList } } = prevState;\n\t\t\tconst { countryIDToData } = dataState;\n\t\t\tconst newLinkSearchResultList = selectFilterAttrName(\n\t\t\t\tprevLinkSearchResultList,\n\t\t\t\tsearchResultKey,\n\t\t\t\tfilterAttrName,\n\t\t\t\tcountryIDToData\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: { ...prevState.content, \n\t\t\t\t\tlinkSearchResultList: newLinkSearchResultList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_FILTER_ATTRIBUTE_VALUE': {\n\t\t\tconst { searchResultKey, filterAttrName, filterAttrValue } = action;\n\t\t\tconst { content: { linkSearchResultList: prevLinkSearchResultList } } = prevState;\n\t\t\tconst { countryIDToData } = dataState;\n\t\t\tconst newLinkSearchResultList = selectFilterAttrValue(\n\t\t\t\tprevLinkSearchResultList,\n\t\t\t\tsearchResultKey,\n\t\t\t\tfilterAttrName,\n\t\t\t\tfilterAttrValue,\n\t\t\t\tcountryIDToData\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: { ...prevState.content, \n\t\t\t\t\tlinkSearchResultList: newLinkSearchResultList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t\t}\n\t}\n};\n\nexport const useSearchState = (interfaceState, dataState) => {\n\tconst memoizedReducer = useCallback((prevState, action) => \n\t\treducer(prevState, dataState, action), [ dataState ]);\n\tconst [ searchState, searchDispatch ] = useReducer(memoizedReducer, initialState);\n\n\tconst { \n\t\tsearchWindowIsOpen \n\t} = interfaceState;\n\tconst { \n\t\tnodeList,\n\t\tlinkDataList, \n\t\tcountryIDToData, \n\t\ttimeSeriesDataList \n\t} = dataState;\n\tconst { \n\t\tisLoading: searchWindowIsLoading,\n\t\tsource: { query: sourceQuery },\n\t\ttarget: { query: targetQuery }\n\t} = searchState;\n\n\tuseEffect(() => {\n\t\t// when not click on certain targets, dispatch blur event\n\t\tconst handleClickSearchWindow = event => {\n\t\t\tconst targetItemList = [\n\t\t\t\t'#search-window .close-button',\n\t\t\t\t'#search-window .input-box',\n\t\t\t\t'#search-window .country-list',\n\t\t\t\t'#search-window .search-button'\n\t\t\t];\n\t\t\tlet clickedOnTargets = false;\n\n\t\t\tfor (let target of targetItemList)\n\t\t\t\tif ($(event.target).closest(target).length > 0) {\n\t\t\t\t\tclickedOnTargets = true; break;\n\t\t\t\t}\n\t\t\tif (!clickedOnTargets)\n\t\t\t\tsearchDispatch({ type: 'REMOVE_COUNTRY_LIST' });\n\t\t};\n\n\t\t// handle key down\n\t\tconst handleKeyDown = event => {\n\t\t\tif (event.key === 'ArrowUp') searchDispatch({ type: 'PRESS_ARROW_UP' });\n\t\t\tif (event.key === 'ArrowDown') searchDispatch({ type: 'PRESS_ARROW_DOWN', el: event.target });\n\t\t\tif (event.key === 'Enter') {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t\tsearchDispatch({ type: 'PRESS_ENTER' });\n\t\t\t}\n\t\t};\n\n\t\t// to be safe, remove all before install\n\t\tif (searchWindowIsOpen) {\n\t\t\t$('#search-window').off('click').on('click', handleClickSearchWindow);\n\t\t\t$(document).off('keydown').on('keydown', handleKeyDown);\n\t\t}\n\n\t\t// remove all when close search window\n\t\treturn () => {\n\t\t\tif (searchWindowIsOpen) {\n\t\t\t\t$('#search-window').off('click');\n\t\t\t\t$(document).off('keydown');\n\t\t\t}\n\t\t};\n\t}, [ searchWindowIsOpen ]);\n\n\tuseEffect(() => {\n\t\tif (!searchWindowIsLoading)\n\t\t\treturn;\n\n\t\tconst { \n\t\t\tID: sourceID,\n\t\t\tcountryName: inferredSourceName\n\t\t} = findMostSimilarCountry(nodeList, sourceQuery);\n\t\tconst {\n\t\t\tID: targetID,\n\t\t\tcountryName: inferredTargetName\n\t\t} = findMostSimilarCountry(nodeList, targetQuery);\n\t\tconst timeSeriesSearchResultList = generateTimeSeriesSearchResultList(\n\t\t\tsourceID, targetID,\n\t\t\tcountryIDToData, // generate description\n\t\t\ttimeSeriesDataList // generate chart\n\t\t);\n\t\tconst linkSearchResultList = generateLinkSearchResultList(\n\t\t\tsourceID, targetID,\n\t\t\tcountryIDToData,\n\t\t\tlinkDataList\n\t\t);\n\n\t\tsetTimeout(() => { // hack to allow loading\n\t\t\tsearchDispatch({ \n\t\t\t\ttype: 'FINISH_SEARCHING',\n\t\t\t\tinferredSourceName,\n\t\t\t\tinferredTargetName,\n\t\t\t\ttimeSeriesSearchResultList,\n\t\t\t\tlinkSearchResultList\n\t\t\t});\n\t\t}, 100);\n\t}, [\n\t\tsearchWindowIsLoading,\n\t\tsourceQuery, \n\t\ttargetQuery,\n\t\tnodeList,\n\t\tlinkDataList,\n\t\tcountryIDToData,\n\t\ttimeSeriesDataList\n\t]);\n\n\treturn [ searchState, searchDispatch ];\n};","import { memo } from 'react';\nimport { Loader } from '../widgets/Loader/Loader';\nimport { SearchWindowHeader } from './SearchWindowHeader/SearchWindowHeader';\nimport { SearchWindowContent } from './SearchWindowContent/SearchWindowContent';\nimport { useSearchState } from './useSearchState/useSearchState';\nimport './SearchWindow.css';\n\nexport const SearchWindow = memo(({\n\tdataState,\n\tsearchWindowIsOpen,\n\tinterfaceDispatch\n}) => {\n\tconst [ {\n\t\tsource: sourceState,\n\t\ttarget: targetState,\n\t\tcontent: contentState,\n\t\tisLoading: searchWindowIsLoading\n\t}, searchDispatch ] = useSearchState({ searchWindowIsOpen }, dataState);\n\n\tif (!searchWindowIsOpen)\n\t\treturn null;\n\t\n\treturn (\n\t\t<div id=\"search-window\" className=\"loader-installed\">\n\t\t\t<SearchWindowHeader \n\t\t\t\tsourceState={ sourceState }\n\t\t\t\ttargetState={ targetState }\n\t\t\t\tsearchDispatch={ searchDispatch }\n\t\t\t\tinterfaceDispatch={ interfaceDispatch }\n\t\t\t/>\n\t\t\t<SearchWindowContent\n\t\t\t\tcontentState={ contentState }\n\t\t\t\tsearchDispatch={ searchDispatch }\n\t\t\t/>\n\t\t\t{ searchWindowIsLoading && <Loader /> }\n\t\t</div>\n\t);\n});","import { plural } from 'pluralize';\n\nexport const LinkDescription = ({\n\tlinkRowCount, \n\tsourceName, \n\ttargetName, \n\ttimelineSliderState,\n\teventName\n}) => {\n\tconst { yearAttribute, value } = timelineSliderState;\n\n\tif (yearAttribute.key === 'no-filter') // no timeline filter -> not show year\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'is-start')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span> \n\t\t\tthat { linkRowCount === 1 ? 'has' : 'have' } been started but not ended in\n\t\t\t<span>{ value }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'is-signed')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span> \n\t\t\tthat { linkRowCount === 1 ? 'has' : 'have' } been signed but not ended in\n\t\t\t<span>{ value }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'is-in-force')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span> \n\t\t\tthat { linkRowCount === 1 ? 'is' : 'are' } still in force in\n\t\t\t<span>{ value }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'include-start')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>started between\n\t\t\t<span>{ value[0] }</span>and<span>{ value[1] }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'include-sign')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>signed between\n\t\t\t<span>{ value[0] }</span>and<span>{ value[1] }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'include-in-force')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>entered into force between\n\t\t\t<span>{ value[0] }</span>and<span>{ value[1] }</span>\n\t\t</>);\n\t\n\treturn null;\n};","import { memo } from 'react';\nimport { useTooltip } from './useTooltip';\nimport { LinkDescription } from '../LinkDescription/LinkDescription';\nimport './Tooltip.css';\n\nconst generateAttributeValuePairList = (linkRowObject, tooltipAttrList, countryIDToData) => {\n\tconst attributeValuePairList = [];\n\n\tfor (let { attributeName, displayName, isID } of tooltipAttrList) {\n\t\tlet attributeValue = linkRowObject[attributeName];\n\n\t\tif (attributeValue === '')\n\t\t\tattributeValue = 'null';\n\t\telse if (isID)\n\t\t\tattributeValue = countryIDToData[attributeValue].displayName;\n\n\t\tattributeValuePairList.push({\n\t\t\tattributeName: displayName,\n\t\t\tattributeValue: attributeValue\n\t\t});\n\t}\n\n\treturn attributeValuePairList;\n};\n\nexport const Tooltip = memo(({\n\thoverState,\n\ttimelineSliderState,\n\tcountryIDToData\n}) => {\n\tconst [ tooltipRef, tooltipTop, tooltipLeft ] = useTooltip(hoverState);\n\n\t// tooltip for data selection pane item\n\tif (hoverState.object === 'DATA_SELECTION_PANE_ITEM') {\n\t\tconst { top, left, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"data-selection-pane tooltip\"\n\t\t\t\tstyle={{ top: top, left: left }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\t// tooltip for link\n\tif (hoverState.object === 'LINK') {\n\t\tconst { \n\t\t\tsourceID, \n\t\t\ttargetID,\n\t\t\tlinkRowList, \n\t\t\ttooltipAttrList,\n\t\t\teventName\n\t\t} = hoverState.data;\n\t\tconst linkRowCount = linkRowList.length;\n\n\t\tif (linkRowCount > 1) {\n\t\t\tconst sourceName = countryIDToData[sourceID].displayName;\n\t\t\tconst targetName = countryIDToData[targetID].displayName;\n\n\t\t\treturn (\n\t\t\t\t<div \n\t\t\t\t\tref={ tooltipRef }\n\t\t\t\t\tclassName=\"visualization-pane tooltip multiple\"\n\t\t\t\t\tstyle={{ \n\t\t\t\t\t\ttop: tooltipTop, \n\t\t\t\t\t\tleft: tooltipLeft, \n\t\t\t\t\t\topacity: tooltipLeft !== null ? null : 0 \n\t\t\t\t\t}}\n\t\t\t\t><LinkDescription \n\t\t\t\t\tlinkRowCount={ linkRowCount }\n\t\t\t\t\tsourceName={ sourceName }\n\t\t\t\t\ttargetName={ targetName }\n\t\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\t\teventName={ eventName }\n\t\t\t\t/>(Click to see details)</div>\n\t\t\t);\n\t\t}\n\n\t\tif (linkRowCount === 1) {\n\t\t\tconst attributeValuePairList = generateAttributeValuePairList(\n\t\t\t\tlinkRowList[0], tooltipAttrList, countryIDToData\n\t\t\t);\n\n\t\t\treturn (\n\t\t\t\t<div \n\t\t\t\t\tref={ tooltipRef }\n\t\t\t\t\tclassName=\"visualization-pane tooltip single\"\n\t\t\t\t\tstyle={{ \n\t\t\t\t\t\ttop: tooltipTop, \n\t\t\t\t\t\tleft: tooltipLeft, \n\t\t\t\t\t\topacity: tooltipLeft !== null ? null : 0 \n\t\t\t\t\t}}\n\t\t\t\t>{ attributeValuePairList.map(attributeObject => [ \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ `${ attributeObject.attributeName }-name` } \n\t\t\t\t\t\tclassName=\"attribute-name\"\n\t\t\t\t\t>{ `${ attributeObject.attributeName }:` }</div>,\n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ `${ attributeObject.attributeName }-value` } \n\t\t\t\t\t\tclassName=\"attribute-value\"\n\t\t\t\t\t>{ attributeObject.attributeValue }</div>\n\t\t\t\t]) }</div>\n\t\t\t);\n\t\t}\n\t}\n\n\t// tooltip for detail pane item\n\tif ((hoverState.object === 'DETAIL_PANE_NODE' && hoverState.data.showTooltip) ||\n\t\t(hoverState.object === 'DETAIL_PANE_LINK' && hoverState.data.showTooltip)) {\n\t\tconst { top, right, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"detail-pane tooltip\"\n\t\t\t\tstyle={{ top: top, right: right }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\t// tooltip for control buttons\n\tif (hoverState.object === 'CONTROL_BUTTON') {\n\t\tconst { top, left, text, isDark } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName={ isDark ? \"control tooltip dark\" : \"control tooltip\" }\n\t\t\t\tstyle={{ top: top, left: left }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\treturn null;\n}, (prevProps, nextProps) => \n\tprevProps.hoverState === nextProps.hoverState);","import { useRef, useEffect, useState } from 'react';\n\nexport const useTooltip = hoverState => {\n\tconst tooltipRef = useRef();\n\tconst [ { tooltipTop, tooltipLeft }, setTooltipTopLeft ] = useState({ \n\t\ttooltipTop: null, \n\t\ttooltipLeft: null\n\t});\n\tconst tooltipEl = tooltipRef.current;\n\tconst { top, left } = hoverState.object === 'LINK' ? hoverState.data : { top: null, left: null }; // flip only for vis pane tooltip\n\n\tuseEffect(() => {\n\t\tif (!tooltipEl) \n\t\t\treturn;\n\n\t\tconst { width: tooltipWidth, height: tooltipHeight } = tooltipEl.getBoundingClientRect();\n\t\tconst { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n\t\tconst tooltipTop = (top + 8 + tooltipHeight > windowHeight) ? top - tooltipHeight - 8 - 8 : top;\n\t\tconst tooltipLeft = (left + 8 + tooltipWidth > windowWidth) ? left - tooltipWidth - 8 - 8: left;\n\t\t\n\t\tsetTooltipTopLeft({ tooltipTop, tooltipLeft });\n\t}, [ tooltipEl, top, left ]);\n\n\treturn [ tooltipRef, tooltipTop, tooltipLeft ];\n};","import { memo, Fragment } from 'react';\nimport { FaTimes } from \"react-icons/fa\";\nimport { SparkLine } from '../../DetailPane/DetailPaneContent/SparkLine';\nimport { Bar } from '../../DetailPane/DetailPaneContent/Bar';\nimport { LinkDescription } from '../LinkDescription/LinkDescription';\nimport { DataTable } from '../DataTable/DataTable';\nimport './PopUpWindow.css';\n\nconst generateTableRowList = (linkRowList, dataTableAttrList, countryIDToData) => {\n\tconst tableRowList = [];\n\n\tfor (let linkRowObject of linkRowList) {\n\t\tlet rowString = '';\n\n\t\tfor (let { attributeName, isID } of dataTableAttrList) {\n\t\t\tlet attributeValue = linkRowObject[attributeName];\n\n\t\t\tif (attributeValue === '')\n\t\t\t\tattributeValue = 'null';\n\t\t\telse if (isID)\n\t\t\t\tattributeValue = countryIDToData[attributeValue].displayName;\n\n\t\t\trowString += `<div class=\"cell\">${ attributeValue }</div>`;\n\t\t}\n\n\t\trowString = `<div class=\"row\">${ rowString }</div>`;\n\t\ttableRowList.push(rowString);\n\t}\n\n\treturn tableRowList;\n};\n\nexport const PopUpWindow = memo(({\n\tfocusState,\n\ttimelineSliderState,\n\tcountryIDToData,\n\tdispatch\n}) => {\n\tconst handleClickCloseButton = () => \n\t\tdispatch({ type: 'CLOSE_POP_UP_WINDOW' });\n\n\t// pop up for link\n\tif (focusState.object === 'LINK') {\n\t\tconst { \n\t\t\tsourceID, \n\t\t\ttargetID,\n\t\t\tlinkRowList, \n\t\t\tdataTableAttrList,\n\t\t\teventName\n\t\t} = focusState.data;\n\t\tconst attributeList = dataTableAttrList.map(attribure => attribure.displayName);\n\t\tconst tableRowList = generateTableRowList(\n\t\t\tlinkRowList, dataTableAttrList, countryIDToData\n\t\t);\n\t\tconst linkRowCount = linkRowList.length;\n\t\tconst sourceName = countryIDToData[sourceID].displayName;\n\t\tconst targetName = countryIDToData[targetID].displayName;\n\n\t\treturn (\n\t\t\t<div id=\"pop-up-window\" className=\"link\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"background\"\n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t/>\n\t\t\t\t<div className=\"window\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t\t><FaTimes /></div>\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<LinkDescription\n\t\t\t\t\t\t\tlinkRowCount={ linkRowCount }\n\t\t\t\t\t\t\tsourceName={ sourceName }\n\t\t\t\t\t\t\ttargetName={ targetName }\n\t\t\t\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\t\t\t\teventName={ eventName }\n\t\t\t\t\t\t/>:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<DataTable\n\t\t\t\t\t\t\ttableName=\"pop-up-window-table\"\n\t\t\t\t\t\t\tattributeList={ attributeList }\n\t\t\t\t\t\t\ttableRowList={ tableRowList }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// pop up for spark line list\n\tif (focusState.object === 'SPARK_LINE_LIST') {\n\t\tconst { headerText, entryList } = focusState.data;\n\n\t\treturn (\n\t\t\t<div id=\"pop-up-window\" className=\"spark-line-list\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"background\"\n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t/>\n\t\t\t\t<div className=\"window\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t\t><FaTimes /></div>\n\t\t\t\t\t<div className=\"header\">{ headerText }</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t{ entryList.map(entryObject => \n\t\t\t\t\t\t\t\t<Fragment key={ entryObject.key }>\n\t\t\t\t\t\t\t\t\t<div className=\"title\">{ entryObject.titleText }</div>\n\t\t\t\t\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t\t\t\t\t<SparkLine \n\t\t\t\t\t\t\t\t\t\t\tstartYear={ entryObject.startYear }\n\t\t\t\t\t\t\t\t\t\t\tendYear={ entryObject.endYear }\n\t\t\t\t\t\t\t\t\t\t\tstartX={ entryObject.startX }\n\t\t\t\t\t\t\t\t\t\t\tendX={ entryObject.endX }\n\t\t\t\t\t\t\t\t\t\t\tstartY={ entryObject.startY }\n\t\t\t\t\t\t\t\t\t\t\tendY={ entryObject.endY }\n\t\t\t\t\t\t\t\t\t\t\tpathData={ entryObject.pathData }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"metric\">{ entryObject.contentText }</div>\n\t\t\t\t\t\t\t\t</Fragment>) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"dummy-for-padding\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// pop up for bar list\n\tif (focusState.object === 'BAR_LIST') {\n\t\tconst { headerText, entryList } = focusState.data;\n\n\t\treturn (\n\t\t\t<div id=\"pop-up-window\" className=\"bar-list\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"background\"\n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t/>\n\t\t\t\t<div className=\"window\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t\t><FaTimes /></div>\n\t\t\t\t\t<div className=\"header\">{ headerText }</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t{ entryList.map(entryObject => \n\t\t\t\t\t\t\t\t<Fragment key={ entryObject.key }>\n\t\t\t\t\t\t\t\t\t<div className=\"title\">{ entryObject.titleText }</div>\n\t\t\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t\t\t\t<Bar width={ entryObject.width * 1.5 } percent={ false } />\n\t\t\t\t\t\t\t\t\t\t<div className=\"text\">{ entryObject.contentText }</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Fragment>) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"dummy-for-padding\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn null;\n});","import { memo } from 'react';\nimport { schemeTableau10 } from 'd3';\nimport './ColorPicker.css';\n\nexport const ColorPicker = memo(({ colorPickerState, dispatch }) => {\n\tconst { \n\t\tisOpen, \n\t\tlinkKey, \n\t\tcurrColor,\n\t\tcolorTop, \n\t\tcolorLeft, \n\t\tcolorWidth, \n\t\tcolorHeight \n\t} = colorPickerState;\n\n\tconst handleClickBackground = () =>\n\t\tdispatch({ type: 'CLOSE_COLOR_PICKER' });\n\tconst handleClickColor = (linkKey, newColor) => \n\t\tdispatch({ type: 'SELECT_COLOR', linkKey, newColor });\n\n\tif (!isOpen)\n\t\treturn null;\n\n\treturn (\n\t\t<div className=\"color-picker\">\n\t\t\t<div \n\t\t\t\tclassName=\"background\" \n\t\t\t\tonClick={ handleClickBackground }\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclassName=\"curr-color\"\n\t\t\t\tstyle={{ \n\t\t\t\t\ttop: colorTop,\n\t\t\t\t\tleft: colorLeft,\n\t\t\t\t\twidth: colorWidth,\n\t\t\t\t\theight: colorHeight,\n\t\t\t\t\tcolor: currColor,\n\t\t\t\t\tbackground: currColor\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclassName=\"window\"\n\t\t\t\tstyle={{ \n\t\t\t\t\ttop: colorTop + colorHeight + 8,\n\t\t\t\t\tleft: colorLeft + colorWidth + 8\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ schemeTableau10.map(color => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ color }\n\t\t\t\t\t\tclassName=\"color\"\n\t\t\t\t\t\tstyle={{ background: color, color: color }}\n\t\t\t\t\t\tonClick={ () => { handleClickColor(linkKey, color) } }\n\t\t\t\t\t/>) }\n\t\t\t</div>\n\t\t</div>\n\t);\n});","import { memo } from 'react';\nimport { FaTimes } from \"react-icons/fa\";\nimport './Reference.css';\n\nexport const Reference = memo(({ \n\treferenceIsOpen, \n\tdispatch\n}) => {\n\tconst handleClickCloseButton = () => \n\t\tdispatch({ type: 'CLOSE_REFERENCE' });\n\n\tif (!referenceIsOpen)\n\t\treturn null;\n\n\treturn (\n\t\t<div id=\"reference\">\n\t\t\t<div \n\t\t\t\tclassName=\"background\"\n\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t/>\n\t\t\t<div className=\"window\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t><FaTimes /></div>\n\t\t\t\t<div className=\"header\">REFERENCES</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"item\">1. Barbieri, Katherine and Omar M. G. Omar Keshk. 2016. Correlates of War Project Trade Data Set Codebook, Version 4.0. Online: http://correlatesofwar.org.</div>\n\t\t\t\t\t<div className=\"item\">2. Barbieri, Katherine, Omar M. G. Keshk, and Brian Pollins. 2009. “TRADING DATA: Evaluating our Assumptions and Coding Rules.” Conflict Management and Peace Science. 26(5): 471-491.</div>\n\t\t\t\t\t<div className=\"item\">3. Kinne, Brandon J. 2020. “The Defense Cooperation Agreement Dataset (DCAD).” Journal of Conflict Resolution 64(4): 729-755.</div>\n\t\t\t\t\t<div className=\"item\">4. Sarkees, Meredith Reid and Frank Wayman (2010). Resort to War: 1816 - 2007. Washington DC: CQ Press.</div>\n\t\t\t\t\t<div className=\"item\">5. Singer, J. David, Stuart Bremer, and John Stuckey. (1972). \"Capability Distribution, Uncertainty, and Major Power War, 1820-1965.\" in Bruce Russett (ed) Peace, War, and Numbers, Beverly Hills: Sage, 19-48.</div>\n\t\t\t\t\t<div className=\"item\">6. Zeev Maoz, Paul L. Johnson, Jasper Kaplan, Fiona Ogunkoya, and Aaron Shreve 2019. The Dyadic Militarized Interstate Disputes (MIDs) Dataset Version 3.0: Logic, Characteristics, and Comparisons to Alternative Datasets, Journal of Conflict Resolution (forthcoming).</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});","import { useDataState } from './useDataState/useDataState';\nimport { useInterfaceState } from './useInterfaceState/useInterfaceState';\nimport { DataSelectionPanes } from './DataSelectionPanes/DataSelectionPanes';\nimport { VisualizationPane } from './VisualizationPane/VisualizationPane';\nimport { DetailPane } from './DetailPane/DetailPane';\nimport { ColorPane } from './ColorPane/ColorPane';\nimport { FilterPane } from './FilterPane/FilterPane';\nimport { SearchWindow } from './SearchWindow/SearchWindow';\nimport { Loader } from './widgets/Loader/Loader';\nimport { Tooltip } from './widgets/Tooltip/Tooltip';\nimport { PopUpWindow } from './widgets/PopUpWindow/PopUpWindow';\nimport { ColorPicker } from './widgets/ColorPicker/ColorPicker';\nimport { Reference } from './Reference/Reference';\nimport './App.css';\n\nexport const App = () => {\n\tconst [ dataState ] = useDataState();\n\tconst {\n\t\tlandData,\n\t\tinteriorData,\n\t\tcountryIDToData,\n\t\ttimeSeriesDataList,\n\t\tisLoading: dataIsLoading\n\t} = dataState;\n\n\tconst [ interfaceState, dispatch ] = useInterfaceState(dataState);\n\tconst {\n\t\tlinkPane: { list: linkPaneList },\n\t\tsourcePane: { list: sourcePaneList },\n\t\ttargetPane: { list: targetPaneList },\n\t\tvisualizationPane: { linkTypeList, linkList },\n\t\tcolorPicker: colorPickerState,\n\t\ttimelineSlider: timelineSliderState,\n\t\tdetailPane: detailPaneState,\n\t\tcolorPane: colorPaneState,\n\t\tfilterPane: filterPaneState,\n\t\tsearchWindow: { isOpen: searchWindowIsOpen },\n\t\treference: { isOpen: referenceIsOpen },\n\t\thover: hoverState,\n\t\tfocus: focusState,\n\t\tisLoading: interfaceIsLoading\n\t} = interfaceState;\n\n\tif (dataIsLoading || interfaceIsLoading)\n\t\treturn <Loader />;\n\n\treturn (\n\t\t<>\n\t\t\t<div id=\"left-column\">\n\t\t\t\t<DataSelectionPanes\n\t\t\t\t\tlinkPaneList={ linkPaneList }\n\t\t\t\t\tsourcePaneList={ sourcePaneList }\n\t\t\t\t\ttargetPaneList={ targetPaneList }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div id=\"right-column\">\n\t\t\t\t<VisualizationPane\n\t\t\t\t\tlandData={ landData }\n\t\t\t\t\tinteriorData={ interiorData }\n\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\tlinkList={ linkList }\n\t\t\t\t\tlinkTypeList={ linkTypeList }\n\t\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\t\thoverState={ hoverState }\n\t\t\t\t\tdetailPaneIsOpen={ detailPaneState.isOpen }\n\t\t\t\t\tcolorPaneState={ colorPaneState }\n\t\t\t\t\tfilterPaneState={ filterPaneState }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t\t<DetailPane\n\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\ttimeSeriesDataList={ timeSeriesDataList }\n\t\t\t\t\tlinkList={ linkList }\n\t\t\t\t\tdetailPaneState={ detailPaneState }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t\t<ColorPane\n\t\t\t\t\tcolorPaneState={ colorPaneState }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t\t<FilterPane \n\t\t\t\t\tfilterPaneState={ filterPaneState }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Tooltip\n\t\t\t\thoverState={ hoverState }\n\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t/>\n\t\t\t<PopUpWindow\n\t\t\t\tfocusState={ focusState }\n\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<SearchWindow\n\t\t\t\tdataState={ dataState }\n\t\t\t\tsearchWindowIsOpen={ searchWindowIsOpen }\n\t\t\t\tinterfaceDispatch={ dispatch }\n\t\t\t/>\n\t\t\t<ColorPicker\n\t\t\t\tcolorPickerState={ colorPickerState }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<Reference \n\t\t\t\treferenceIsOpen={ referenceIsOpen }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</>\n    );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebFont from 'webfontloader';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nWebFont.load({\n\tgoogle: {\n\t\tfamilies: [ 'Quicksand:300,400,600' ]\n\t}\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}