{"version":3,"sources":["useDataState/loadMapData.js","config.js","useDataState/loadLinkData.js","useDataState/loadNodeData.js","useDataState/loadTimeSeriesData.js","useDataState/useDataState.js","useInterfaceState/updateDataSelectionPanes.js","useInterfaceState/updateTimelineSlider.js","useInterfaceState/updateVisualizationPane.js","useInterfaceState/updateDetailPane.js","useInterfaceState/useInterfaceState.js","DataSelectionPanes/DataSelectionPaneItem.js","DataSelectionPanes/DataSelectionPane.js","DataSelectionPanes/DataSelectionPanes.js","VisualizationPane/useVisualizationPane/useProjection.js","VisualizationPane/VisualizationPaneLegend/VisualizationPaneLegend.js","VisualizationPane/VisualizationPaneControls/VisualizationPaneControls.js","VisualizationPane/VisualizationPaneDefs/VisualizationPaneDefs.js","VisualizationPane/VisualizationPaneMap/VisualizationPaneMap.js","VisualizationPane/VisualizationPaneLinks/pathGenerator.js","VisualizationPane/VisualizationPaneLinks/VisualizationPaneLink.js","VisualizationPane/VisualizationPaneLinks/VisualizationPaneLinks.js","VisualizationPane/VisualizationPaneLabels/VisualizationPaneLabel.js","VisualizationPane/VisualizationPaneLabels/VisualizationPaneLabels.js","VisualizationPane/TimelineSlider/TimelineSliderValueLabel.js","VisualizationPane/TimelineSlider/TimelineSlider.js","widgets/Loader/Loader.js","VisualizationPane/VisualizationPane.js","DetailPane/DetailPaneHeader/DetailPaneHeaderMainOption.js","DetailPane/DetailPaneHeader/DetailPaneHeaderSubOptions.js","DetailPane/DetailPaneHeader/DetailPaneHeader.js","DetailPane/DetailPaneContent/SparkLine.js","DetailPane/DetailPaneContent/generateEntryList.js","DetailPane/DetailPaneContent/DetailPaneContentItem.js","DetailPane/DetailPaneContent/Bar.js","DetailPane/DetailPaneContent/DetailPaneContent.js","DetailPane/DetailPane.js","SearchWindow/SearchWindowHeader/SearchWindowHeader.js","SearchWindow/SearchWindowContent/LineChart.js","SearchWindow/SearchWindowContent/TimeSeriesSection.js","widgets/DataTable/useClusterize.js","widgets/DataTable/DataTable.js","SearchWindow/SearchWindowContent/DataTableSection.js","SearchWindow/SearchWindowContent/SearchWindowContent.js","SearchWindow/useSearchState/updateSearchWindowHeader.js","SearchWindow/useSearchState/updateSearchWindowContent.js","SearchWindow/useSearchState/useSearchState.js","SearchWindow/SearchWindow.js","widgets/LinkDescription/LinkDescription.js","widgets/Tooltip/Tooltip.js","widgets/Tooltip/useTooltip.js","widgets/PopUpWindow/PopUpWindow.js","widgets/ColorPicker/ColorPicker.js","LinkDisaggregator/LinkDisaggregatorHeader/LinkDisaggregatorHeader.js","LinkDisaggregator/LinkDisaggregatorContent/LinkDisaggregatorContent.js","LinkDisaggregator/useLinkDisaggregator/updateLinkDisaggregator.js","LinkDisaggregator/useLinkDisaggregator/useLinkDisaggregator.js","LinkDisaggregator/LinkDisaggregator.js","Reference/Reference.js","App.js","reportWebVitals.js","index.js"],"names":["url","process","loadMapData","dispatch","json","then","countryData","countries","land","oldLandGeometriesArcs","geometries","arcs","newLandGeometriesArcs","arcArrList","newArcArrList","indexList","newIndexList","index","push","length","filter","d","id","removeAntarctica","objects","type","data","landData","feature","interiorData","mesh","a","b","timelineSliderOptions","displayName","startYearAttrType","endYearAttrType","requirementList","rangeDependencyList","key","filterYearAttrType","config","links","linkType","fileName","isDirected","isWeighted","startYear","signYear","EIFYear","endYear","subItemList","tooltip","attributeList","attributeName","isID","dataTable","linkDisaggregator","optionList","eventName","timeSeries","isBilateral","metricName","loadLinkData","linkDataList","promiseList","linkConfig","promise","csv","createPromiseList","Promise","all","dataList","i","metadata","getCountryIDToData","nodeList","countryIDToData","countryRow","ID","parseData","row","latitude","longitude","year","value","generateMetadata","timeSeriesList","oldMetadata","yearSet","Set","add","yearList","sort","generateIDToTimeSeriesList","IDToTimeSeriesList","sourceTargetID","node1","node2","nodeID","loadTimeSeriesData","timeSeriesDataList","timeSeriesConfig","checkIfIsLoading","initialState","isLoading","reducer","prevState","action","Error","useDataState","useReducer","dataState","useEffect","loadNodeData","getShownSourceIDSet","linkPaneList","shownSourceIDSet","isSelected","linkRowList","getShownTargetIDSet","shownTargetIDSet","generateYearAttribute","linkMetadata","yearAttributeType","yearAttributeName","min","Infinity","max","linkRowObject","Math","extractYearRange","generateColor","schemeTableau10","initParentLinkDataObject","isShown","isSubItem","canDelete","outlierCount","countList","linkIsDirected","sourceTargetIDToCount","targetID","parseInt","generateOutlierCount","color","initChildLinkDataList","parentLinkDataObject","startIndex","childLinkDataList","attrValueList","parentKey","attrDisplayName","valueDisplayName","slice","generateDisplayName","segmentKey","replace","toLowerCase","requiredAttrValue","attributeValue","satisfyAttrValuePair","checkIfSatisfyAttrValuePairList","initNodePaneList","sourceOrTarget","nodePaneList","shownNodeSet","countryRowObject","countryID","countryName","name","has","toggleItemList","prevItemList","itemKey","map","itemObject","selectItemList","updateNodePaneList","newLinkPaneList","prevNodePaneList","newNodePaneList","nodeObject","isPrevShown","isCurrShown","isCurrSelected","updateSourcePaneList","updateTargetPaneList","generateSegementNameList","segmentNameList","currOption","newSegmentNameSet","newSegmentName","currSegmentName","shift","addNewLinkDataObjects","prevLinkPaneList","linkKey","parentLinkRowList","currColorList","segmentNameToLinkRowList","segmentName","generateSegmentNameToLinkRowList","newChildLinkDataList","segmentNameToColor","generateNewChildLinkDataList","newColorList","Object","keys","indexOf","randomIndex","floor","random","generateSegmentNameToColor","oldChildLinkDataList","parentListDataList","parentKeyToChilLinkDataList","linkDataObject","childKey","generateParentKeyToChildLinkDataList","childLinkDataObject","generateTimelineSliderMin","selectedYearAttr","dependentAttrList","currentYear","Date","getFullYear","forEach","dependentAttrName","generateTimelineSliderMax","updateTimelineSliderState","defaultYearAttribute","yearAttributeList","selectedLinkDataObjectList","currTimelineSliderOption","requiredAttrList","hasAllRequiredAttr","requiredAttrName","hasCurrRequiredAttr","generateYearAttributeList","yearAttribute","filterLinkByTime","timelineSliderState","timelineSliderType","timelineValue","startYearAttr","endYearAttr","startYearValue","endYearValue","timelineRange","filterYearAttr","yearValue","getSelectedNodeSet","filteredIDList","updateVisualizationPaneList","sourcePaneList","targetPaneList","visualizationPaneList","linkTypeToMetadata","generateLinkTypeToMetadata","linkIDToLinkRowList","selectedSourceIDSet","selectedTargetIDSet","sourceID","sourceSelected","targetSelected","satisfiesTimelineSliderCriteria","linkID","selectionCriteria1","selectionCriteria2","generateLinkIDToLinkRowList","split","isOutlier","checkIsDirected","checkIsWeighted","checkIsNetworkMetric","option","generateSubOption1List","mainOption","generateSubOption2List","updateDetailPaneState","prevDetailPaneState","prevOption","detailPaneIsOpen","isOpen","prevMainOption","prevSubOption1","subOption1","prevSubOption2","subOption2","newMainOptionList","mainOptionList","generateMainOptionList","newMainOption","newSubOption1List","newSubOption1","generateSubOption1","newSubOption2List","subOption1List","isNetworkMetric","foundPrevOptionInList","generateSubOption2","subOption2List","linkPane","list","sourcePane","targetPane","visualizationPane","colorPicker","currColor","colorTop","colorLeft","colorWidth","colorHeight","timelineSlider","detailPane","searchWindow","reference","hover","object","focus","initLinkPaneList","newSourcePaneList","initSourcePaneList","newTargetPaneList","initTargetPaneList","newTimelineSliderState","newVisualizationPaneList","newDetailPaneState","prevSourcePaneList","prevTargetPaneList","sourceKey","prevTimelineSliderState","targetKey","textEl","getBoundingClientRect","top","height","left","text","innerText","tooltipAttrList","dataTableAttrList","buttonEl","buttonBBox","width","colorEl","newColor","updateLinkPaneListColor","prevVisualizationPaneList","prevIsOpen","right","newSubOption2","itemEl","titleEl","titleText","itemData","hoverStateObject","hoverStateData","showTooltip","clientWidth","clientHeight","scrollWidth","scrollHeight","checkIsOverflown","itemBBox","entryList","isSelectedNetworkMetric","focusStateObject","focusStateData","headerText","style","DataSelectionPaneItem","handleSelect","handleMouseEnter","handleMouseLeave","handleRemove","className","onMouseEnter","onMouseLeave","checked","onChange","onClick","DataSelectionPane","headerIcon","itemList","handleSelectItem","handleClickSelectNone","handleClickSelectAll","handleMouseEnterItem","handleMouseLeaveItem","handleClickRemoveButton","DataSelectionPanes","memo","handleSelectLinks","handleSelectSources","handleSelectTargets","event","$","target","closest","find","margin","VisualizationPaneLegend","selectedLinkPaneList","hasSelectedLinks","e","handleClickColor","background","VisualizationPaneControls","SVGRef","projectionState","handleMouseEnterButton","attr","handleMouseLeaveButton","tooltip-text","zoomHandler","SVGEl","current","SVG","select","transition","duration","scaleBy","projection","geoNaturalEarth1","fitExtent","initialScale","scale","initialTranslate","translate","scaleExtent","call","transform","zoomIdentity","prevProps","nextProps","prevSVGRef","prevLandData","prevZoomHandler","nextSVGRef","nextLandData","nextZoomHandler","VisualizationPaneDefs","refX","refY","markerWidth","markerHeight","markerUnits","orient","fill","VisualizationPaneMap","path","features","findAngle","x","y","xAdjusted","yAdjusted","atan","PI","directedLink","targetRadius","selfLoopRadius","selfLoopRadiusIncrement","arcDivisor","arcRadiusIncrement","generatePathData","sourcePoint","targetPoint","this","generateSelfLoop","generateArc","self","radiusIncrement","distance","x1","y1","x2","y2","sqrt","findDistance","radius","centre","r","xa","ya","x0","y0","findCentre","r0","c","r1","D","rDiff","DD","findCircleCircleIntersection","intersection1","intersection2","sourceAngle","targetAngle","intersection1Angle","intersection1BtwSourceAndTarget","newTargetPoint","cos","sin","undirectedLink","distanceIncrement","generateStraightLine","generateCurve","pathGenerator","line","curve","curveNatural","middlePoint","findMiddlePoint","sameX","sameY","unitVector","s","xu","yu","findUnitVector","findSlope","point","VisualizationPaneLink","isHighlighted","markerEnd","pathData","onMouseMove","clientY","clientX","opacity","stroke","checkIfIsHighlighted","linkObject","hoverState","generateMarkerEnd","genereteLinkList","sourceTargetIDToLinkRowList","sameSourceAndTarget","directed","undirected","addSourceTargetIndex","VisualizationPaneLinks","linkList","VisualizationPaneLabel","VisualizationPaneLabels","nodeIDSet","highlightedNodeIDSet","generateNodeList","TimelineSliderValueLabel","children","labelClassName","labelStyle","fontSize","fontWeight","fontFamily","marginBottom","disabled","props","MySlider","withStyles","root","display","alignItems","position","pointerEvents","rail","backgroundColor","track","mark","borderRadius","markLabel","thumb","marginTop","marginLeft","boxShadow","Slider","MyInput","Input","MySelect","paddingRight","icon","Select","MyMenuItem","MenuItem","useStyles","makeStyles","paper","TimelineSlider","classes","step","valueLabelDisplay","ValueLabelComponent","marks","label","input","disableUnderline","MenuProps","Loader","VisualizationPane","useRef","useState","setProjection","geoPath","zoom","on","newScale","k","newTranslate","prevProjectionState","useProjection","ref","borderBottom","underline","DetailPaneHeaderMainOption","padding","DetailPaneHeaderSubOptions","handleSelectSubOption","DetailPaneHeader","SparkLine","startX","endX","startY","endY","dx","findMaxSetSize","nodeIDToSet","maxSetSize","size","findMaxMetricValue","graph","metricFunction","maxMetricValue","nodes","node","metricValue","generateNodeIDSet","generateLinkIDSet","linkIDSet","newSourceID","newTargetID","generateLinkIDToWeight","isWeightDistance","linkIDToStatistics","linkIDToWeight","weightSum","weightCount","weight","generateCytoscapeGraph","cytoscape","source","setYScaleDomain","yScale","extent","domain","generateTimeSeriesEntryList","filteredIDToTimeSeriesList","IDSet","filterIDToTimeSeriesList","sourceTargetIDSet","generateSourceTargetSet","xScale","scaleLinear","range","curveBasis","percentFormatter","format","startValue","endValue","percentChange","abs","contentText","sourceName","targetName","generateDegreeEntryList","nodeIDToConectedNodeIDSet","generateNodeIDToConnectedNodeIDSet","maxDegree","widthScale","nodeName","degree","generateInDegreeEntryList","nodeIDToSourceIDSet","generateNodeIDToSourceIDSet","maxInDegree","inDegree","generateOutDegreeEntryList","nodeIDToTargetIDSet","generateNodeIDToTargetIDSet","maxOutDegree","outDegree","generateEigenvectorEntryList","networkjs","datastructures","Graph","add_weighted_edges_from","add_edges_from","generateNetworkJSGraph","nodeIDToEigenvector","algorithms","centrality","eigenvector_centrality","maxEigenvector","eigenvector","findMaxEigenvector","contextText","round","Number","EPSILON","generateEntryList","closenessFunction","ccn","maxCloseness","closeness","generateClosenessEntryList","betweennessFunction","bc","maxBetweenness","betweennessNormalized","betweenness","generateBetweennessEntryList","pageRankFunction","pageRank","maxPageRank","rank","generatePageRankEntryList","DetailPaneContentItem","visualization","Bar","percent","DetailPaneContent","isSelectedTimeSeries","entryObject","generateKEntryList","topEntryList","bottomEntryList","timeSeriesClassName","DetailPane","detailPaneState","handleClickButton","SearchWindowHeader","sourceState","targetState","searchDispatch","interfaceDispatch","sourceQuery","query","sourceList","sourceListTop","listTop","sourceListLeft","listLeft","targetQuery","targetList","targetListTop","targetListLeft","handleChangeSourceInput","inputEl","handleChangeTargetInput","handleClickCountryName","handleMouseEnterCountryName","handleMounseLeaveCountryName","autoComplete","spellCheck","onFocus","selected","bilateralLineChart","bottom","nonBilateralLineChart","LineChart","formattedPercentChange","verb","roundedStartValue","roundedEndValue","TimeSeriesSection","sectionHeaderText","lineChartList","filterYearList","filterStartYear","filterEndYear","handleChangeStartYear","handleChangeEndYear","lineChartObject","widthConstraintRules","generateWidthConstraintCSS","widthConstraintCSS","tableName","columnIndex","DataTable","tableRowList","clusterizeObject","initClusterizeObject","Clusterize","scrollId","contentId","resizable","handles","start","ui","element","css","stop","newWidthAfterResizing","html","update","useClusterize","onScroll","tableScrollLeft","scrollLeft","DataTableSection","tableHeaderText","filterAttrNameList","filterAttrValueList","filterAttrName","filterAttrValue","handleChangeAttrName","handleChangeAttrValue","generateSearchResultDescription","inferredSourceName","inferredTargetName","timeSeriesSearchResultList","linkSearchResultList","hasSearchQueries","hasSearchResults","toUpperCase","SearchWindowContent","contentState","handleChangeYear","searchResultKey","computeWordDistance","queryIsStart","wordDistance","levenshtein","searchCountryListByQuery","countryNameList","lowerCaseQuery","similarCountryList","lowerCaseCountryName","getCurrSelectionIndex","countryList","findMostSimilarCountry","sortedCountryList","generateTableRowList","filteredLinkRowList","rowString","generateTimeSeriesSearchResultList","timeSeriesDataObject","querySourceID","queryTargetID","currSourceID","currTargetID","filterRawLinkRowList","rawLinkRowList","currNode1ID","currNode2ID","hasSourceQuery","hasTargetQuery","sourceMatchedNode1","sourceMatchedNode2","targetMatchedNode1","targetMatchedNode2","generateFilterAttrValueList","attributeValueSet","content","inputBBox","countryObject","prevSelectionIndex","currSelectionIndex","COUNTRY_LIST_LENGTH","getPrevSelectionIndex","el","sourceInputIsFocused","targetInputIsFocused","sourceListIsShown","targetListIsShown","nextSelectionIndex","getNextSelectionIndex","sourceInputEl","targetInputEl","selectedCountryName","getSelectedCountryName","newTimeSeriesSearchResultList","prevTimeSeriesSearchResultList","timeSeriesSearchResultObject","prevLineChartList","newLineChartList","filteredTimeSeriesList","filterTimeSeriesSearchResult","newLinkSearchResultList","prevLinkSearchResultList","linkSearchResultObject","selectFilterAttrName","selectFilterAttrValue","useSearchState","interfaceState","memoizedReducer","useCallback","searchState","searchWindowIsOpen","searchWindowIsLoading","off","clickedOnTargets","document","activeElement","blur","attribute","generateLinkSearchResultList","setTimeout","SearchWindow","LinkDescription","linkRowCount","plural","Tooltip","tooltipRef","tooltipTop","tooltipLeft","setTooltipTopLeft","tooltipEl","tooltipWidth","tooltipHeight","window","windowWidth","innerWidth","windowHeight","innerHeight","useTooltip","attributeValuePairList","generateAttributeValuePairList","attributeObject","PopUpWindow","focusState","handleClickCloseButton","attribure","ColorPicker","colorPickerState","LinkDisaggregatorHeader","headerList","headerOption","linkDisaggregatorDispatch","LinkDisaggregatorContent","contentList","updateContentList","generateInitialState","initHeaderList","header","newOption","newContentList","prevContentList","toggleContentList","LinkDisaggregator","linkDisaggregatorIsOpen","linkDisaggregatorState","useLinkDisaggregator","handleCloseLinkDisaggregator","Reference","referenceIsOpen","App","dataIsLoading","useInterfaceState","interfaceIsLoading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","WebFont","load","google","families","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edc3ab05.chunk.js","sourcesContent":["import { feature, mesh } from 'topojson-client';\nimport { json } from 'd3';\n\nconst url = `${ process.env.PUBLIC_URL }/data/map/countries-110m.json`;\n\nconst removeAntarctica = ({ countries, land }) => {\n\tconst oldLandGeometriesArcs = land.geometries[0].arcs;\n\tconst newLandGeometriesArcs = [];\n\n\tfor (let arcArrList of oldLandGeometriesArcs) {\n\t\tconst newArcArrList = [];\n\n\t\tfor (let indexList of arcArrList) {\n\t\t\tconst newIndexList = [];\n\n\t\t\tfor (let index of indexList)\n\t\t\t\tif (index < 562 || index > 569)\n\t\t\t\t\tnewIndexList.push(index);\n\t\t\tif (newIndexList.length > 0)\n\t\t\t\tnewArcArrList.push(newIndexList);\n\t\t}\n\t\tif (newArcArrList.length > 0)\n\t\t\tnewLandGeometriesArcs.push(newArcArrList);\n\t}\n\n\tcountries.geometries = countries.geometries.filter(d => d.id !== '010');\n\tland.geometries[0].arcs = newLandGeometriesArcs;\n\treturn { countries, land };\n};\n\nexport const loadMapData = dispatch => {\n\tjson(url).then(countryData => {\n\t\tconst { countries, land } = removeAntarctica(countryData.objects);\n\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: {\n\t\t\t\tlandData: feature(countryData, land),\n\t\t\t\tinteriorData: mesh(countryData, countries, (a, b) => a !== b)\n\t\t\t}\n\t\t});\n\t});\n};","export const timelineSliderOptions = {\n\t'is-signed': { // is curr value between signing and end\n\t\tdisplayName: 'Between Signing and End?',\n\t\ttype: 'point',\n\t\tstartYearAttrType: 'signYear',\n\t\tendYearAttrType: 'endYear',\n\t\trequirementList: [ 'signYear' ],\n\t\trangeDependencyList: [ 'signYear' ],\n\t\tkey: 'is-signed'\n\t},\n\t'is-start': { // is curr value between start and end\n\t\tdisplayName: 'Between Start and End?',\n\t\ttype: 'point',\n\t\tstartYearAttrType: 'startYear',\n\t\tendYearAttrType: 'endYear',\n\t\trequirementList: [ 'startYear' ],\n\t\trangeDependencyList: [ 'startYear' ],\n\t\tkey: 'is-start'\n\t},\n\t'is-in-force': { // is curr value between EIF and end\n\t\tdisplayName: 'Between EIF and End?',\n\t\ttype: 'point',\n\t\tstartYearAttrType: 'EIFYear',\n\t\tendYearAttrType: 'endYear',\n\t\trequirementList: [ 'EIFYear' ],\n\t\trangeDependencyList: [ 'EIFYear' ],\n\t\tkey: 'is-in-force'\n\t},\n\t'include-sign': { // does curr range include sign year\n\t\tdisplayName: 'Include Sign Year?',\n\t\ttype: 'range',\n\t\tfilterYearAttrType: 'signYear',\n\t\trequirementList: [ 'signYear' ],\n\t\trangeDependencyList: [ 'signYear' ],\n\t\tkey: 'include-sign'\n\t},\n\t'include-start': { // does curr range include start year\n\t\tdisplayName: 'Include Start Year?',\n\t\ttype: 'range',\n\t\tfilterYearAttrType: 'startYear',\n\t\trequirementList: [ 'startYear' ],\n\t\trangeDependencyList: [ 'startYear' ],\n\t\tkey: 'include-start'\n\t},\n\t'include-in-force': { // does curr range include start\n\t\tdisplayName: 'Include EIF Year?',\n\t\ttype: 'range',\n\t\tfilterYearAttrType: 'EIFYear',\n\t\trequirementList: [ 'EIFYear' ],\n\t\trangeDependencyList: [ 'EIFYear' ],\n\t\tkey: 'include-in-force'\n\t},\n\t'no-filter': {\n\t\tdisplayName: 'No Filtering',\n\t\ttype: 'no-filter',\n\t\tkey: 'no-filter'\n\t}\n};\n\nexport const config = {\n\tlinks: [\n\t\t{\n\t\t\tlinkType: 'wars', // 'should not use - for linkType'\n\t\t\tfileName: 'wars.csv',\n\t\t\tisDirected: true, \n\t\t\tisWeighted: false,\n\t\t\tdisplayName: 'Dyadic Interstate War',\n\t\t\tstartYear: 'startYear',\n\t\t\tsignYear: null,\n\t\t\tEIFYear: null,\n\t\t\tendYear: 'endYear',\n\t\t\t// make sure segment key same as that gen by linkDisaggregator\n\t\t\t// { attrDisplayName, valueDisplayName, attributeList, attributeValue }\n\t\t\tsubItemList: [],\n\t\t\ttooltip: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'initiator', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'target', isID: true },\n\t\t\t\t{ attributeName: 'startYear', displayName: 'start year', isID: false },\n\t\t\t\t{ attributeName: 'endYear', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'battleYear', displayName: 'battle year', isID: false },\n\t\t\t\t{ attributeName: 'warName', displayName: 'war name', isID: false },\n\t\t\t\t{ attributeName: 'outcome', displayName: 'outcome', isID: false },\n\t\t\t\t{ attributeName: 'node1Deaths', displayName: 'battle deaths initiator', isID: false },\n\t\t\t\t{ attributeName: 'node2Deaths', displayName: 'battle deaths target', isID: false }\n\t\t\t] },\n\t\t\tdataTable: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'initiator', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'target', isID: true },\n\t\t\t\t{ attributeName: 'startYear', displayName: 'start year', isID: false },\n\t\t\t\t{ attributeName: 'endYear', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'battleYear', displayName: 'battle year', isID: false },\n\t\t\t\t{ attributeName: 'warName', displayName: 'war name', isID: false },\n\t\t\t\t{ attributeName: 'outcome', displayName: 'outcome', isID: false },\n\t\t\t\t{ attributeName: 'node1Deaths', displayName: 'battle deaths initiator', isID: false },\n\t\t\t\t{ attributeName: 'node2Deaths', displayName: 'battle deaths target', isID: false }\n\t\t\t] },\n\t\t\tlinkDisaggregator: { optionList: [\n\t\t\t\t{ displayName: 'initiator', attributeList: [ { attributeName: 'node1', isID: true } ] },\n\t\t\t\t{ displayName: 'target', attributeList: [ { attributeName: 'node2', isID: true } ] }\n\t\t\t] },\n\t\t\teventName: 'battle'\n\t\t}, {\n\t\t\tlinkType: 'defense_agreements', // 'should not use - for linkType'\n\t\t\tfileName: 'defense_agreements.csv',\n\t\t\tisDirected: false,\n\t\t\tisWeighted: false,\n\t\t\tdisplayName: 'Defense Cooperation Agreements',\n\t\t\tstartYear: null,\n\t\t\tsignYear: 'signYear',\n\t\t\tEIFYear: 'EIFYear',\n\t\t\tendYear: 'endYearEstimated',\n\t\t\tsubItemList: [], // make sure segment key same as that gen by linkDisaggregator\n\t\t\ttooltip: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'country 1', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'country 2', isID: true },\n\t\t\t\t{ attributeName: 'signYear', displayName: 'sign year', isID: false },\n\t\t\t\t{ attributeName: 'EIFYear', displayName: 'entry into force Year', isID: false },\n\t\t\t\t{ attributeName: 'endYearEstimated', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'type', displayName: 'type', isID: false },\n\t\t\t\t{ attributeName: 'category', displayName: 'category', isID: false }\n\t\t\t] },\n\t\t\tdataTable: { attributeList: [\n\t\t\t\t{ attributeName: 'node1', displayName: 'country 1', isID: true },\n\t\t\t\t{ attributeName: 'node2', displayName: 'country 2', isID: true },\n\t\t\t\t{ attributeName: 'signYear', displayName: 'sign year', isID: false },\n\t\t\t\t{ attributeName: 'EIFYear', displayName: 'entry into force Year', isID: false },\n\t\t\t\t{ attributeName: 'endYearEstimated', displayName: 'end year', isID: false },\n\t\t\t\t{ attributeName: 'type', displayName: 'type', isID: false },\n\t\t\t\t{ attributeName: 'category', displayName: 'category', isID: false }\n\t\t\t] },\n\t\t\tlinkDisaggregator: { optionList: [\n\t\t\t\t{ displayName: 'country', attributeList: [ \n\t\t\t\t\t{ attributeName: 'node1', isID: true }, \n\t\t\t\t\t{ attributeName: 'node2', isID: true } ] \n\t\t\t\t},\n\t\t\t\t{ displayName: 'type', attributeList: [ { attributeName: 'type', isID: false } ] },\n\t\t\t\t{ displayName: 'category', attributeList: [ { attributeName: 'category', isID: false } ] }\n\t\t\t] },\n\t\t\teventName: 'agreement'\n\t\t}\n\t],\n\ttimeSeries: [\n\t\t{\n\t\t\tfileName: 'trade_volume.csv',\n\t\t\tdisplayName: 'Trade Volume',\n\t\t\tisBilateral: true,\n\t\t\tmetricName: 'trade volume'\n\t\t}, {\n\t\t\tfileName: 'military_expenditures.csv',\n\t\t\tdisplayName: 'Military Expenditures (in thousands USD)',\n\t\t\tisBilateral: false,\n\t\t\tmetricName: 'military expenditure'\n\t\t}, {\n\t\t\tfileName: 'military_personnel.csv',\n\t\t\tdisplayName: 'Military Personnel (thousands)',\n\t\t\tisBilateral: false,\n\t\t\tmetricName: 'military personnel'\n\t\t}, {\n\t\t\tfileName: 'total_population.csv',\n\t\t\tdisplayName: 'Total Population',\n\t\t\tisBilateral: false,\n\t\t\tmetricName: 'population'\n\t\t}\n\t]\n};","import { csv } from 'd3';\nimport { config } from '../config';\n\n// helpers\n\nconst createPromiseList = config => {\n\tconst promiseList = [];\n\n\tfor (let linkConfig of config.links) {\n\t\tconst url = `${ process.env.PUBLIC_URL }/data/links/${ linkConfig.fileName }`;\n\t\tconst promise = csv(url);\n\n\t\tpromiseList.push(promise);\n\t}\n\n\treturn promiseList;\n};\n\n// main functions\n\nexport const loadLinkData = dispatch => {\n\tconst linkDataList = [];\n\tconst promiseList = createPromiseList(config);\n\n\tPromise.all(promiseList).then(dataList => {\n\t\tfor (let i = 0; i < dataList.length; i++)\n\t\t\tlinkDataList.push({ \n\t\t\t\tdata: dataList[i],\n\t\t\t\tmetadata: config.links[i]\n\t\t\t});\n\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: { linkDataList }\n\t\t});\n\t});\n};","import { csv } from 'd3';\n\nconst url = `${ process.env.PUBLIC_URL }/data/nodes/countries.csv`;\n\nconst getCountryIDToData = nodeList => {\n\tconst countryIDToData = {};\n\n\tfor (let countryRow of nodeList)\n\t\tcountryIDToData[countryRow.ID] = countryRow;\n\n\treturn countryIDToData;\n};\n\nconst parseData = row => ({\n\t...row,\n\tlatitude: row.latitude !== '' ? +row.latitude : null,\n\tlongitude: row.longitude !== '' ? +row.longitude : null\n});\n\nexport const loadNodeData = dispatch => {\n\tcsv(url, parseData).then(d => {\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: {\n\t\t\t\tnodeList: d,\n\t\t\t\tcountryIDToData: getCountryIDToData(d)\n\t\t\t}\n\t\t});\n\t});\n};","import { csv } from 'd3';\nimport { config } from '../config';\n\nconst parseData = row => ({\n\t...row,\n\tyear: row.year !== '' ? +row.year : null,\n\tvalue: row.value !== '' ? +row.value : null\n});\n\nconst createPromiseList = config => {\n\tconst promiseList = [];\n\n\tfor (let timeSeriesConfig of config.timeSeries) {\n\t\tconst url = `${ process.env.PUBLIC_URL }/data/timeSeries/${ timeSeriesConfig.fileName }`;\n\t\tconst promise = csv(url, parseData);\n\n\t\tpromiseList.push(promise);\n\t}\n\n\treturn promiseList;\n};\n\nconst generateMetadata = (timeSeriesList, oldMetadata) => {\n\tconst yearSet = new Set();\n\n\tfor (let { year } of timeSeriesList)\n\t\tif (year !== null) \n\t\t\tyearSet.add(year);\n\n\treturn { ...oldMetadata, \n\t\tyearList: [ ...yearSet ].sort((a, b) => a - b)\n\t};\n};\n\nconst generateIDToTimeSeriesList = (timeSeriesList, metadata) => {\n\tconst IDToTimeSeriesList = {};\n\tconst isBilateral = metadata.isBilateral;\n\n\tif (isBilateral)\n\t\tfor (let row of timeSeriesList) {\n\t\t\tconst sourceID = row.node1;\n\t\t\tconst targetID = row.node2;\n\t\t\tconst sourceTargetID = sourceID + '-' + targetID;\n\n\t\t\tif (!(sourceTargetID in IDToTimeSeriesList))\n\t\t\t\tIDToTimeSeriesList[sourceTargetID] = [];\n\n\t\t\tIDToTimeSeriesList[sourceTargetID].push(row);\n\t\t}\n\n\telse if (!isBilateral)\n\t\tfor (let row of timeSeriesList) {\n\t\t\tconst nodeID = row.ID;\n\n\t\t\tif (!(nodeID in IDToTimeSeriesList))\n\t\t\t\tIDToTimeSeriesList[nodeID] = [];\n\n\t\t\tIDToTimeSeriesList[nodeID].push(row);\n\t\t}\n\n\treturn IDToTimeSeriesList;\n};\n\nexport const loadTimeSeriesData = dispatch => {\n\tconst timeSeriesDataList = [];\n\tconst promiseList = createPromiseList(config);\n\n\tPromise.all(promiseList).then(dataList => {\n\t\tfor (let i = 0; i < dataList.length; i++) {\n\t\t\tconst timeSeriesList = dataList[i];\n\t\t\tconst metadata = generateMetadata(timeSeriesList, config.timeSeries[i]);\n\t\t\tconst data = generateIDToTimeSeriesList(timeSeriesList, metadata);\n\n\t\t\ttimeSeriesDataList.push({ data, metadata });\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: \"LOAD_DATA\",\n\t\t\tdata: { timeSeriesDataList }\n\t\t});\n\t});\n};","import { useEffect, useReducer } from 'react';\nimport { loadMapData } from './loadMapData';\nimport { loadLinkData } from './loadLinkData';\nimport { loadNodeData } from './loadNodeData';\nimport { loadTimeSeriesData } from './loadTimeSeriesData';\n\nconst checkIfIsLoading = ({\n\tlandData,\n\tinteriorData,\n\tlinkDataList,\n\tnodeList,\n\tcountryIDToData,\n\ttimeSeriesDataList\n}) => \n\tlandData === null ||\n\tinteriorData === null ||\n\tlinkDataList === null ||\n\tnodeList === null ||\n\tcountryIDToData === null ||\n\ttimeSeriesDataList === null;\n\nconst initialState = {\n\tlandData: null,\n\tinteriorData: null,\n\tlinkDataList: null,\n\tnodeList: null,\n\tcountryIDToData: null,\n\ttimeSeriesDataList: null,\n\tisLoading: true\n};\n\nconst reducer = (prevState, action) => {\n\tswitch (action.type) {\n\t\tcase \"LOAD_DATA\":\n\t\t\treturn { \n\t\t\t\t...prevState, \n\t\t\t\t...action.data,\n\t\t\t\tisLoading: checkIfIsLoading({ \n\t\t\t\t\t...prevState, \n\t\t\t\t\t...action.data \n\t\t\t\t})\n\t\t\t};\n\t\tdefault: \n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t}\n};\n\nexport const useDataState = () => {\n\tconst [ dataState, dispatch ] = useReducer(reducer, initialState);\n\n\tuseEffect(() => {\n\t\tloadMapData(dispatch);\n\t\tloadLinkData(dispatch);\n\t\tloadNodeData(dispatch);\n\t\tloadTimeSeriesData(dispatch);\n\t}, []);\n\n\treturn [ dataState, dispatch ];\n};","import { schemeTableau10 } from 'd3';\n\n// helpers\n\nconst getShownSourceIDSet = linkPaneList => {\n\tconst shownSourceIDSet = new Set();\n\n\tfor (let { isSelected, isDirected, linkRowList } of linkPaneList) {\n\t\tif (isSelected && isDirected)\n\t\t\tfor (let { node1 } of linkRowList)\n\t\t\t\tshownSourceIDSet.add(node1);\n\n\t\telse if (isSelected && !isDirected)\n\t\t\tfor (let { node1, node2 } of linkRowList) {\n\t\t\t\tshownSourceIDSet.add(node1);\n\t\t\t\tshownSourceIDSet.add(node2);\n\t\t\t}\n\t}\n\n\treturn shownSourceIDSet;\n};\n\nconst getShownTargetIDSet = linkPaneList => {\n\tconst shownTargetIDSet = new Set();\n\n\tfor (let { isSelected, isDirected, linkRowList } of linkPaneList) {\n\t\tif (isSelected && isDirected)\n\t\t\tfor (let { node2 } of linkRowList)\n\t\t\t\tshownTargetIDSet.add(node2);\n\n\t\telse if (isSelected && !isDirected)\n\t\t\tfor (let { node1, node2 } of linkRowList) {\n\t\t\t\tshownTargetIDSet.add(node1);\n\t\t\t\tshownTargetIDSet.add(node2);\n\t\t\t}\n\t}\n\n\treturn shownTargetIDSet;\n};\n\n// initLinkPaneList\n\nconst extractYearRange = (linkRowList, yearAttributeName) => {\n\tlet min = Infinity, max = -Infinity;\n\n\tfor (let linkRowObject of linkRowList)\n\t\tif (linkRowObject[yearAttributeName] !== '') {\n\t\t\tmin = Math.min(min, +linkRowObject[yearAttributeName]);\n\t\t\tmax = Math.max(max, +linkRowObject[yearAttributeName]);\n\t\t}\n\n\tmin = min === Infinity ? null : min;\n\tmax = max === -Infinity ? null : max;\n\n\treturn [ min, max ];\n};\n\nconst generateYearAttribute = (linkRowList, linkMetadata, yearAttributeType) => {\n\tif (linkMetadata[yearAttributeType] === null)\n\t\treturn null;\n\n\tconst attributeName = linkMetadata[yearAttributeType];\n\tconst [ min, max ] = extractYearRange(linkRowList, attributeName);\n\t\n\treturn { attributeName, min, max };\n};\n\nconst generateColor = index => {\n\treturn schemeTableau10[index % schemeTableau10.length];\n};\n\nconst generateOutlierCount = (linkRowList, linkMetadata) => {\n\tconst countList = [];\n\tconst linkIsDirected = linkMetadata.isDirected;\n\tconst sourceTargetIDToCount = {};\n\tlet indexFor90thPencentile = null;\n\n\t// find countList\n\tfor (let { node1, node2 } of linkRowList) {\n\t\tconst sourceID = linkIsDirected ? node1 : (node1 < node2 ? node1 : node2);\n\t\tconst targetID = linkIsDirected ? node2 : (node1 < node2 ? node2 : node1);\n\t\tconst sourceTargetID = `${ sourceID }-${ targetID }`;\n\n\t\tif (!(sourceTargetID in sourceTargetIDToCount))\n\t\t\tsourceTargetIDToCount[sourceTargetID] = 0;\n\n\t\tsourceTargetIDToCount[sourceTargetID]++;\n\t}\n\n\tfor (let sourceTargetID in sourceTargetIDToCount)\n\t\tcountList.push(sourceTargetIDToCount[sourceTargetID]);\n\n\t// find 90th percentile as outlier\n\tcountList.sort((a, b) => a - b);\n\tindexFor90thPencentile = parseInt(countList.length * 0.9);\n\treturn countList[indexFor90thPencentile];\n};\n\nconst initParentLinkDataObject = ({ data: linkRowList, metadata: linkMetadata }, index) => {\n\tconst {\n\t\tlinkType,\n\t\tisDirected,\n\t\tisWeighted,\n\t\ttooltip,\n\t\tdataTable,\n\t\tlinkDisaggregator,\n\t\teventName\n\t} = linkMetadata;\n\n\tconst key = linkType;\n\tconst isShown = true;\n\tconst isSelected = index === 0; // select first\n\tconst isSubItem = false;\n\tconst canDelete = false;\n\tconst displayName = linkMetadata.displayName;\n\n\tconst startYear = generateYearAttribute(linkRowList, linkMetadata, 'startYear');\n\tconst signYear = generateYearAttribute(linkRowList, linkMetadata, 'signYear');\n\tconst EIFYear = generateYearAttribute(linkRowList, linkMetadata, 'EIFYear');\n\tconst endYear = generateYearAttribute(linkRowList, linkMetadata, 'endYear');\n\tconst outlierCount = generateOutlierCount(linkRowList, linkMetadata);\n\tconst color = generateColor(index);\n\n\treturn {\n\t\tkey, isShown, isSelected, isSubItem, canDelete, displayName,\n\t\tstartYear, signYear, EIFYear, endYear, outlierCount, color, linkRowList,\n\t\tlinkType, isDirected, isWeighted, tooltip, dataTable, linkDisaggregator, eventName\n\t};\n};\n\nconst initChildLinkDataList = (parentLinkDataObject, subItemList, startIndex) => {\n\tconst {\n\t\tEIFYear,\n\t\tdataTable,\n\t\tendYear,\n\t\tisDirected,\n\t\tisWeighted,\n\t\toutlierCount,\n\t\tsignYear,\n\t\tstartYear,\n\t\ttooltip,\n\t\teventName\n\t} = parentLinkDataObject;\n\n\tconst generateDisplayName = attrValueList => {\n\t\tlet displayName = '';\n\n\t\tfor (let { attrDisplayName, valueDisplayName } of attrValueList)\n\t\t\tdisplayName += `${ attrDisplayName }=${ valueDisplayName }, `;\n\n\t\treturn displayName.slice(0, -2);\n\t};\n\tconst checkIfSatisfyAttrValuePairList = (linkRowObject, attrValueList) => {\n\t\tfor (let { attributeList, attributeValue: requiredAttrValue } of attrValueList) {\n\t\t\tlet satisfyAttrValuePair = false;\n\n\t\t\tfor (let attributeName of attributeList) // satisfy any one\n\t\t\t\tif (linkRowObject[attributeName] === requiredAttrValue) {\n\t\t\t\t\tsatisfyAttrValuePair = true; break;\n\t\t\t\t}\n\n\t\t\tif (!satisfyAttrValuePair) return false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst childLinkDataList = [];\n\n\tfor (let i = 0; i < subItemList.length; i++) {\n\t\tconst attrValueList = subItemList[i];\n\t\tconst parentKey = parentLinkDataObject.key;\n\t\tconst displayName = generateDisplayName(attrValueList);\n\t\tconst segmentKey = displayName.replace(/[^0-9a-z]/gi, '').toLowerCase();\n\n\t\tconst canDelete = false;\n\t\tconst color = generateColor(startIndex + i);\n\t\tconst isSelected = false;\n\t\tconst isShown = true;\n\t\tconst isSubItem = true;\n\t\tconst key = `${ parentKey }_${ segmentKey }`; // cannot use '-'\n\t\tconst linkType = key;\n\t\tconst linkRowList = parentLinkDataObject.linkRowList\n\t\t\t.filter(linkRowObject => checkIfSatisfyAttrValuePairList(linkRowObject, attrValueList));\n\t\t\n\t\tchildLinkDataList.push({\n\t\t\tEIFYear,\n\t\t\tcanDelete,\n\t\t\tcolor,\n\t\t\tdataTable,\n\t\t\tdisplayName,\n\t\t\tendYear,\n\t\t\tisDirected,\n\t\t\tisSelected,\n\t\t\tisShown,\n\t\t\tisSubItem,\n\t\t\tisWeighted,\n\t\t\tkey,\n\t\t\tlinkRowList,\n\t\t\tlinkType,\n\t\t\toutlierCount,\n\t\t\tsignYear,\n\t\t\tstartYear,\n\t\t\ttooltip,\n\t\t\tparentLinkDataObject, // for changing legend label\n\t\t\teventName\n\t\t});\n\t}\n\n\treturn childLinkDataList;\n};\n\nexport const initLinkPaneList = linkDataList => {\n\tconst linkPaneList = [];\n\tlet index = 0;\n\n\tfor (let linkDataObject of linkDataList) {\n\t\tconst parentLinkDataObject = initParentLinkDataObject(linkDataObject, index++);\n\t\tconst childLinkDataList = initChildLinkDataList(\n\t\t\tparentLinkDataObject, linkDataObject.metadata.subItemList, index\n\t\t);\n\n\t\tlinkPaneList.push(parentLinkDataObject);\n\n\t\tfor (let childLinkDataObject of childLinkDataList) {\n\t\t\tlinkPaneList.push(childLinkDataObject);\n\t\t\tindex++;\n\t\t}\n\t}\n\n\treturn linkPaneList;\n};\n\n// initSourcePaneList, initTargetPaneList\n\nconst initNodePaneList = (linkPaneList, nodeList, sourceOrTarget) => {\n\tconst nodePaneList = [];\n\tconst shownNodeSet = sourceOrTarget === 'source' ?\n\t\tgetShownSourceIDSet(linkPaneList) :\n\t\tgetShownTargetIDSet(linkPaneList);\n\n\tfor (let countryRowObject of nodeList) {\n\t\tconst countryID = countryRowObject.ID;\n\t\tconst countryName = countryRowObject.name;\n\n\t\tconst key = countryID;\n\t\tconst isShown = shownNodeSet.has(countryID);\n\t\tconst isSelected = isShown; // select all shown items by default\n\t\tconst isSubItem = false;\n\t\tconst canDelete = false;\n\t\tconst displayName = countryName;\n\t\tconst data = countryRowObject;\n\n\t\tnodePaneList.push({\n\t\t\tkey,\n\t\t\tisShown,\n\t\t\tisSelected,\n\t\t\tisSubItem,\n\t\t\tcanDelete,\n\t\t\tdisplayName,\n\t\t\tdata\n\t\t});\n\t}\n\n\treturn nodePaneList\n\t\t.sort((a, b) => {\n\t\t\tif (a.displayName < b.displayName) return -1;\n\t\t\tif (a.displayName > b.displayName) return 1;\n\t\t\treturn 0;\n\t\t});\n};\n\nexport const initSourcePaneList = (linkPaneList, nodeList) => \n\tinitNodePaneList(linkPaneList, nodeList, 'source');\n\nexport const initTargetPaneList = (linkPaneList, nodeList) => \n\tinitNodePaneList(linkPaneList, nodeList, 'target');\n\n// toggleItemList, selectItemList\n\nexport const toggleItemList = (prevItemList, itemKey) => \n\tprevItemList.map(itemObject => ({ ...itemObject,\n\t\tisSelected: itemObject.key === itemKey \n\t\t\t\t? !itemObject.isSelected \n\t\t\t\t: itemObject.isSelected\n\t}));\n\nexport const selectItemList = (prevItemList, isSelected) =>\n\tprevItemList.map(itemObject => ({ ...itemObject, isSelected }));\n\n// updateSourcePaneList, updateTargetPaneList\n\nconst updateNodePaneList = (newLinkPaneList, prevNodePaneList, sourceOrTarget) => {\n\tconst newNodePaneList = [];\n\tconst shownNodeSet = sourceOrTarget === 'source' ?\n\t\tgetShownSourceIDSet(newLinkPaneList) :\n\t\tgetShownTargetIDSet(newLinkPaneList);\n\n\tfor (let nodeObject of prevNodePaneList) {\n\t\tconst countryID = nodeObject.data.ID;\n\t\tconst isPrevShown = nodeObject.isShown;\n\t\tconst isCurrShown = shownNodeSet.has(countryID);\n\t\tlet isCurrSelected = null;\n\n\t\tif (!isPrevShown && isCurrShown) isCurrSelected = true;\n\t\telse if (!isPrevShown && !isCurrShown) isCurrSelected = false;\n\t\telse if (isPrevShown && !isCurrShown) isCurrSelected = false;\n\t\telse if (isPrevShown && isCurrShown) isCurrSelected = true;\n\n\t\tnodeObject.isShown = isCurrShown;\n\t\tnodeObject.isSelected = isCurrSelected;\n\t\tnewNodePaneList.push(nodeObject);\n\t}\n\n\treturn newNodePaneList;\n};\n\nexport const updateSourcePaneList = (newLinkPaneList, prevNodePaneList) => \n\tupdateNodePaneList(newLinkPaneList, prevNodePaneList, 'source');\n\nexport const updateTargetPaneList = (newLinkPaneList, prevNodePaneList) => \n\tupdateNodePaneList(newLinkPaneList, prevNodePaneList, 'target');\n\n// updateLinkPaneListColor\n\nexport const updateLinkPaneListColor = (prevLinkPaneList, linkKey, newColor) => \n\tprevLinkPaneList.map(linkDataObject => ({ ...linkDataObject,\n\t\tcolor: linkDataObject.key !== linkKey ? linkDataObject.color : newColor\n\t}));\n\n// addNewLinkDataObjects\n\nconst generateSegementNameList = (linkRowObject, optionList, countryIDToData) => {\n\tlet segmentNameList = []; // a queue\n\n\t// bfs to populate queue\n\tfor (let i = 0; i < optionList.length; i++) {\n\t\tconst currOption = optionList[i];\n\t\tconst newSegmentNameSet = new Set();\n\n\t\tif (segmentNameList.length === 0) // init\n\t\t\tfor (let { attributeName, isID } of currOption.attributeList) {\n\t\t\t\tconst attributeValue = !isID ? \n\t\t\t\t\t(linkRowObject[attributeName] === '' ? 'null' : linkRowObject[attributeName]) :\n\t\t\t\t\t(countryIDToData[linkRowObject[attributeName]].displayName);\n\t\t\t\tconst newSegmentName = `${ currOption.displayName }=${ attributeValue }, `;\n\n\t\t\t\tnewSegmentNameSet.add(newSegmentName);\n\t\t\t}\n\t\t\t\n\t\telse while (segmentNameList.length > 0) {\n\t\t\tconst currSegmentName = segmentNameList.shift();\n\n\t\t\tfor (let { attributeName, isID } of currOption.attributeList) {\n\t\t\t\tconst attributeValue = !isID ? \n\t\t\t\t\t(linkRowObject[attributeName] === '' ? 'null' : linkRowObject[attributeName]) :\n\t\t\t\t\t(countryIDToData[linkRowObject[attributeName]].displayName);\n\t\t\t\tconst newSegmentName = currSegmentName + `${ currOption.displayName }=${ attributeValue }, `;\n\n\t\t\t\tnewSegmentNameSet.add(newSegmentName); // use set because attr can have same value\n\t\t\t}\n\t\t}\n\n\t\tsegmentNameList = [ ...newSegmentNameSet ];\n\t}\n\n\t// remove , \n\tfor (let i = 0; i < segmentNameList.length; i++)\n\t\tsegmentNameList[i] = segmentNameList[i].slice(0, -2);\n\n\treturn segmentNameList;\n};\n\nconst generateSegmentNameToLinkRowList = (linkRowList, optionList, countryIDToData) => {\n\tconst segmentNameToLinkRowList = {};\n\n\tfor (let linkRowObject of linkRowList) {\n\t\tlet segmentNameList = generateSegementNameList(linkRowObject, optionList, countryIDToData);\n\n\t\tfor (let segmentName of segmentNameList) {\n\t\t\tif (!(segmentName in segmentNameToLinkRowList))\n\t\t\t\tsegmentNameToLinkRowList[segmentName] = [];\n\n\t\t\tsegmentNameToLinkRowList[segmentName].push(linkRowObject);\n\t\t}\t\t\n\t}\n\n\treturn segmentNameToLinkRowList;\n};\n\nconst generateSegmentNameToColor = (currColorList, segmentNameToLinkRowList) => {\n\tconst newColorList = [];\n\tconst segmentNameList = Object.keys(segmentNameToLinkRowList);\n\tconst segmentNameToColor = {};\n\n\t// add color not in curr list\n\tfor (let color of schemeTableau10)\n\t\tif (newColorList.length < segmentNameList.length)\n\t\t\tif (currColorList.indexOf(color) === -1) // not found\n\t\t\t\tnewColorList.push(color);\n\n\t// random assignment if too many colors needed\n\twhile (newColorList.length < segmentNameList.length) {\n\t\tconst randomIndex = Math.floor(Math.random() * schemeTableau10.length);\n\t\tnewColorList.push(schemeTableau10[randomIndex]);\n\t}\n\n\t// generate segmentNameToColor\n\tfor (let i = 0; i < segmentNameList.length; i++)\n\t\tsegmentNameToColor[segmentNameList[i]] = newColorList[i];\n\n\treturn segmentNameToColor;\n};\n\nconst generateNewChildLinkDataList = (\n\tparentLinkDataObject,\n\tsegmentNameToLinkRowList,\n\tsegmentNameToColor\n) => {\n\tconst {\n\t\tEIFYear,\n\t\tdataTable,\n\t\tendYear,\n\t\tisDirected,\n\t\tisWeighted,\n\t\toutlierCount,\n\t\tsignYear,\n\t\tstartYear,\n\t\ttooltip,\n\t\teventName\n\t} = parentLinkDataObject;\n\tconst newChildLinkDataList = [];\n\n\tfor (let segmentName in segmentNameToLinkRowList) {\n\t\tconst parentKey = parentLinkDataObject.key;\n\t\tconst segmentKey = segmentName.replace(/[^0-9a-z]/gi, '').toLowerCase();\n\n\t\tconst canDelete = true;\n\t\tconst color = segmentNameToColor[segmentName];\n\t\tconst displayName = segmentName;\n\t\tconst isSelected = false;\n\t\tconst isShown = true;\n\t\tconst isSubItem = true;\n\t\tconst key = `${ parentKey }_${ segmentKey }`; // cannot use '-'\n\t\tconst linkRowList = segmentNameToLinkRowList[segmentName];\n\t\tconst linkType = key;\n\n\t\tnewChildLinkDataList.push({\n\t\t\tEIFYear,\n\t\t\tcanDelete,\n\t\t\tcolor,\n\t\t\tdataTable,\n\t\t\tdisplayName,\n\t\t\tendYear,\n\t\t\tisDirected,\n\t\t\tisSelected,\n\t\t\tisShown,\n\t\t\tisSubItem,\n\t\t\tisWeighted,\n\t\t\tkey,\n\t\t\tlinkRowList,\n\t\t\tlinkType,\n\t\t\toutlierCount,\n\t\t\tsignYear,\n\t\t\tstartYear,\n\t\t\ttooltip,\n\t\t\tparentLinkDataObject, // for changing legend label\n\t\t\teventName\n\t\t});\n\t}\n\n\treturn newChildLinkDataList;\n};\n\nconst generateParentKeyToChildLinkDataList = (oldChildLinkDataList, newChildLinkDataList) => {\n\tconst parentKeyToChilLinkDataList = {};\n\n\t// assume unique\n\tfor (let linkDataObject of oldChildLinkDataList) {\n\t\tconst parentKey = linkDataObject.parentLinkDataObject.key;\n\n\t\tif (!(parentKey in parentKeyToChilLinkDataList))\n\t\t\tparentKeyToChilLinkDataList[parentKey] = [];\n\n\t\tparentKeyToChilLinkDataList[parentKey].push(linkDataObject);\n\t}\n\n\t// remove duplicates\n\tfor (let linkDataObject of newChildLinkDataList) {\n\t\tconst parentKey = linkDataObject.parentLinkDataObject.key;\n\t\tconst childKey = linkDataObject.key;\n\t\tlet isDuplicate = false;\n\n\t\tif (!(parentKey in parentKeyToChilLinkDataList))\n\t\t\tparentKeyToChilLinkDataList[parentKey] = [];\n\n\t\tisDuplicate = parentKeyToChilLinkDataList[parentKey].filter(({ key }) => key === childKey).length > 0;\n\t\tif (!isDuplicate) parentKeyToChilLinkDataList[parentKey].push(linkDataObject);\n\t}\n\n\t// sorting by display name\n\tfor (let parentKey in parentKeyToChilLinkDataList)\n\t\tparentKeyToChilLinkDataList[parentKey].sort((a, b) => {\n\t\t\tif (a.displayName < b.displayName) return -1;\n\t\t\tif (a.displayName > b.displayName) return 1;\n\t\t\treturn 0;\n\t\t});\n\n\treturn parentKeyToChilLinkDataList;\n};\n\nexport const addNewLinkDataObjects = (\n\tprevLinkPaneList, linkKey, optionList, countryIDToData\n) => {\n\tif (optionList.length === 0)\n\t\treturn prevLinkPaneList;\n\n\tconst parentLinkDataObject = prevLinkPaneList.filter(({ key }) => key === linkKey)[0];\n\tconst parentLinkRowList = parentLinkDataObject.linkRowList;\n\tconst currColorList = prevLinkPaneList.map(({ color }) => color);\n\n\tconst segmentNameToLinkRowList = generateSegmentNameToLinkRowList(parentLinkRowList, optionList, countryIDToData);\n\tconst segmentNameToColor = generateSegmentNameToColor(currColorList, segmentNameToLinkRowList);\n\tconst newChildLinkDataList = generateNewChildLinkDataList(parentLinkDataObject, segmentNameToLinkRowList, segmentNameToColor);\n\tconst oldChildLinkDataList = prevLinkPaneList.filter(({ isSubItem }) => isSubItem);\n\tconst parentListDataList = prevLinkPaneList.filter(({ isSubItem }) => !isSubItem);\n\tconst parentKeyToChilLinkDataList = generateParentKeyToChildLinkDataList(oldChildLinkDataList, newChildLinkDataList);\n\tconst newLinkPaneList = [];\n\n\tfor (let parentLinkDataObject of parentListDataList) {\n\t\tconst parentKey = parentLinkDataObject.key;\n\n\t\tif (parentKey in parentKeyToChilLinkDataList) {\n\t\t\tconst childLinkDataList = parentKeyToChilLinkDataList[parentKey];\n\n\t\t\tnewLinkPaneList.push(parentLinkDataObject);\n\n\t\t\tfor (let childLinkDataObject of childLinkDataList)\n\t\t\t\tnewLinkPaneList.push(childLinkDataObject);\n\t\t}\n\t\telse newLinkPaneList.push(parentLinkDataObject);\n\t}\n\n\treturn newLinkPaneList;\n};","import { timelineSliderOptions } from '../config';\n\nexport const generateTimelineSliderMin = (linkPaneList, selectedYearAttr) => {\n\tconst dependentAttrList = selectedYearAttr.rangeDependencyList;\n\tconst currentYear = new Date().getFullYear();\n\tlet min = Infinity;\n\n\tlinkPaneList\n\t\t.filter(({ isSelected }) => isSelected)\n\t\t.forEach(linkDataObject => {\n\t\t\tfor (let dependentAttrName of dependentAttrList)\n\t\t\t\tif (linkDataObject[dependentAttrName] !== null) // has the attr\n\t\t\t\t\tif (linkDataObject[dependentAttrName].min !== null) // has a min val\n\t\t\t\t\t\tmin = Math.min(min, linkDataObject[dependentAttrName].min);\n\t\t});\n\n\tif (min === Infinity)\n\t\treturn currentYear - 10;\n\tif (min > currentYear - 10)\n\t\treturn currentYear - 10\n\n\treturn min;\n};\n\nexport const generateTimelineSliderMax = (linkPaneList, selectedYearAttr) => {\n\tconst dependentAttrList = selectedYearAttr.rangeDependencyList;\n\tconst currentYear = new Date().getFullYear();\n\tlet max = -Infinity;\n\n\tlinkPaneList\n\t\t.filter(({ isSelected }) => isSelected)\n\t\t.forEach(linkDataObject => {\n\t\t\tfor (let dependentAttrName of dependentAttrList)\n\t\t\t\tif (linkDataObject[dependentAttrName] !== null) // has the attr\n\t\t\t\t\tif (linkDataObject[dependentAttrName].max !== null) // has a max val\n\t\t\t\t\t\tmax = Math.max(max, linkDataObject[dependentAttrName].max);\n\t\t});\n\n\tif (max === -Infinity)\n\t\treturn currentYear + 10;\n\tif (max < currentYear + 10)\n\t\treturn currentYear + 10;\n\n\treturn max;\n};\n\nconst generateYearAttributeList = linkPaneList => {\n\tconst yearAttributeList = [ timelineSliderOptions['no-filter'] ];\n\tconst selectedLinkDataObjectList = linkPaneList\n\t\t.filter(({ isSelected }) => isSelected);\n\n\tfor (let key in timelineSliderOptions)\n\t\tif (key !== 'no-filter') {\n\t\t\tconst currTimelineSliderOption = timelineSliderOptions[key];\n\t\t\tconst requiredAttrList = currTimelineSliderOption.requirementList;\n\t\t\tlet hasAllRequiredAttr = true;\n\n\t\t\tfor (let requiredAttrName of requiredAttrList) {\n\t\t\t\tlet hasCurrRequiredAttr = false;\n\n\t\t\t\tfor (let linkDataObject of selectedLinkDataObjectList)\n\t\t\t\t\tif (linkDataObject[requiredAttrName] !== null) {\n\t\t\t\t\t\thasCurrRequiredAttr = true; \n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\tif (!hasCurrRequiredAttr) {\n\t\t\t\t\thasAllRequiredAttr = false; \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasAllRequiredAttr)\n\t\t\t\tyearAttributeList.push(currTimelineSliderOption);\n\t\t}\n\n\treturn yearAttributeList;\n};\n\n// called when select link\nexport const updateTimelineSliderState = linkPaneList => {\n\tconst defaultYearAttribute = timelineSliderOptions['no-filter'];\n\tconst yearAttributeList = generateYearAttributeList(linkPaneList);\n\tconst currentYear = new Date().getFullYear();\n\n\treturn {\n\t\tyearAttribute: defaultYearAttribute, \n\t\tyearAttributeList: yearAttributeList,\n\t\tmin: currentYear - 10, \n\t\tmax: currentYear + 10, \n\t\tvalue: currentYear\n\t};\n};","const filterLinkByTime = (\n\tlinkRowObject, \n\tlinkDataObject, \n\ttimelineSliderState\n) => {\n\tconst timelineSliderType = timelineSliderState.yearAttribute.type;\n\n\tswitch (timelineSliderType) {\n\t\tcase 'no-filter': {\n\t\t\treturn true;\n\t\t}\n\t\tcase 'point': {\n\t\t\tconst timelineValue = timelineSliderState.value;\n\t\t\tconst { startYearAttrType, endYearAttrType } = timelineSliderState.yearAttribute;\n\t\t\tconst startYearAttr = linkDataObject[startYearAttrType];\n\t\t\tconst endYearAttr = linkDataObject[endYearAttrType];\n\t\t\tlet startYearValue = null, endYearValue = null;\n\n\t\t\tif (startYearAttr !== null && linkRowObject[startYearAttr.attributeName] !== '')\n\t\t\t\tstartYearValue = +linkRowObject[startYearAttr.attributeName];\n\t\t\tif (endYearAttr !== null && linkRowObject[endYearAttr.attributeName] !== '')\n\t\t\t\tendYearValue = +linkRowObject[endYearAttr.attributeName];\n\n\t\t\tif (startYearValue === null) return false;\n\t\t\telse if (endYearValue === null) return timelineValue >= startYearValue; // has start but not end\n\t\t\telse return timelineValue >= startYearValue && timelineValue <= endYearValue; // has both\n\t\t}\n\t\tcase 'range': {\n\t\t\tconst timelineRange = timelineSliderState.value;\n\t\t\tconst { filterYearAttrType } = timelineSliderState.yearAttribute;\n\t\t\tconst filterYearAttr = linkDataObject[filterYearAttrType];\n\t\t\tlet yearValue = null;\n\n\t\t\tif (filterYearAttr !== null && linkRowObject[filterYearAttr.attributeName] !== '')\n\t\t\t\tyearValue = +linkRowObject[filterYearAttr.attributeName];\n\n\t\t\tif (yearValue === null) return false;\n\t\t\treturn yearValue >= timelineRange[0] && yearValue <= timelineRange[1];\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled case: ${ timelineSliderType }`);\n\t\t}\n\t}\n};\n\nconst getSelectedNodeSet = nodePaneList => {\n\tconst filteredIDList = nodePaneList\n\t\t.filter(nodeObject => nodeObject.isSelected)\n\t\t.map(nodeObject => nodeObject.data.ID);\n\n\treturn new Set(filteredIDList);\n};\n\nconst generateLinkTypeToMetadata = linkPaneList => {\n\tconst linkTypeToMetadata = {};\n\n\tlinkPaneList.forEach(linkDataObject => {\n\t\tconst linkType = linkDataObject.linkType;\n\n\t\tlinkTypeToMetadata[linkType] = linkDataObject;\n\t});\n\n\treturn linkTypeToMetadata;\n};\n\nconst generateLinkIDToLinkRowList = (\n\tlinkPaneList, \n\tsourcePaneList, \n\ttargetPaneList, \n\ttimelineSliderState\n) => {\n\tconst linkIDToLinkRowList = {};\n\tconst selectedSourceIDSet = getSelectedNodeSet(sourcePaneList);\n\tconst selectedTargetIDSet = getSelectedNodeSet(targetPaneList);\n\n\tfor (let linkDataObject of linkPaneList) {\n\t\tconst {\n\t\t\tlinkRowList,\n\t\t\tisSelected,\n\t\t\tisDirected,\n\t\t\tlinkType\n\t\t} = linkDataObject;\n\n\t\tif (isSelected)\n\t\t\tfor (let linkRowObject of linkRowList) {\n\t\t\t\tif (isDirected) {\n\t\t\t\t\tconst sourceID = linkRowObject.node1;\n\t\t\t\t\tconst targetID = linkRowObject.node2;\n\t\t\t\t\tconst sourceSelected = selectedSourceIDSet.has(sourceID);\n\t\t\t\t\tconst targetSelected = selectedTargetIDSet.has(targetID);\n\t\t\t\t\tconst satisfiesTimelineSliderCriteria = filterLinkByTime(\n\t\t\t\t\t\tlinkRowObject, linkDataObject, timelineSliderState\n\t\t\t\t\t);\n\n\t\t\t\t\tif (sourceSelected && targetSelected && satisfiesTimelineSliderCriteria) {\n\t\t\t\t\t\tconst linkID = `${ sourceID }-${ targetID }-${ linkType }`;\n\n\t\t\t\t\t\tif (!(linkID in linkIDToLinkRowList))\n\t\t\t\t\t\t\tlinkIDToLinkRowList[linkID] = [];\n\n\t\t\t\t\t\tlinkIDToLinkRowList[linkID].push(linkRowObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse if (!isDirected) {\n\t\t\t\t\tconst sourceID = linkRowObject.node1 < linkRowObject.node2 ? linkRowObject.node1 : linkRowObject.node2;\n\t\t\t\t\tconst targetID = linkRowObject.node1 < linkRowObject.node2 ? linkRowObject.node2 : linkRowObject.node1;\n\t\t\t\t\tconst selectionCriteria1 = selectedSourceIDSet.has(linkRowObject.node1) && selectedTargetIDSet.has(linkRowObject.node2);\n\t\t\t\t\tconst selectionCriteria2 = selectedSourceIDSet.has(linkRowObject.node2) && selectedTargetIDSet.has(linkRowObject.node1);\n\t\t\t\t\tconst satisfiesTimelineSliderCriteria = filterLinkByTime(\n\t\t\t\t\t\tlinkRowObject, linkDataObject, timelineSliderState\n\t\t\t\t\t);\n\n\t\t\t\t\tif ((selectionCriteria1 || selectionCriteria2) && satisfiesTimelineSliderCriteria) {\n\t\t\t\t\t\tconst linkID = `${ sourceID }-${ targetID }-${ linkType }`;\n\n\t\t\t\t\t\tif (!(linkID in linkIDToLinkRowList))\n\t\t\t\t\t\t\tlinkIDToLinkRowList[linkID] = [];\n\n\t\t\t\t\t\tlinkIDToLinkRowList[linkID].push(linkRowObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\treturn linkIDToLinkRowList;\n};\n\nexport const updateVisualizationPaneList = (\n\tlinkPaneList, \n\tsourcePaneList, \n\ttargetPaneList, \n\ttimelineSliderState\n) => {\n\tconst visualizationPaneList = [];\n\tconst linkTypeToMetadata = generateLinkTypeToMetadata(linkPaneList);\n\tconst linkIDToLinkRowList = generateLinkIDToLinkRowList(\n\t\tlinkPaneList, \n\t\tsourcePaneList, \n\t\ttargetPaneList, \n\t\ttimelineSliderState\n\t);\n\n\tfor (let linkID in linkIDToLinkRowList) {\n\t\tconst [ \n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tlinkType \n\t\t] = linkID.split('-');\n\t\tconst { \n\t\t\tisDirected, \n\t\t\tisWeighted, \n\t\t\tcolor, \n\t\t\toutlierCount,\n\t\t\ttooltip,\n\t\t\tdataTable,\n\t\t\teventName\n\t\t} = linkTypeToMetadata[linkType];\n\t\tconst linkRowList = linkIDToLinkRowList[linkID];\n\t\tconst linkRowCount = linkRowList.length;\n\t\tconst isOutlier = linkRowCount > outlierCount;\n\n\t\tvisualizationPaneList.push({ \n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tlinkType, \n\t\t\tcolor,\n\t\t\tisDirected, \n\t\t\tisWeighted,\n\t\t\tisOutlier,\n\t\t\tlinkRowList,\n\t\t\ttooltip,\n\t\t\tdataTable,\n\t\t\teventName\n\t\t});\n\t}\n\n\treturn visualizationPaneList;\n};","export const checkIsDirected = visualizationPaneList => {\n\tfor (let { isDirected } of visualizationPaneList)\n\t\tif (!isDirected) return false;\n\n\treturn true;\n};\n\nexport const checkIsWeighted = visualizationPaneList => {\n\tfor (let { isWeighted } of visualizationPaneList)\n\t\tif (!isWeighted) return false;\n\n\treturn true;\n};\n\nexport const checkIsNetworkMetric = option => [ \n\t'Degree', \n\t'In Degree', \n\t'Out Degree', \n\t'Closeness', \n\t'Betweenness', \n\t'Eigenvector', \n\t'PageRank' \n].indexOf(option) !== -1;\n\nconst generateMainOptionList = (timeSeriesDataList, isDirected, isWeighted) => {\n\tconst mainOptionList = [];\n\n\tfor (let { metadata: { displayName } } of timeSeriesDataList)\n\t\tmainOptionList.push(displayName);\n\n\tif (!isDirected) \n\t\treturn [ ...mainOptionList, \n\t\t\t'Degree',\n\t\t\t'Closeness',\n\t\t\t'Betweenness',\n\t\t\t'Eigenvector',\n\t\t];\n\tif (isDirected && !isWeighted)\n\t\treturn [ ...mainOptionList,\n\t\t\t'Degree',\n\t\t\t'In Degree',\n\t\t\t'Out Degree',\n\t\t\t'Closeness',\n\t\t\t'Betweenness',\n\t\t\t'Eigenvector',\n\t\t\t'PageRank'\n\t\t];\n\tif (isDirected && isWeighted)\n\t\treturn [ ...mainOptionList,\n\t\t\t'Degree',\n\t\t\t'In Degree',\n\t\t\t'Out Degree',\n\t\t\t'Closeness',\n\t\t\t'Betweenness',\n\t\t\t'Eigenvector'\n\t\t]; // remove page rank\n};\n\nexport const generateSubOption1List = (timeSeriesDataList, mainOption, isDirected) => {\n\tconst isNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isTimeSeries = !isNetworkMetric;\n\n\tif (isTimeSeries)\n\t\treturn timeSeriesDataList.filter(({ metadata: { displayName } }) => \n\t\t\tdisplayName === mainOption)[0].metadata.yearList;\n\n\tswitch (mainOption) {\n\t\tcase 'Closeness': \n\t\tcase 'Betweenness': {\n\t\t\treturn isDirected ? [ 'directed', 'undirected' ] : [ 'undirected' ];\n\t\t}\n\t\t// only available for directed\n\t\tcase 'In Degree':\n\t\tcase 'Out Degree':\n\t\tcase 'PageRank': {\n\t\t\treturn [ 'directed' ];\n\t\t}\n\t\t// only available for undirected\n\t\tcase 'Degree':\n\t\tcase 'Eigenvector': {\n\t\t\treturn [ 'undirected' ];\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled option: ${ mainOption }`);\n\t\t}\n\t}\n};\n\nexport const generateSubOption2List = (timeSeriesDataList, mainOption, isWeighted) => {\n\tconst isNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isTimeSeries = !isNetworkMetric;\n\n\tif (isTimeSeries)\n\t\treturn timeSeriesDataList.filter(({ metadata: { displayName } }) => \n\t\t\tdisplayName === mainOption)[0].metadata.yearList;\n\n\tswitch (mainOption) {\n\t\tcase 'Closeness': \n\t\tcase 'Betweenness': \n\t\tcase 'Eigenvector': {\n\t\t\treturn isWeighted ? [ 'weighted', 'unweighted' ] : [ 'unweighted' ];\n\t\t}\n\t\t// only available for unweighted\n\t\tcase 'Degree':\n\t\tcase 'In Degree':\n\t\tcase 'Out Degree':\n\t\tcase 'PageRank': {\n\t\t\treturn [ 'unweighted' ];\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled option: ${ mainOption }`);\n\t\t}\n\t}\n};\n\nconst generateMainOption = (optionList, prevOption) => \n\toptionList.indexOf(prevOption) === -1 ? optionList[0] : prevOption;\n\nconst generateSubOption1 = (optionList, prevOption) => \n\toptionList.indexOf(prevOption) === -1 ? optionList[0] : prevOption;\n\nconst generateSubOption2 = (mainOption, optionList, prevOption) => {\n\tconst isNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst foundPrevOptionInList = optionList.indexOf(prevOption) !== -1;\n\n\tif (!isNetworkMetric && foundPrevOptionInList) return prevOption;\n\tif (!isNetworkMetric && !foundPrevOptionInList) return optionList[optionList.length - 1];\n\tif (isNetworkMetric && foundPrevOptionInList) return prevOption;\n\tif (isNetworkMetric && !foundPrevOptionInList) return optionList[0];\n};\n\n// called when visualizationPaneList changes\n// not called when changing main option\nexport const updateDetailPaneState = (\n\ttimeSeriesDataList,\n\tvisualizationPaneList,\n\tprevDetailPaneState\n) => {\n\tconst { \n\t\tisOpen: detailPaneIsOpen,\n\t\tmainOption: prevMainOption,\n\t\tsubOption1: prevSubOption1,\n\t\tsubOption2: prevSubOption2,\n\t} = prevDetailPaneState;\n\n\t// when closed no need to compute\n\tif (!detailPaneIsOpen)\n\t\treturn prevDetailPaneState;\n\n\t// compute state when opened\n\tif (detailPaneIsOpen) {\n\t\tconst isDirected = checkIsDirected(visualizationPaneList);\n\t\tconst isWeighted = checkIsWeighted(visualizationPaneList);\n\t\tconst newMainOptionList = generateMainOptionList(timeSeriesDataList, isDirected, isWeighted);\n\t\tconst newMainOption = generateMainOption(newMainOptionList, prevMainOption);\n\t\tconst newSubOption1List = generateSubOption1List(timeSeriesDataList, newMainOption, isDirected);\n\t\tconst newSubOption1 = generateSubOption1(newSubOption1List, prevSubOption1);\n\t\tconst newSubOption2List = generateSubOption2List(timeSeriesDataList, newMainOption, isWeighted);\n\t\tconst newSubOption2 = generateSubOption2(newMainOption, newSubOption2List, prevSubOption2);\n\n\t\treturn {\n\t\t\tisOpen: detailPaneIsOpen,\n\t\t\tmainOption: newMainOption,\n\t\t\tmainOptionList: newMainOptionList,\n\t\t\tsubOption1: newSubOption1,\n\t\t\tsubOption1List: newSubOption1List,\n\t\t\tsubOption2: newSubOption2,\n\t\t\tsubOption2List: newSubOption2List\n\t\t};\n\t}\n};\n\nexport const checkIsOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) => \n\tscrollHeight > clientHeight || scrollWidth > clientWidth;","import { useEffect, useReducer, useCallback } from 'react';\nimport { \n\tinitLinkPaneList,\n\tinitSourcePaneList,\n\tinitTargetPaneList,\n\ttoggleItemList,\n\tselectItemList,\n\tupdateSourcePaneList,\n\tupdateTargetPaneList,\n\tupdateLinkPaneListColor,\n\taddNewLinkDataObjects\n} from './updateDataSelectionPanes';\nimport { \n\tupdateTimelineSliderState,\n\tgenerateTimelineSliderMin,\n\tgenerateTimelineSliderMax\n} from './updateTimelineSlider';\nimport { \n\tupdateVisualizationPaneList \n} from './updateVisualizationPane';\nimport { \n\tupdateDetailPaneState, \n\tcheckIsDirected,\n\tcheckIsWeighted,\n\tcheckIsNetworkMetric,\n\tgenerateSubOption1List,\n\tgenerateSubOption2List,\n\tcheckIsOverflown\n} from './updateDetailPane';\nimport { timelineSliderOptions } from '../config';\n\nconst initialState = {\n\tlinkPane: { list: [] },\n\tsourcePane: { list: [] },\n\ttargetPane: { list: [] },\n\tvisualizationPane: { list: [] },\n\tcolorPicker: { \n\t\tisOpen: false,\n\t\tlinkKey: null,\n\t\tcurrColor: null,\n\t\tcolorTop: null,\n\t\tcolorLeft: null,\n\t\tcolorWidth: null,\n\t\tcolorHeight: null\n\t},\n\ttimelineSlider: {\n\t\tyearAttribute: timelineSliderOptions['no-filter'],\n\t\tyearAttributeList: [ timelineSliderOptions['no-filter'] ],\n\t\tmin: new Date().getFullYear() - 10, \n\t\tmax: new Date().getFullYear() + 10, \n\t\tvalue: new Date().getFullYear()\n\t},\n\tdetailPane: { \n\t\tisOpen: false,\n\t\tmainOption: null,\n\t\tmainOptionList: [ null ],\n\t\tsubOption1: null,\n\t\tsubOption1List: [ null ],\n\t\tsubOption2: null,\n\t\tsubOption2List: [ null ]\n\t},\n\tsearchWindow: { isOpen: false },\n\tlinkDisaggregator: { isOpen: false },\n\treference: { isOpen: false },\n\thover: { object: null, data: null },\n\tfocus: { object: null, data: null },\n\tisLoading: true\n};\n\nconst reducer = (prevState, dataState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INIT_INTERFACE': {\n\t\t\tconst { linkDataList, nodeList, timeSeriesDataList } = dataState;\n\t\t\tconst { detailPane: prevDetailPaneState } = prevState;\n\t\t\tconst newLinkPaneList = initLinkPaneList(linkDataList);\n\t\t\tconst newSourcePaneList = initSourcePaneList(newLinkPaneList, nodeList);\n\t\t\tconst newTargetPaneList = initTargetPaneList(newLinkPaneList, nodeList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkPaneList);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(newLinkPaneList, newSourcePaneList, newTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState,\n\t\t\t\tisLoading: false\n\t\t\t};\n\t\t}\n\n\t\t// data selection pane\n\n\t\tcase 'SELECT_LINK_PANE_ITEM': {\n\t\t\tconst { linkKey } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = toggleItemList(prevLinkPaneList, linkKey);\n\t\t\tconst newSourcePaneList = updateSourcePaneList(newLinkPaneList, prevSourcePaneList);\n\t\t\tconst newTargetPaneList = updateTargetPaneList(newLinkPaneList, prevTargetPaneList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkPaneList);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(newLinkPaneList, newSourcePaneList, newTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_LINK_PANE_ITEMS': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = selectItemList(prevLinkPaneList, isSelected);\n\t\t\tconst newSourcePaneList = updateSourcePaneList(newLinkPaneList, prevSourcePaneList);\n\t\t\tconst newTargetPaneList = updateTargetPaneList(newLinkPaneList, prevTargetPaneList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkPaneList);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(newLinkPaneList, newSourcePaneList, newTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_LINK_PANE_ITEM': {\n\t\t\tconst { linkKey } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = prevLinkPaneList.filter(({ key }) => key !== linkKey);\n\t\t\tconst newSourcePaneList = updateSourcePaneList(newLinkPaneList, prevSourcePaneList);\n\t\t\tconst newTargetPaneList = updateTargetPaneList(newLinkPaneList, prevTargetPaneList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkPaneList);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(newLinkPaneList, newSourcePaneList, newTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_SOURCE_PANE_ITEM': {\n\t\t\tconst { sourceKey } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newSourcePaneList = toggleItemList(prevSourcePaneList, sourceKey);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(prevLinkPaneList, newSourcePaneList, prevTargetPaneList, prevTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_SOURCE_PANE_ITEMS': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newSourcePaneList = selectItemList(prevSourcePaneList, isSelected);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(prevLinkPaneList, newSourcePaneList, prevTargetPaneList, prevTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_TARGET_PANE_ITEM': {\n\t\t\tconst { targetKey } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newTargetPaneList = toggleItemList(prevTargetPaneList, targetKey);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(prevLinkPaneList, prevSourcePaneList, newTargetPaneList, prevTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_TARGET_PANE_ITEMS': {\n\t\t\tconst { isSelected } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newTargetPaneList = selectItemList(prevTargetPaneList, isSelected);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(prevLinkPaneList, prevSourcePaneList, newTargetPaneList, prevTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_DATA_SELECTION_PANE_ITEM': {\n\t\t\tconst { textEl } = action;\n\t\t\tconst { top, height } = textEl.getBoundingClientRect();\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'DATA_SELECTION_PANE_ITEM', \n\t\t\t\tdata: { \n\t\t\t\t\tleft: 240, // avoid blocking the close button \n\t\t\t\t\ttop: top - 8 + height / 2,\n\t\t\t\t\ttext: textEl.innerText\n\t\t\t\t}\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_DATA_SELECTION_PANE_ITEM': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\n\t\t// visualizataion pane\n\n\t\tcase 'CHANGE_TIMELINE_SLIDER': {\n\t\t\tconst { value } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newTimelineSliderState = { ...prevTimelineSliderState, value };\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(prevLinkPaneList, prevSourcePaneList, prevTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_YEAR_ATTRIBUTE': {\n\t\t\tconst { yearAttribute } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState,\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newTimelineSliderState = yearAttribute.key === 'no-filter' ? {\n\t\t\t\t...prevTimelineSliderState, \n\t\t\t\tyearAttribute: yearAttribute,\n\t\t\t\tmin: new Date().getFullYear() - 10, \n\t\t\t\tmax: new Date().getFullYear() + 10, \n\t\t\t\tvalue: new Date().getFullYear()\n\t\t\t} : {\n\t\t\t\t...prevTimelineSliderState,\n\t\t\t\tyearAttribute: yearAttribute,\n\t\t\t\tmin: generateTimelineSliderMin(prevLinkPaneList, yearAttribute),\n\t\t\t\tmax: generateTimelineSliderMax(prevLinkPaneList, yearAttribute),\n\t\t\t\tvalue: yearAttribute.type === 'point' ? new Date().getFullYear() : [\n\t\t\t\t\tgenerateTimelineSliderMin(prevLinkPaneList, yearAttribute),\n\t\t\t\t\tgenerateTimelineSliderMax(prevLinkPaneList, yearAttribute)\n\t\t\t\t]\n\t\t\t};\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(prevLinkPaneList, prevSourcePaneList, prevTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState, \n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_VIS_PANE_LABEL': {\n\t\t\tconst { nodeID } = action;\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'NODE', \n\t\t\t\tdata: { nodeID }\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_VIS_PANE_LABEL': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'MOUSE_MOVE_VIS_PANE_LINK': {\n\t\t\tconst { \n\t\t\t\ttop, left,\n\t\t\t\tsourceID, targetID, linkType,\n\t\t\t\tlinkRowList, tooltipAttrList, eventName\n\t\t\t} = action;\n\t\t\t\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'LINK', \n\t\t\t\tdata: {\n\t\t\t\t\ttop, left,\n\t\t\t\t\tsourceID, targetID, linkType,\n\t\t\t\t\tlinkRowList, tooltipAttrList, eventName\n\t\t\t\t}\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_VIS_PANE_LINK': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'CLICK_VIS_PANE_LINK': {\n\t\t\tconst {\n\t\t\t\tsourceID, targetID, \n\t\t\t\tlinkRowList, dataTableAttrList, eventName\n\t\t\t} = action;\n\n\t\t\treturn { ...prevState, \n\t\t\t\tfocus: { object: 'LINK', data: {\n\t\t\t\t\tsourceID, targetID, \n\t\t\t\t\tlinkRowList, dataTableAttrList, eventName\n\t\t\t\t} },\n\t\t\t\thover: { object: null, data: null } // when click on link, remove highlight and tooltip\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_POP_UP_WINDOW': {\n\t\t\treturn { ...prevState, focus: { object: null, data: null } };\n\t\t}\n\t\tcase 'MOUSE_ENTER_CONTROL_BUTTON': {\n\t\t\tconst { buttonEl, text } = action;\n\t\t\tconst buttonBBox = buttonEl.getBoundingClientRect();\n\t\t\tconst left = buttonBBox.left - 8 + buttonBBox.width;\n\t\t\tconst top = buttonBBox.top - 8 + buttonBBox.height + 8;\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'CONTROL_BUTTON', \n\t\t\t\tdata: { left, top, text }\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_CONTROL_BUTTON': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'OPEN_COLOR_PICKER': {\n\t\t\tconst { linkKey, currColor, colorEl } = action;\n\t\t\tconst { top, left, width, height } = colorEl.getBoundingClientRect();\n\n\t\t\treturn { ...prevState, \n\t\t\t\tcolorPicker: { \n\t\t\t\t\tisOpen: true,\n\t\t\t\t\tlinkKey: linkKey,\n\t\t\t\t\tcurrColor: currColor,\n\t\t\t\t\tcolorTop: top - 8,\n\t\t\t\t\tcolorLeft: left - 8,\n\t\t\t\t\tcolorWidth: width,\n\t\t\t\t\tcolorHeight: height\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_COLOR_PICKER': {\n\t\t\treturn { ...prevState, \n\t\t\t\tcolorPicker: { \n\t\t\t\t\tisOpen: false, \n\t\t\t\t\tlinkKey: null,\n\t\t\t\t\tcurrColor: null,\n\t\t\t\t\tcolorTop: null,\n\t\t\t\t\tcolorLeft: null,\n\t\t\t\t\tcolorWidth: null,\n\t\t\t\t\tcolorHeight: null\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_COLOR': {\n\t\t\tconst { linkKey, newColor } = action;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\ttimelineSlider: prevTimelineSliderState\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = updateLinkPaneListColor(prevLinkPaneList, linkKey, newColor);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(newLinkPaneList, prevSourcePaneList, prevTargetPaneList, prevTimelineSliderState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tcolorPicker: { \n\t\t\t\t\tisOpen: false, \n\t\t\t\t\tlinkKey: null,\n\t\t\t\t\tcurrColor: null,\n\t\t\t\t\tcolorTop: null,\n\t\t\t\t\tcolorLeft: null,\n\t\t\t\t\tcolorWidth: null,\n\t\t\t\t\tcolorHeight: null\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\n\t\t// detail pane\n\n\t\tcase 'TOGGLE_DETAIL_PANE': {\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tvisualizationPane: { list: prevVisualizationPaneList },\n\t\t\t\tdetailPane: { isOpen: prevIsOpen }\n\t\t\t} = prevState;\n\t\t\tconst newDetailPaneState = updateDetailPaneState(\n\t\t\t\ttimeSeriesDataList,\n\t\t\t\tprevVisualizationPaneList,\n\t\t\t\t{ ...prevState.detailPane, isOpen: !prevIsOpen }\n\t\t\t);\n\n\t\t\treturn { ...prevState, \n\t\t\t\tdetailPane: newDetailPaneState,\n\t\t\t\thover: { object: null, data: null } // remove tooltip when open\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_DETAIL_PANE_BUTTON': {\n\t\t\tconst { buttonEl } = action;\n\t\t\tconst buttonBBox = buttonEl.getBoundingClientRect();\n\t\t\tconst right = 0;\n\t\t\tconst top = buttonBBox.top - 8 + buttonBBox.height + 8;\n\t\t\tconst text = 'Show details of current network';\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'DETAIL_PANE_BUTTON', \n\t\t\t\tdata: { right, top, text }\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_DETAIL_PANE_BUTTON': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'SELECT_DETAIL_PANE_MAIN_OPTION': {\n\t\t\tconst { option: newMainOption } = action;\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { visualizationPane: { list: prevVisualizationPaneList } } = prevState;\n\t\t\tconst isDirected = checkIsDirected(prevVisualizationPaneList);\n\t\t\tconst isWeighted = checkIsWeighted(prevVisualizationPaneList);\n\t\t\tconst isNetworkMetric = checkIsNetworkMetric(newMainOption);\n\t\t\tconst newSubOption1List = generateSubOption1List(timeSeriesDataList, newMainOption, isDirected);\n\t\t\tconst newSubOption1 = newSubOption1List[0];\n\t\t\tconst newSubOption2List = generateSubOption2List(timeSeriesDataList, newMainOption, isWeighted);\n\t\t\tconst newSubOption2 = !isNetworkMetric ? newSubOption2List[newSubOption2List.length - 1] : newSubOption2List[0];\n\t\t\t\n\t\t\treturn { ...prevState, detailPane: { ...prevState.detailPane,\n\t\t\t\tmainOption: newMainOption,\n\t\t\t\tsubOption1: newSubOption1,\n\t\t\t\tsubOption1List: newSubOption1List,\n\t\t\t\tsubOption2: newSubOption2,\n\t\t\t\tsubOption2List: newSubOption2List\n\t\t\t} };\n\t\t}\n\t\tcase 'SELECT_DETAIL_PANE_SUB_OPTION': {\n\t\t\tconst { key, option } = action;\n\n\t\t\treturn { ...prevState, \n\t\t\t\tdetailPane: { ...prevState.detailPane, [ key ]: option }\n\t\t\t};\n\t\t}\n\t\tcase 'MOUSE_ENTER_DETAIL_PANE_ITEM': {\n\t\t\tconst { itemEl, titleEl, titleText, itemData } = action;\n\t\t\tconst isHoveredNode = 'nodeID' in itemData;\n\t\t\tconst hoverStateObject = isHoveredNode ? 'DETAIL_PANE_NODE' : 'DETAIL_PANE_LINK';\n\t\t\tconst hoverStateData = { ...itemData, showTooltip: false };\n\t\t\tconst isTextTooLong = checkIsOverflown(titleEl);\n\n\t\t\tif (isTextTooLong) {\n\t\t\t\tconst itemBBox = itemEl.getBoundingClientRect();\n\t\t\t\tconst right = 250 + 5; // 250 is width of detail pane\n\t\t\t\tconst top = itemBBox.top - 8 + itemBBox.height / 2;\n\n\t\t\t\thoverStateData.showTooltip = true;\n\t\t\t\thoverStateData.right = right;\n\t\t\t\thoverStateData.top = top;\n\t\t\t\thoverStateData.text = titleText;\n\t\t\t}\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: hoverStateObject, \n\t\t\t\tdata: hoverStateData \n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_DETAIL_PANE_ITEM': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\t\tcase 'CLICK_DETAIL_PANE_DETAIL_BUTTON': {\n\t\t\tconst { mainOption, subOption1, subOption2, entryList } = action;\n\t\t\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\t\t\tconst focusStateObject = isSelectedNetworkMetric ? 'BAR_LIST' : 'SPARK_LINE_LIST';\n\t\t\tconst headerText = isSelectedNetworkMetric ? `${ mainOption } (${ subOption1 } + ${ subOption2 })` : mainOption;\n\t\t\tconst focusStateData = { headerText, entryList };\n\n\t\t\treturn { ...prevState, focus: { \n\t\t\t\tobject: focusStateObject, \n\t\t\t\tdata: focusStateData \n\t\t\t} };\n\t\t}\n\n\t\t// search window\n\n\t\tcase 'OPEN_SEARCH_WINDOW': {\n\t\t\treturn { ...prevState, \n\t\t\t\tsearchWindow: {  isOpen: true },\n\t\t\t\thover: { object: null, data: null }\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_SEARCH_WINDOW': {\n\t\t\treturn { ...prevState, searchWindow: {  isOpen: false } };\n\t\t}\n\t\tcase 'MOUSE_ENTER_SEARCH_WINDOW_BUTTON': {\n\t\t\tconst { buttonEl } = action;\n\t\t\tconst buttonBBox = buttonEl.getBoundingClientRect();\n\t\t\tconst right = buttonEl.style.right;\n\t\t\tconst top = buttonBBox.top - 8 + buttonBBox.height + 8;\n\t\t\tconst text = 'Open search window';\n\n\t\t\treturn { ...prevState, hover: { \n\t\t\t\tobject: 'SEARCH_WINDOW_BUTTON', \n\t\t\t\tdata: { right, top, text }\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_SEARCH_WINDOW_BUTTON': {\n\t\t\treturn { ...prevState, hover: { object: null, data: null } };\n\t\t}\n\n\t\t// link disaggregator\n\n\t\tcase 'OPEN_LINK_DISAGGREGATOR': {\n\t\t\treturn { ...prevState, \n\t\t\t\tlinkDisaggregator: {  isOpen: true },\n\t\t\t\thover: { object: null, data: null }\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_LINK_DISAGGREGATOR': {\t\t\t\n\t\t\treturn { ...prevState, linkDisaggregator: {  isOpen: false } };\n\t\t}\n\t\tcase 'CONFIRM_LINK_DISAGGREGATION': {\n\t\t\tconst { linkKey, optionList } = action;\n\t\t\tconst { countryIDToData } = dataState;\n\t\t\tconst { linkPane: { list: prevLinkPaneList } } = prevState;\n\t\t\tconst newLinkPaneList = addNewLinkDataObjects(\n\t\t\t\tprevLinkPaneList, linkKey, optionList, countryIDToData\n\t\t\t);\n\n\t\t\treturn { \n\t\t\t\t...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tlinkDisaggregator: { isOpen: false }\n\t\t\t};\n\t\t}\n\t\tcase 'CLEAR_DISAGGREGATED_LINKS': {\n\t\t\tconst { timeSeriesDataList } = dataState;\n\t\t\tconst { \n\t\t\t\tlinkPane: { list: prevLinkPaneList },\n\t\t\t\tsourcePane: { list: prevSourcePaneList },\n\t\t\t\ttargetPane: { list: prevTargetPaneList },\n\t\t\t\tdetailPane: prevDetailPaneState\n\t\t\t} = prevState;\n\t\t\tconst newLinkPaneList = prevLinkPaneList.filter(({ isSubItem, canDelete }) => !(isSubItem && canDelete));\n\t\t\tconst newSourcePaneList = updateSourcePaneList(newLinkPaneList, prevSourcePaneList);\n\t\t\tconst newTargetPaneList = updateTargetPaneList(newLinkPaneList, prevTargetPaneList);\n\t\t\tconst newTimelineSliderState = updateTimelineSliderState(newLinkPaneList);\n\t\t\tconst newVisualizationPaneList = updateVisualizationPaneList(newLinkPaneList, newSourcePaneList, newTargetPaneList, newTimelineSliderState);\n\t\t\tconst newDetailPaneState = updateDetailPaneState(timeSeriesDataList, newVisualizationPaneList, prevDetailPaneState);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tlinkPane: { list: newLinkPaneList },\n\t\t\t\tsourcePane: { list: newSourcePaneList },\n\t\t\t\ttargetPane: { list: newTargetPaneList },\n\t\t\t\ttimelineSlider: newTimelineSliderState,\n\t\t\t\tvisualizationPane: { list: newVisualizationPaneList },\n\t\t\t\tdetailPane: newDetailPaneState\n\t\t\t};\n\t\t}\n\n\t\t// reference\n\n\t\tcase 'OPEN_REFERENCE': {\n\t\t\treturn { ...prevState, \n\t\t\t\treference: {  isOpen: true },\n\t\t\t\thover: { object: null, data: null }\n\t\t\t};\n\t\t}\n\t\tcase 'CLOSE_REFERENCE': {\t\t\t\n\t\t\treturn { ...prevState, reference: {  isOpen: false } };\n\t\t}\n\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t\t}\n\t}\n};\n\nexport const useInterfaceState = dataState => {\n\tconst memoizedReducer = useCallback((prevState, action) => \n\t\treducer(prevState, dataState, action), [ dataState ]);\n\tconst [ interfaceState, dispatch ] = useReducer(memoizedReducer, initialState);\n\n\tuseEffect(() => {\n\t\tif (dataState.isLoading) \n\t\t\treturn;\n\t\t\n\t\tdispatch({ type: 'INIT_INTERFACE' });\n\t}, [ dataState ]);\n\n\treturn [ interfaceState, dispatch ];\n};","import { CgClose } from \"react-icons/cg\";\nimport './DataSelectionPaneItem.css';\n\nexport const DataSelectionPaneItem = ({\n\tisSelected,\n\tisSubItem,\n\tcanDelete,\n\tdisplayName,\n\thandleSelect,\n\thandleMouseEnter,\n\thandleMouseLeave,\n\thandleRemove\n}) => {\n\tlet className = 'item';\n\n\tif (isSubItem) className = `sub ${ className }`;\n\tif (canDelete) className = `deletable ${ className }`;\n\n\treturn (\n\t\t<div className={ className }>\n\n\t\t\t<label \n\t\t\t\tonMouseEnter={ handleMouseEnter } \n\t\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t\t>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\tchecked={ isSelected } \n\t\t\t\t\tonChange={ handleSelect }\n\t\t\t\t/>\n\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t<span className=\"text\">{ displayName }</span>\n\t\t\t</label>\n\n\t\t\t{ !canDelete ? null :\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"remove-button\"\n\t\t\t\t\tonClick={ handleRemove }\n\t\t\t\t><CgClose /></div> }\n\n\t\t</div>\n\t);\n};","import { DataSelectionPaneItem } from './DataSelectionPaneItem';\nimport { FaRegSquare, FaRegCheckSquare } from \"react-icons/fa\";\nimport './DataSelectionPane.css';\n\nexport const DataSelectionPane = ({\n\tid, \n\theaderText, \n\theaderIcon, \n\titemList,\n\thandleSelectItem,\n\thandleClickSelectNone,\n\thandleClickSelectAll,\n\thandleMouseEnterItem,\n\thandleMouseLeaveItem,\n\thandleClickRemoveButton,\n}) => {\n\treturn (\n\t\t<div className=\"data-selection-pane\" id={ id }>\n\t\t\t<div className=\"header\">\n\t\t\t\t{ headerIcon }<span className=\"text\">{ headerText }</span>\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t{ itemList\n\t\t\t\t\t.filter(itemObject => itemObject.isShown)\n\t\t\t\t\t.map(itemObject => \n\t\t\t\t\t\t<DataSelectionPaneItem\n\t\t\t\t\t\t\tkey={ itemObject.key }\n\t\t\t\t\t\t\tisSelected={ itemObject.isSelected }\n\t\t\t\t\t\t\tisSubItem={ itemObject.isSubItem }\n\t\t\t\t\t\t\tcanDelete={ itemObject.canDelete }\n\t\t\t\t\t\t\tdisplayName={ itemObject.displayName }\n\t\t\t\t\t\t\thandleSelect={ () => { handleSelectItem(itemObject.key) } }\n\t\t\t\t\t\t\thandleMouseEnter={ handleMouseEnterItem }\n\t\t\t\t\t\t\thandleMouseLeave={ handleMouseLeaveItem }\n\t\t\t\t\t\t\thandleRemove={ () => { handleClickRemoveButton(itemObject.key) } }\n\t\t\t\t\t\t/>) }\n\t\t\t</div>\n\t\t\t<div className=\"footer\">\n\t\t\t\t<span className=\"select-none button\" onClick={ handleClickSelectNone }>\n\t\t\t\t\t<FaRegSquare/><span className=\"text\">Select None</span>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"select-all button\" onClick={ handleClickSelectAll }>\n\t\t\t\t\t<FaRegCheckSquare/><span className=\"text\">Select All</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import $ from 'jquery';\nimport { memo } from 'react'; // avoid re-rendering on tooltip and time slider changes\nimport { DataSelectionPane } from './DataSelectionPane';\nimport { BiNetworkChart } from 'react-icons/bi';\nimport { CgSoftwareUpload, CgSoftwareDownload } from \"react-icons/cg\";\n\nconst checkIsOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) => \n\tscrollHeight > clientHeight || scrollWidth > clientWidth;\n\nexport const DataSelectionPanes = memo(({\n\tlinkPaneList,\n\tsourcePaneList,\n\ttargetPaneList,\n\tdispatch\n}) => {\t\n\tconst handleSelectLink = linkKey => \n\t\tdispatch({ type: 'SELECT_LINK_PANE_ITEM', linkKey });\n\tconst handleSelectLinks = isSelected => \n\t\tdispatch({ type: 'SELECT_LINK_PANE_ITEMS', isSelected });\n\tconst handleRemoveLinkPaneItem = linkKey =>\n\t\tdispatch({ type: 'REMOVE_LINK_PANE_ITEM', linkKey });\n\tconst handleSelectSource = sourceKey => \n\t\tdispatch({ type: 'SELECT_SOURCE_PANE_ITEM', sourceKey });\n\tconst handleSelectSources = isSelected => \n\t\tdispatch({ type: 'SELECT_SOURCE_PANE_ITEMS', isSelected });\n\tconst handleSelectTarget = targetKey => \n\t\tdispatch({ type: 'SELECT_TARGET_PANE_ITEM', targetKey });\n\tconst handleSelectTargets = isSelected => \n\t\tdispatch({ type: 'SELECT_TARGET_PANE_ITEMS', isSelected });\n\tconst handleMouseEnterItem = event => {\n\t\tconst textEl = $(event.target).closest('.item').find('.text')[0];\n\t\tconst isTextTooLong = checkIsOverflown(textEl);\n\n\t\tif (isTextTooLong)\n\t\t\tdispatch({ type: 'MOUSE_ENTER_DATA_SELECTION_PANE_ITEM', textEl });\n\t};\n\tconst handleMouseLeaveItem = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_DATA_SELECTION_PANE_ITEM' });\n\n\treturn (\n\t\t<>\n\t\t\t<DataSelectionPane\n\t\t\t\tid=\"link-pane\" \n\t\t\t\theaderIcon={ <BiNetworkChart /> }\n\t\t\t\theaderText=\"Links\" \n\t\t\t\titemList={ linkPaneList }\n\t\t\t\thandleSelectItem={ handleSelectLink }\n\t\t\t\thandleClickSelectNone={ () => { handleSelectLinks(false) } }\n\t\t\t\thandleClickSelectAll={ () => { handleSelectLinks(true) } }\n\t\t\t\thandleMouseEnterItem={ handleMouseEnterItem }\n\t\t\t\thandleMouseLeaveItem={ handleMouseLeaveItem }\n\t\t\t\thandleClickRemoveButton={ handleRemoveLinkPaneItem }\n\t\t\t/>\n\t\t\t<DataSelectionPane \n\t\t\t\tid=\"source-pane\"\n\t\t\t\theaderIcon={ <CgSoftwareUpload /> }\n\t\t\t\theaderText=\"Sources\" \n\t\t\t\titemList={ sourcePaneList }\n\t\t\t\thandleSelectItem={ handleSelectSource }\n\t\t\t\thandleClickSelectNone={ () => { handleSelectSources(false) } }\n\t\t\t\thandleClickSelectAll={ () => { handleSelectSources(true) } }\n\t\t\t\thandleMouseEnterItem={ handleMouseEnterItem }\n\t\t\t\thandleMouseLeaveItem={ handleMouseLeaveItem }\n\t\t\t\thandleClickRemoveButton={ () => {} }\n\t\t\t/>\n\t\t\t<DataSelectionPane \n\t\t\t\tid=\"target-pane\" \n\t\t\t\theaderIcon={ <CgSoftwareDownload /> }\n\t\t\t\theaderText=\"Targets\" \n\t\t\t\titemList={ targetPaneList }\n\t\t\t\thandleSelectItem={ handleSelectTarget }\n\t\t\t\thandleClickSelectNone={ () => { handleSelectTargets(false) } }\n\t\t\t\thandleClickSelectAll={ () => { handleSelectTargets(true) } }\n\t\t\t\thandleMouseEnterItem={ handleMouseEnterItem }\n\t\t\t\thandleMouseLeaveItem={ handleMouseLeaveItem }\n\t\t\t\thandleClickRemoveButton={ () => {} }\n\t\t\t/>\n\t\t</>\n\t);\n});","import { useState, useEffect } from 'react';\nimport { \n\tzoom, \n\tselect,\n\tzoomIdentity,\n\tgeoNaturalEarth1,\n\tgeoPath\n} from 'd3';\n\nexport const margin = {\n\ttop: 30, \n\tleft: -51, \n\tbottom: 60, // more space for the timeline slider\n\tright: 10\n};\n\nexport const useProjection = (SVGRef, landData) => {\n\tconst [ projectionState, setProjection ] = useState({\n\t\tprojection: null,\n\t\tpath: null,\n\t\tzoomHandler: null,\n\t\tisLoading: true\n\t});\n\n\tuseEffect(() => {\n\t\tif (SVGRef.current === null ||\n\t\t\tlandData === null)\n\t\t\treturn;\n\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst { width, height } = SVGEl.getBoundingClientRect();\n\t\tconst projection = geoNaturalEarth1()\n\t\t\t.fitExtent([ \n\t\t\t\t[ margin.left, margin.top ], \n\t\t\t\t[ width - margin.right, height - margin.bottom ] \n\t\t\t], landData);\n\t\tconst path = geoPath(projection);\n\t\tconst initialScale = projection.scale();\n\t\tconst initialTranslate = projection.translate();\n\t\tconst zoomHandler = zoom()\n\t\t\t.scaleExtent([ \n\t\t\t\tinitialScale * 0.8, \n\t\t\t\tinitialScale * 10 \n\t\t\t]);\n\n\t\tzoomHandler.on('zoom', e => {\n\t\t\tconst newScale = e.transform.k;\n\t\t\tconst newTranslate = [ e.transform.x, e.transform.y ];\n\n\t\t\tsetProjection(prevProjectionState => {\n\t\t\t\tif (!prevProjectionState.projection)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprojection,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tzoomHandler,\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t};\n\t\t\t\tif (prevProjectionState.projection) {\n\t\t\t\t\tprevProjectionState.projection\n\t\t\t\t\t\t.translate(newTranslate)\n\t\t\t\t\t\t.scale(newScale);\n\n\t\t\t\t\treturn { ...prevProjectionState }; // re-render on zoom\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tselect(SVGEl)\n\t\t\t.call(zoomHandler)\n\t\t\t.call(\n\t\t\t\tzoomHandler.transform, \n\t\t\t\tzoomIdentity\n\t\t\t\t\t.translate(...initialTranslate)\n\t\t\t\t\t.scale(initialScale)\n\t\t\t);\n\t\treturn () => { \n\t\t\tselect(SVGEl).on('.zoom', null) \n\t\t};\n\t}, [ SVGRef, landData ]);\n\n\treturn projectionState;\n};","import $ from 'jquery';\nimport { memo } from 'react';\nimport './VisualizationPaneLegend.css';\n\nexport const VisualizationPaneLegend = memo(({ linkPaneList, dispatch }) => {\n\tconst selectedLinkPaneList = linkPaneList.filter(({ isSelected }) => isSelected);\n\tconst hasSelectedLinks = selectedLinkPaneList.length > 0;\n\n\tconst handleClickColor = (e, linkKey, currColor) => \n\t\tdispatch({ \n\t\t\ttype: 'OPEN_COLOR_PICKER',\n\t\t\tlinkKey: linkKey, \n\t\t\tcurrColor: currColor,\n\t\t\tcolorEl: $(e.target).closest('.legend-item').find('span.color')[0]\n\t\t});\n\n\treturn (\n\t\t<div className=\"visualization-pane-legend\">\n\n\t\t\t{ selectedLinkPaneList.map(({ \n\t\t\t\tkey, color, displayName, isSubItem, parentLinkDataObject \n\t\t\t}) => \n\t\t\t\t<div \n\t\t\t\t\tkey={ key } \n\t\t\t\t\tclassName=\"color legend-item\"\n\t\t\t\t\tonClick={ e => { handleClickColor(e, key, color) } }\n\t\t\t\t>\n\t\t\t\t\t<span \n\t\t\t\t\t\tclassName=\"color\"\n\t\t\t\t\t\tstyle={{ background: color, color: color }}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\t{ !isSubItem ? displayName :\n\t\t\t\t\t\t\t`${ parentLinkDataObject.displayName } (${ displayName })` }\n\t\t\t\t\t</span>\n\t\t\t\t</div>) }\n\n\t\t\t{ hasSelectedLinks ? <>\n\t\t\t\t<div className=\"seperator\"></div>\n\n\t\t\t\t<div className=\"legend-item\">\n\t\t\t\t\t<span className=\"link-type non-outlier\">\n\t\t\t\t\t\t<span className=\"thick-link\"></span>\n\t\t\t\t\t\t<span className=\"thin-link\"></span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\tCount ≤ 90th percentile\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"legend-item\">\n\t\t\t\t\t<span className=\"link-type outlier\">\n\t\t\t\t\t\t<span className=\"thick-link\"></span>\n\t\t\t\t\t\t<span className=\"thin-link\"></span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"label\">\n\t\t\t\t\t\tCount > 90th percentile\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</> : null }\n\n\t\t</div>\n\t);\n});","import $ from 'jquery';\nimport { memo } from 'react';\nimport { select, geoNaturalEarth1, zoomIdentity } from 'd3';\nimport { BiZoomIn, BiZoomOut, BiCurrentLocation } from \"react-icons/bi\";\nimport { margin } from '../useVisualizationPane/useProjection';\nimport './VisualizationPaneControls.css';\n\nexport const VisualizationPaneControls = memo(({ \n\tSVGRef, \n\tlandData, \n\tprojectionState,\n\tdispatch\n}) => {\n\tconst handleMouseEnterButton = event => dispatch({ \n\t\ttype: 'MOUSE_ENTER_CONTROL_BUTTON',\n\t\tbuttonEl: $(event.target).closest('.button')[0],\n\t\ttext: $(event.target).closest('.button').attr('tooltip-text')\n\t});\n\tconst handleMouseLeaveButton = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_CONTROL_BUTTON' });\n\n\tconst handleClickZoomInBtn = () => {\n\t\tconst { zoomHandler } = projectionState;\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst SVG = select(SVGEl)\n\t\t\t.transition()\n\t\t\t.duration(400);\n\n\t\tzoomHandler.scaleBy(SVG, 2);\n\t};\n\tconst handleClickZoomOutBtn = () => {\n\t\tconst { zoomHandler } = projectionState;\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst SVG = select(SVGEl)\n\t\t\t.transition()\n\t\t\t.duration(400);\n\n\t\tzoomHandler.scaleBy(SVG, 1 / 2);\n\t};\n\tconst handleClickResetBtn = () => {\n\t\tconst { zoomHandler } = projectionState;\n\t\tconst SVGEl = SVGRef.current;\n\t\tconst SVG = select(SVGEl)\n\t\t\t.transition()\n\t\t\t.duration(400);\n\n\t\tconst { width, height } = SVGEl.getBoundingClientRect();\n\t\tconst projection = geoNaturalEarth1()\n\t\t\t.fitExtent([ \n\t\t\t\t[ margin.left, margin.top ], \n\t\t\t\t[ width - margin.right, height - margin.bottom ] \n\t\t\t], landData);\n\t\tconst initialScale = projection.scale();\n\t\tconst initialTranslate = projection.translate();\n\n\t\t // reset translate because screen size may have changed\n\t\t zoomHandler.scaleExtent([ \n\t\t\tinitialScale * 0.8, \n\t\t\tinitialScale * 10 \n\t\t]);\n\t\tSVG.call(\n\t\t\tzoomHandler.transform, \n\t\t\tzoomIdentity\n\t\t\t\t.translate(...initialTranslate)\n\t\t\t\t.scale(initialScale)\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"controls\">\n\t\t\t<div \n\t\t\t\tclassName=\"zoomin-btn button\"\n\t\t\t\ttooltip-text=\"Zoom in\"\n\t\t\t\tonClick={ handleClickZoomInBtn }\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t><BiZoomIn /></div>\n\t\t\t<div \n\t\t\t\tclassName=\"zoomout-btn button\"\n\t\t\t\ttooltip-text=\"Zoom out\"\n\t\t\t\tonClick={ handleClickZoomOutBtn }\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t><BiZoomOut /></div>\n\t\t\t<div \n\t\t\t\tclassName=\"reset-btn button\"\n\t\t\t\ttooltip-text=\"Reset zoom and pan\"\n\t\t\t\tonClick={ handleClickResetBtn }\n\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t><BiCurrentLocation /></div>\n\t\t</div>\n\t);\n}, (prevProps, nextProps) => {\n\tconst { \n\t\tSVGRef: prevSVGRef,\n\t\tlandData: prevLandData,\n\t\tprojectionState: { zoomHandler: prevZoomHandler } \n\t} = prevProps;\n\tconst { \n\t\tSVGRef: nextSVGRef,\n\t\tlandData: nextLandData,\n\t\tprojectionState: { zoomHandler: nextZoomHandler\t} \n\t} = nextProps;\n\n\treturn prevSVGRef === nextSVGRef &&\n\t\t   prevLandData === nextLandData &&\n\t\t   prevZoomHandler === nextZoomHandler;\n});","import { memo } from 'react';\nimport './VisualizationPaneDefs.css';\n\nexport const VisualizationPaneDefs = memo(({ linkPaneList }) => {\n\treturn (\n\t\t<defs>\n\t\t\t{ linkPaneList\n\t\t\t\t.filter(({ isDirected }) => isDirected)\n\t\t\t\t.map(({ linkType, color }) => \n\t\t\t\t\t<marker \n\t\t\t\t\t\tkey={ linkType } \n\t\t\t\t\t\tid={ `arrow-end-${ linkType }` } \n\t\t\t\t\t\trefX=\"5\" \n\t\t\t\t\t\trefY=\"3.5\" \n\t\t\t\t\t\tmarkerWidth=\"10\" \n\t\t\t\t\t\tmarkerHeight=\"10\" \n\t\t\t\t\t\tmarkerUnits=\"userSpaceOnUse\" \n\t\t\t\t\t\torient=\"auto\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path d=\"M 0 0 7 3.5 0 7\" style={{ fill: color }} />\n\t\t\t\t\t</marker>) }\n\t\t\t<marker \n\t\t\t\tid=\"arrow-end-outlier\"\n\t\t\t\trefX=\"5\" \n\t\t\t\trefY=\"3.5\" \n\t\t\t\tmarkerWidth=\"10\" \n\t\t\t\tmarkerHeight=\"10\" \n\t\t\t\tmarkerUnits=\"userSpaceOnUse\" \n\t\t\t\torient=\"auto\"\n\t\t\t>\n\t\t\t\t<path d=\"M 0 0 7 3.5 0 7\" />\n\t\t\t</marker>\n\t\t</defs>\n\t);\n});","import { memo } from 'react';\nimport './VisualizationPaneMap.css';\n\nexport const VisualizationPaneMap = memo(({ \n\tlandData, \n\tinteriorData, \n\tprojectionState \n}) => {\n\tconst { path } = projectionState;\n\n\treturn (\n\t\t<g className=\"map\">\n\t\t\t{ landData.features.map(feature => \n\t\t\t\t<path key=\"land\" className=\"land\" d={ path(feature) }></path>) }\n\t\t\t<path className=\"interiors\" d={ path(interiorData) } />\n\t\t</g>\n\t);\n});","import { line, curveNatural } from 'd3';\n\n// helpers\n\nconst findDistance = ([ x1, y1 ], [ x2, y2 ]) => \n\tMath.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\nconst findSlope = ([ x1, y1 ], [ x2, y2 ]) => (y1 - y2) / (x1 - x2);\n\nconst findMiddlePoint = ([ x1, y1 ], [ x2, y2 ]) => [ (x1 + x2) / 2, (y1 + y2) / 2 ];\n\nconst findUnitVector = s => {\n\tconst xu = Math.sqrt(1 / (1 + s * s));\n\tconst yu = s * xu;\n\n\treturn xu >= 0 ? [ xu, yu ] : [ -xu, -yu ]; // always points to right\n};\n\nconst findCentre = ([ x1, y1 ], [ x2, y2 ], r) => {\n\tconst xa = (x2 - x1) / 2;\n\tconst ya = (y2 - y1) / 2;\n\tconst x0 = x1 + xa;\n\tconst y0 = y1 + ya;\n\tconst a = Math.sqrt(xa * xa + ya * ya);\n\tconst b = Math.sqrt(r * r - a * a);\n\tconst xc = x0 + b * ya / a;\n\tconst yc = y0 - b * xa / a;\n\n\treturn [ xc, yc ];\n};\n\nconst findAngle = ([ x, y ], [ xc, yc ]) => {\n\tconst xAdjusted = x - xc;\n\tconst yAdjusted = y - yc;\n\n\tif (xAdjusted > 0 && yAdjusted === 0) return 0;\n\tif (xAdjusted > 0 && yAdjusted > 0) return Math.atan(yAdjusted / xAdjusted);\n\tif (xAdjusted < 0 && yAdjusted > 0) return Math.PI / 2 - Math.atan(yAdjusted / -xAdjusted) + Math.PI / 2;\n\tif (xAdjusted === 0 && yAdjusted > 0) return Math.PI / 2;\n\tif (xAdjusted < 0 && yAdjusted < 0) return Math.atan(-yAdjusted / -xAdjusted) + Math.PI;\n\tif (xAdjusted < 0 && yAdjusted === 0) return Math.PI;\n\tif (xAdjusted > 0 && yAdjusted < 0) return Math.PI / 2 - Math.atan(-yAdjusted / xAdjusted) + Math.PI / 2 * 3;\n\tif (xAdjusted === 0 && yAdjusted < 0) return Math.PI / 2 * 3\n};\n\nconst findCircleCircleIntersection = ([ a, b, r0 ], [ c, d, r1 ]) => {\n\tconst D = Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));\n\tconst r = 0.25 * Math.sqrt((D + r0 + r1) * (D + r0 - r1) * (D - r0 + r1) * (-D + r0 + r1));\n\n\tconst rDiff = (r0 * r0 - r1 * r1);\n\tconst DD = (D * D);\n\tconst xi1 = (a + c) / 2 + (c - a) * rDiff / (2 * DD) + 2 * (b - d) * r / DD; \n\tconst yi1 = (b + d) / 2 + (d - b) * rDiff / (2 * DD) - 2 * (a - c) * r / DD;\n\tconst xi2 = (a + c) / 2 + (c - a) * rDiff / (2 * DD) - 2 * (b - d) * r / DD; \n\tconst yi2 = (b + d) / 2 + (d - b) * rDiff / (2 * DD) + 2 * (a - c) * r / DD;\n\n\treturn [ [ xi1, yi1 ], [ xi2, yi2 ] ];\n};\n\n// main functions\n\nexport const directedLink = {\n\ttargetRadius: 15,\n\tselfLoopRadius: 20,\n\tselfLoopRadiusIncrement: 3,\n\tarcDivisor: 1.5,\n\tarcRadiusIncrement: 15,\n\n\tgeneratePathData(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst pointsAreSame = sourcePoint[0] === targetPoint[0] &&\n\t\t\t\t\t\t\t  sourcePoint[1] === targetPoint[1];\n\n\t\treturn pointsAreSame ? \n\t\t\tself.generateSelfLoop(sourcePoint, index) : \n\t\t\tself.generateArc(sourcePoint, targetPoint, index);\n\t},\n\tgenerateArc(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst arcDivisor = self.arcDivisor;\n\t\tconst radiusIncrement = self.arcRadiusIncrement;\n\n\t\t// find radius\n\t\tconst distance = findDistance(sourcePoint, targetPoint);\n\t\tconst radius = distance / arcDivisor + radiusIncrement * index;\n\t\tconst targetRadius = self.targetRadius >= distance ? distance / 2 : self.targetRadius;\n\n\t\t// find new target (some distance away from original)\n\t\tconst centre = findCentre(sourcePoint, targetPoint, radius);\n\t\tconst [ intersection1, intersection2 ] = findCircleCircleIntersection(\n\t\t\t[ ...centre, radius ], [ ...targetPoint, targetRadius ]\n\t\t);\n\t\tconst sourceAngle = findAngle(sourcePoint, centre);\n\t\tconst targetAngle = findAngle(targetPoint, centre);\n\t\tconst intersection1Angle = findAngle(intersection1, centre);\n\t\tconst intersection1BtwSourceAndTarget = \n\t\t\t(intersection1Angle >= sourceAngle && intersection1Angle <= targetAngle) ||\n\t\t\t(intersection1Angle >= targetAngle && intersection1Angle <= sourceAngle);\n\t\tconst newTargetPoint = (sourceAngle < Math.PI && targetAngle > Math.PI) ?\n\t\t\t\t\t\t\t   (intersection1BtwSourceAndTarget ? intersection2 : intersection1) :\n\t\t\t\t\t\t\t   (intersection1BtwSourceAndTarget ? intersection1 : intersection2);\n\n\t\t// return path\n\t\treturn `M ${ sourcePoint[0] } ${ sourcePoint[1] } ` + \n\t\t\t   `A ${ radius } ${ radius } 0 0 0 ${ newTargetPoint[0] } ${ newTargetPoint[1] }`;\n\t},\n\tgenerateSelfLoop(sourcePoint, index) {\n\t\tconst self = this;\n\t\tconst radiusIncrement = self.selfLoopRadiusIncrement;\n\t\tconst radius = self.selfLoopRadius + radiusIncrement * index;\n\n\t\t// find target\n\t\tconst centre = [ sourcePoint[0] + radius, sourcePoint[1] ];\n\t\tconst targetAngle = Math.PI + Math.PI * 2 - Math.PI / 8;\n\t\tconst targetPoint = [\n\t\t\tradius * Math.cos(targetAngle) + centre[0],\n\t\t\tradius * Math.sin(targetAngle) + centre[1]\n\t\t];\n\n\t\t// return path\n\t\treturn `M ${ sourcePoint[0] } ${ sourcePoint[1] } ` + \n\t\t\t   `A ${ radius } ${ radius } 0 1 0 ${ targetPoint[0] } ${ targetPoint[1] }`;\n\t}\n};\n\nexport const undirectedLink = {\n\tselfLoopRadius: 20,\n\tdistanceIncrement: 10,\n\tradiusIncrement: 3,\n\n\tgeneratePathData(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst pointsAreSame = sourcePoint[0] === targetPoint[0] &&\n\t\t\t\t\t\t\t  sourcePoint[1] === targetPoint[1];\n\n\t\tif (pointsAreSame)\n\t\t\treturn self.generateSelfLoop(sourcePoint, index);\n\n\t\tif (index === -1)\n\t\t\treturn self.generateStraightLine(sourcePoint, targetPoint);\n\n\t\treturn self.generateCurve(sourcePoint, targetPoint, index);\n\t},\n\tgenerateStraightLine(sourcePoint, targetPoint) {\n\t\treturn `M ${ sourcePoint[0] } ${ sourcePoint[1] } ` +\n\t\t\t   `L ${ targetPoint[0] } ${ targetPoint[1] }`;\n\t},\n\tgenerateCurve(sourcePoint, targetPoint, index) {\n\t\tconst self = this;\n\t\tconst distanceIncrement = self.distanceIncrement;\n\t\tconst pathGenerator = line().curve(curveNatural);\n\t\t\n\t\t// find unit vector\n\t\tconst middlePoint = findMiddlePoint(sourcePoint, targetPoint);\n\t\tconst sameX = sourcePoint[0] === targetPoint[0];\n\t\tconst sameY = sourcePoint[1] === targetPoint[1];\n\t\tlet unitVector = null;\n\n\t\tif (!sameX && !sameY) {\n\t\t\tconst perpendicularSlope = -1 / findSlope(sourcePoint, targetPoint);\n\t\t\tunitVector = findUnitVector(perpendicularSlope);\n\t\t}\n\t\telse if (sameX) unitVector = [ 1, 0 ];\n\t\telse if (sameY) unitVector = [ 0, 1 ];\n\t\t\n\t\t// find second point\n\t\tconst secondPoint = [ \n\t\t\tmiddlePoint[0] + unitVector[0] * distanceIncrement * index, \n\t\t\tmiddlePoint[1] + unitVector[1] * distanceIncrement * index, \n\t\t];\n\n\t\t// return curve\n\t\treturn pathGenerator([ sourcePoint, secondPoint, targetPoint ]);\n\t},\n\tgenerateSelfLoop(point, index) {\n\t\tconst self = this;\n\t\tconst radiusIncrement = self.radiusIncrement;\n\t\tconst radius = self.selfLoopRadius + radiusIncrement * index;\n\t\t\n\t\treturn `M ${ point[0] } ${ point[1] } ` + \n\t\t\t   `A ${ radius } ${ radius } 0 1 0 ${ point[0] - radius * 2 } ${ point[1] } ` +\n\t\t\t   `A ${ radius } ${ radius } 0 1 0 ${ point[0] } ${ point[1] }`;\n\t}\n};","import { memo } from 'react'; // reduce re-rendering on hover\nimport './VisualizationPaneLink.css';\n\nexport const VisualizationPaneLink = memo(({\n\tsourceID, \n\ttargetID, \n\tlinkType,\n\tcolor,\n\tisHighlighted,\n\tisOutlier,\n\tmarkerEnd,\n\tpathData,\n\tlinkRowList,\n\ttooltipAttrList,\n\tdataTableAttrList,\n\teventName,\n\tdispatch\n}) => {\n\tconst handleMouseMove = event => \n\t\tdispatch({ \n\t\t\ttype: 'MOUSE_MOVE_VIS_PANE_LINK',\n\t\t\ttop: event.clientY, \n\t\t\tleft: event.clientX,\n\t\t\tsourceID, targetID, linkType,\n\t\t\tlinkRowList, tooltipAttrList, eventName\n\t\t});\n\tconst handleMouseLeave = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_VIS_PANE_LINK' });\n\tconst handleClick = () => \n\t\tdispatch({ \n\t\t\ttype: 'CLICK_VIS_PANE_LINK',\n\t\t\tsourceID, targetID, \n\t\t\tlinkRowList, dataTableAttrList, eventName\n\t\t});\n\n\treturn (\n\t\t<g \n\t\t\tclassName=\"link\"\n\t\t\tonMouseMove={ handleMouseMove } \n\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t\tonClick={ handleClick }\n\t\t\tstyle={ isHighlighted ? \n\t\t\t\t{ opacity: 1 } : \n\t\t\t\t{ opacity: 0.05 }\n\t\t\t}\n\t\t>\n\t\t\t<path\n\t\t\t\tclassName=\"thick-line\"\n\t\t\t\td={ pathData }\n\t\t\t\tstyle={ isOutlier ? \n\t\t\t\t\t{ stroke: color, opacity: 0.6 } : \n\t\t\t\t\t{ stroke: color, opacity: 0.1 } \n\t\t\t\t}\n\t\t\t>\n\t\t\t</path>\n\t\t\t<path \n\t\t\t\tclassName=\"thin-line\" \n\t\t\t\td={ pathData }\n\t\t\t\tmarkerEnd={ markerEnd }\n\t\t\t\tstyle={ isOutlier ? null :\n\t\t\t\t\t{ stroke: color, opacity: 0.5 } \n\t\t\t\t}\n\t\t\t></path>\n\t\t</g>\n\t);\n});","import { directedLink, undirectedLink } from './pathGenerator';\nimport { VisualizationPaneLink } from './VisualizationPaneLink';\n\n// helpers\n\nexport const checkIfIsHighlighted = (linkObject, hoverState) => {\n\tconst { sourceID, targetID, linkType, isDirected } = linkObject;\n\tlet isHighlighted = true;\n\n\tif (hoverState.object === 'NODE' ||\n\t\thoverState.object === 'DETAIL_PANE_NODE')\n\t\tisHighlighted = sourceID === hoverState.data.nodeID || \n\t\t\t\t\t\ttargetID === hoverState.data.nodeID;\n\telse if (hoverState.object === 'LINK')\n\t\tisHighlighted = sourceID === hoverState.data.sourceID && \n\t\t\t\t\t\ttargetID === hoverState.data.targetID && \n\t\t\t\t\t\tlinkType === hoverState.data.linkType;\n\telse if (hoverState.object === 'DETAIL_PANE_LINK' && isDirected) \n\t\tisHighlighted = sourceID === hoverState.data.sourceID && \n\t\t\t\t\t\ttargetID === hoverState.data.targetID;\n\telse if (hoverState.object === 'DETAIL_PANE_LINK' && !isDirected)\n\t\tisHighlighted = (sourceID === hoverState.data.sourceID && targetID === hoverState.data.targetID) ||\n\t\t\t\t\t\t(sourceID === hoverState.data.targetID && targetID === hoverState.data.sourceID);\n\n\treturn isHighlighted;\n};\n\nconst generatePathData = (linkObject, countryIDToData, projection) => {\n\tconst { sourceID, targetID, isDirected, index } = linkObject;\n\tconst sourcePoint = projection([ \n\t\tcountryIDToData[sourceID].longitude, \n\t\tcountryIDToData[sourceID].latitude \n\t]);\n\tconst targetPoint = projection([ \n\t\tcountryIDToData[targetID].longitude, \n\t\tcountryIDToData[targetID].latitude \n\t]);\n\n\treturn isDirected ? \n\t\tdirectedLink.generatePathData(sourcePoint, targetPoint, index) : \n\t\tundirectedLink.generatePathData(sourcePoint, targetPoint, index);\n};\n\nconst generateMarkerEnd = linkObject => {\n\tconst { isDirected, isOutlier, linkType } = linkObject;\n\n\tif (isDirected) {\n\t\tif (isOutlier) return 'url(#arrow-end-outlier)';\n\t\tif (!isOutlier) return 'url(#arrow-end-' + linkType + ')';\n\t}\n\n\treturn null;\n};\n\nconst addSourceTargetIndex = visualizationPaneList => {\n\tconst sourceTargetIDToLinkRowList = {\n\t\tsameSourceAndTarget: [],\n\t\tdirected: [],\n\t\tundirected: []\n\t};\n\n\t// generate sourceTargetIDToLinkRowList\n\tfor (let linkObject of visualizationPaneList) {\t\n\t\tconst { sourceID, targetID, isDirected } = linkObject;\n\t\tconst sourceTargetID = `${ sourceID }-${ targetID }`;\n\n\t\tif (sourceID === targetID) {\n\t\t\tif (!(sourceTargetID in sourceTargetIDToLinkRowList.sameSourceAndTarget))\n\t\t\t\tsourceTargetIDToLinkRowList.sameSourceAndTarget[sourceTargetID] = [];\n\t\t\tsourceTargetIDToLinkRowList.sameSourceAndTarget[sourceTargetID].push(linkObject);\n\t\t}\n\t\telse if (!isDirected) {\n\t\t\tif (!(sourceTargetID in sourceTargetIDToLinkRowList.undirected))\n\t\t\t\tsourceTargetIDToLinkRowList.undirected[sourceTargetID] = [];\n\t\t\tsourceTargetIDToLinkRowList.undirected[sourceTargetID].push(linkObject);\n\t\t}\n\t\telse if (isDirected) {\n\t\t\tif (!(sourceTargetID in sourceTargetIDToLinkRowList.directed))\n\t\t\t\tsourceTargetIDToLinkRowList.directed[sourceTargetID] = [];\n\t\t\tsourceTargetIDToLinkRowList.directed[sourceTargetID].push(linkObject);\n\t\t}\n\t}\n\n\t// add index\n\tfor (let key in sourceTargetIDToLinkRowList)\n\t\tfor (let sourceTargetID in sourceTargetIDToLinkRowList[key]) {\n\t\t\tconst linkRowList = sourceTargetIDToLinkRowList[key][sourceTargetID];\n\n\t\t\tfor (let i = 0; i < linkRowList.length; i++)\n\t\t\t\tlinkRowList[i].index = i;\n\n\t\t\tif (linkRowList.length === 1 && key === 'undirected')\n\t\t\t\tlinkRowList[0].index = -1;\n\t\t}\n};\n\n// main functions\n\nconst genereteLinkList = (\n\tvisualizationPaneList,\n\tcountryIDToData,\n\tprojection,\n\thoverState\n) => {\n\taddSourceTargetIndex(visualizationPaneList);\n\n\t// add other data\n\tfor (let linkObject of visualizationPaneList) {\n\t\tconst { sourceID, targetID, linkType } = linkObject;\n\n\t\tlinkObject.key = `${ sourceID }-${ targetID }-${ linkType }`;\n\t\tlinkObject.isHighlighted = checkIfIsHighlighted(linkObject, hoverState);\n\t\tlinkObject.pathData = generatePathData(linkObject, countryIDToData, projection);\n\t\tlinkObject.markerEnd = generateMarkerEnd(linkObject);\n\t}\n\n\treturn visualizationPaneList;\n};\n\nexport const VisualizationPaneLinks = ({\n\tvisualizationPaneList,\n\tcountryIDToData,\n\tprojectionState,\n\thoverState,\n\tdispatch\n}) => {\n\tconst { projection } = projectionState;\n\tconst linkList = genereteLinkList(\n\t\tvisualizationPaneList, // convert to linkList\n\t\tcountryIDToData,\n\t\tprojection,\n\t\thoverState\t\t\n\t);\n\n\treturn (\n\t\t<g className=\"links\">\n\t\t\t{ linkList.map(linkObject => \n\t\t\t\t<VisualizationPaneLink\n\t\t\t\t\tkey={ linkObject.key }\n\t\t\t\t\tsourceID={ linkObject.sourceID }\n\t\t\t\t\ttargetID={ linkObject.targetID }\n\t\t\t\t\tlinkType={ linkObject.linkType } // for highlighting\n\t\t\t\t\tcolor={ linkObject.color }\n\t\t\t\t\tisHighlighted={ linkObject.isHighlighted }\n\t\t\t\t\tisOutlier={ linkObject.isOutlier }\n\t\t\t\t\tmarkerEnd={ linkObject.markerEnd }\n\t\t\t\t\tpathData={ linkObject.pathData }\n\t\t\t\t\tlinkRowList={ linkObject.linkRowList }\n\t\t\t\t\ttooltipAttrList={ linkObject.tooltip.attributeList }\n\t\t\t\t\tdataTableAttrList={ linkObject.dataTable.attributeList }\n\t\t\t\t\teventName={ linkObject.eventName }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>) }\n\t\t</g>\n\t);\n};","import { memo } from 'react';\nimport './VisualizationPaneLabel.css';\n\nexport const VisualizationPaneLabel = memo(({ \n\tID, x, y, \n\tdisplayName,\n\tisHighlighted,\n\tdispatch \n}) => {\n\tconst handleMouseEnter = () => \n\t\tdispatch({ type: \"MOUSE_ENTER_VIS_PANE_LABEL\", nodeID: ID });\n\tconst handleMouseLeave = () => \n\t\tdispatch({ type: \"MOUSE_LEAVE_VIS_PANE_LABEL\"  });\n\n\treturn (\n\t\t<g \n\t\t\tclassName=\"label\" \n\t\t\tonMouseEnter={ handleMouseEnter } \n\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t\tstyle={{ opacity: isHighlighted ? 1 : 0.1 }}\n\t\t>\n\t\t\t<text className=\"background\" x={ x } y={ y }>{ displayName }</text>\n\t\t\t<text className=\"text\" x={ x } y={ y }>{ displayName }</text>\n\t\t</g>\n\t);\n});","import { VisualizationPaneLabel } from './VisualizationPaneLabel';\nimport { checkIfIsHighlighted } from '../VisualizationPaneLinks/VisualizationPaneLinks';\n\nconst generateMetadata = (visualizationPaneList, hoverState) => {\n\tconst nodeIDSet = new Set();\n\tconst highlightedNodeIDSet = new Set();\n\n\tfor (let linkObject of visualizationPaneList) {\n\t\tconst { sourceID, targetID } = linkObject;\n\t\tconst isHighlighted = checkIfIsHighlighted(linkObject, hoverState);\n\n\t\tnodeIDSet.add(sourceID);\n\t\tnodeIDSet.add(targetID);\n\n\t\tif (isHighlighted) {\n\t\t\thighlightedNodeIDSet.add(sourceID);\n\t\t\thighlightedNodeIDSet.add(targetID);\n\t\t}\n\t}\n\n\treturn [ nodeIDSet, highlightedNodeIDSet ];\n};\n\nconst generateNodeList = (\n\tnodeIDSet, \n\thighlightedNodeIDSet, \n\tprojection, \n\tcountryIDToData\n) => {\n\tconst nodeList = [];\n\n\tfor (let nodeID of nodeIDSet) {\n\t\tconst displayName = countryIDToData[nodeID].displayName;\n\t\tconst isHighlighted = highlightedNodeIDSet.has(nodeID);\n\t\tconst [ x, y ] = projection([\n\t\t\tcountryIDToData[nodeID].longitude,\n\t\t\tcountryIDToData[nodeID].latitude\n\t\t]);\n\n\t\tnodeList.push({\n\t\t\tkey: nodeID,\n\t\t\tID: nodeID,\n\t\t\tx: x, y: y,\n\t\t\tdisplayName: displayName,\n\t\t\tisHighlighted: isHighlighted\n\t\t});\n\t}\n\n\treturn nodeList;\n};\n\nexport const VisualizationPaneLabels = ({ \n\tvisualizationPaneList,\n\tcountryIDToData,\n\tprojectionState,\n\thoverState,\n\tdispatch\n}) => {\n\tconst { projection } = projectionState;\n\tconst [ nodeIDSet, highlightedNodeIDSet ] = generateMetadata(visualizationPaneList, hoverState);\n\tconst nodeList = generateNodeList(nodeIDSet, highlightedNodeIDSet, projection, countryIDToData);\n\n\treturn (\n\t\t<g className=\"labels\">\n\t\t\t{ nodeList.map(nodeObject => \n\t\t\t\t<VisualizationPaneLabel\n\t\t\t\t\tkey={ nodeObject.key }\n\t\t\t\t\tID={ nodeObject.ID }\n\t\t\t\t\tx={ nodeObject.x }\n\t\t\t\t\ty={ nodeObject.y } \n\t\t\t\t\tdisplayName={ nodeObject.displayName }\n\t\t\t\t\tisHighlighted={ nodeObject.isHighlighted }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>) }\n\t\t</g>\n\t);\n};","export const TimelineSliderValueLabel = ({ \n\tchildren, \n\tvalue, \n\tclassName, \n\tdisabled \n}) => {\n\tconst labelClassName = className;\n\tconst labelStyle = {  \n\t\tfontSize: 16,\n\t\tfontWeight: 300,\n\t\tfontFamily: 'Quicksand',\n\t\tmarginBottom: 50,\n\t\tcolor: disabled ? null : '#3d3d3d'\n\t};\n\n\treturn (\n\t\t<span { ...children.props }>\n\t\t\t<span className={ labelClassName } style={ labelStyle } >{ value }</span>\n\t\t</span>\n\t);\n};","import { memo } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Slider, Input, Select, MenuItem } from '@material-ui/core';\nimport { TimelineSliderValueLabel } from './TimelineSliderValueLabel';\nimport './TimelineSlider.css';\n\nconst MySlider = withStyles({\n\troot: {\n\t\ttop: '50%',\n    \tleft: '50%',\n\t\twidth: 'calc(100% - 80px)',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tposition: 'absolute',\n    \ttransform: 'translate(-50%, -50%)',\n    \tpointerEvents: 'auto'\n\t},\n\trail: {\n\t\theight: 4,\n\t\topacity: 1,\n\t\tbackgroundColor: '#ebebeb'\n\t},\n\ttrack: {\n\t\theight: 4,\n\t\tbackgroundColor: 'lightgray'\n\t},\n\tmark: {\n\t\twidth: 4,\n\t\theight: 4,\n\t\tcolor: '#ebebeb',\n\t\ttransform: 'translateX(-50%)',\n\t\tborderRadius: '50%'\n\t},\n\tmarkLabel: {\n\t\tcolor: 'gray',\n\t\topacity: 0.7,\n\t\tfontWeight: 300,\n\t\tfontFamily: 'Quicksand'\n\t},\n\tthumb: {\n\t\tmarginTop: 0,\n\t\tmarginLeft: 0,\n\t\ttransform: 'translateX(-50%)',\n\t\tboxShadow: '0 0 6px 1px #b8b8b8',\n\t\tbackground: 'white',\n\t\t'&:hover': { boxShadow: '0 0 6px 3px #b8b8b8' },\n\t\t'&.MuiSlider-active': { boxShadow: '0 0 6px 3px #b8b8b8' },\n\t\t'&.Mui-focusVisible': { boxShadow: '0 0 6px 3px #b8b8b8' },\n\t\t'&.Mui-disabled': {\n\t\t\twidth: 12,\n    \t\theight: 12,\n    \t\tmarginTop: 0,\n    \t\tmarginLeft: 0\n\t\t}\n\t}\n})(Slider);\n\nconst MyInput = withStyles({\n\troot: {\n\t\tposition: 'absolute',\n    \ttop: '50%',\n    \tleft: '50%',\n    \ttransform: 'translate(-50%,calc(-50% + 22px))',\n\t\tpointerEvents: 'auto',\n\t\tfontFamily: 'Quicksand',\n\t\tfontSize: '0.875rem',\n\t\tfontWeight: 300,\n    \tcolor: 'gray',\n    \topacity: 0.7,\n    \ttransition: 'color 0.3s',\n    \t'&:hover': { color: 'black' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\t'&:focus': { backgroundColor: 'transparent' },\n\t\t'&.MuiSelect-select': { paddingRight: 0 }\n\t},\n\ticon: {\n\t\tcolor: 'currentColor',\n\t\tposition: 'static',\n\t\tfontSize: '1rem'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t}\n});\n\nexport const TimelineSlider = memo(({ timelineSliderState, dispatch }) => {\n\tconst classes = useStyles();\n\n\tconst handleChangeSlider = (event, value) => \n\t\tdispatch({ \n\t\t\ttype: 'CHANGE_TIMELINE_SLIDER', \n\t\t\tvalue: value \n\t\t});\n\tconst handleSelectYearAttribute = event => \n\t\tdispatch({ \n\t\t\ttype: 'SELECT_YEAR_ATTRIBUTE',\n\t\t\tyearAttribute: event.target.value\n\t\t});\n\n\treturn (\n\t\t<div className=\"timeline-slider-container\">\n\t\t\t<MySlider \n\t\t\t\tmin={ timelineSliderState.min }\n\t\t\t\tmax={ timelineSliderState.max } \n\t\t\t\tvalue={ timelineSliderState.value }\n\t\t\t\tstep={ 1 } valueLabelDisplay=\"on\"\n\t\t\t\tonChange={ handleChangeSlider }\n\t\t\t\tValueLabelComponent={ TimelineSliderValueLabel }\n\t\t\t\ttrack={ timelineSliderState.yearAttribute.type === 'range' ? 'normal' : false }\n\t\t\t\tdisabled={ timelineSliderState.yearAttribute.type === 'no-filter' }\n\t\t\t\tmarks={[\n\t\t\t\t\t{ value: timelineSliderState.min, label: timelineSliderState.min }, \n\t\t\t\t\t{ value: timelineSliderState.max, label: timelineSliderState.max }\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t<MySelect \n\t\t\t\tvalue={ timelineSliderState.yearAttribute }\n\t\t\t\tonChange={ handleSelectYearAttribute }\n\t\t\t\tinput={ <MyInput disableUnderline={ true } /> }\n\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t>\n\t\t\t\t{ timelineSliderState.yearAttributeList.map(yearAttribute =>\n\t\t\t\t\t<MyMenuItem key={ yearAttribute.key } value={ yearAttribute }>\n\t\t\t\t\t\t{ yearAttribute.displayName }\n\t\t\t\t\t</MyMenuItem>) }\n\t\t\t</MySelect>\n\t\t</div>\n\t);\n});","import './Loader.css';\n\nexport const Loader = ({ isLoading = true }) => {\n\treturn ( isLoading ? \n\t\t<div className=\"loader\">\n\t\t\t<div className=\"background\"></div>\n\t\t\t<div className=\"loader-container\">\n\t\t\t\t<div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n\t\t\t</div>\n\t\t</div> : null\n\t);\n};","import { useRef, memo } from 'react'; // memo to avoid re-rendering on data selection pane tooltip\nimport { useProjection } from './useVisualizationPane/useProjection';\nimport { VisualizationPaneLegend } from './VisualizationPaneLegend/VisualizationPaneLegend';\nimport { VisualizationPaneControls } from './VisualizationPaneControls/VisualizationPaneControls';\nimport { VisualizationPaneDefs } from './VisualizationPaneDefs/VisualizationPaneDefs';\nimport { VisualizationPaneMap } from './VisualizationPaneMap/VisualizationPaneMap';\nimport { VisualizationPaneLinks } from './VisualizationPaneLinks/VisualizationPaneLinks';\nimport { VisualizationPaneLabels } from './VisualizationPaneLabels/VisualizationPaneLabels';\nimport { TimelineSlider } from './TimelineSlider/TimelineSlider';\nimport { Loader } from '../widgets/Loader/Loader';\nimport './VisualizationPane.css';\n\nexport const VisualizationPane = memo(({\n\tlandData, \n\tinteriorData,\n\tcountryIDToData,\n\tlinkPaneList,\n\tvisualizationPaneList,\n\ttimelineSliderState,\n\thoverState,\n\tdetailPaneIsOpen,\n\tdispatch\n}) => {\n\tconst SVGRef = useRef(null);\n\tconst projectionState = useProjection(SVGRef, landData);\n\n\treturn (\n\t\t<div \n\t\t\tid=\"visualization-pane\" \n\t\t\tclassName={ \n\t\t\t\tdetailPaneIsOpen \n\t\t\t\t? \"collapsed loader-installed\" \n\t\t\t\t: \"expanded loader-installed\" \n\t\t\t}\n\t\t>\n\t\t\t<VisualizationPaneLegend \n\t\t\t\tlinkPaneList={ linkPaneList }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<VisualizationPaneControls \n\t\t\t\tSVGRef={ SVGRef }\n\t\t\t\tlandData={ landData }\n\t\t\t\tprojectionState={ projectionState }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<svg ref={ SVGRef }>\n\t\t\t\t{ projectionState.isLoading ? null : <> { /* render upon finish loading */ }\n\t\t\t\t\t<VisualizationPaneDefs \n\t\t\t\t\t\tlinkPaneList={ linkPaneList }\n\t\t\t\t\t/>\n\t\t\t\t\t<VisualizationPaneMap \n\t\t\t\t\t\tlandData={ landData }\n\t\t\t\t\t\tinteriorData={ interiorData }\n\t\t\t\t\t\tprojectionState={ projectionState } \n\t\t\t\t\t/>\n\t\t\t\t\t<VisualizationPaneLinks \n\t\t\t\t\t\tvisualizationPaneList={ visualizationPaneList }\n\t\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\t\tprojectionState={ projectionState }\n\t\t\t\t\t\thoverState={ hoverState }\n\t\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\t/>\n\t\t\t\t\t<VisualizationPaneLabels\n\t\t\t\t\t\tvisualizationPaneList={ visualizationPaneList }\n\t\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\t\tprojectionState={ projectionState }\n\t\t\t\t\t\thoverState={ hoverState }\n\t\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\t/>\n\t\t\t\t</> }\n\t\t\t</svg>\n\t\t\t<TimelineSlider \n\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<Loader \n\t\t\t\tisLoading={ projectionState.isLoading } \n\t\t\t/>\n\t\t</div>\n\t);\n}, (prevProps, nextProps) =>\n\tprevProps.landData === nextProps.landData &&\n\tprevProps.interiorData === nextProps.interiorData &&\n\tprevProps.countryIDToData === nextProps.countryIDToData &&\n\tprevProps.linkPaneList === nextProps.linkPaneList &&\n\tprevProps.visualizationPaneList === nextProps.visualizationPaneList &&\n\tprevProps.timelineSliderState === nextProps.timelineSliderState &&\n\tprevProps.detailPaneIsOpen === nextProps.detailPaneIsOpen && \n\tprevProps.dispatch === nextProps.dispatch && !(\n\t\t// visualization pane looks different for these hover events\n\t\tprevProps.hoverState.object === 'LINK' ||\n   \t\tnextProps.hoverState.object === 'LINK' ||\n   \t\tprevProps.hoverState.object === 'NODE' ||\n   \t\tnextProps.hoverState.object === 'NODE' ||\n   \t\tprevProps.hoverState.object === 'DETAIL_PANE_NODE' ||\n   \t\tnextProps.hoverState.object === 'DETAIL_PANE_NODE' ||\n   \t\tprevProps.hoverState.object === 'DETAIL_PANE_LINK' ||\n   \t\tnextProps.hoverState.object === 'DETAIL_PANE_LINK'\n\t)\n);","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\n\nconst MyInput = withStyles({ \n\troot: { \n\t\twidth: '100%',\n\t\tcolor: '#d3d3d3',\n    \tfontFamily: 'Quicksand',\n    \tfontSize: 20,\n    \t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '2px solid rgba(211, 211, 211, 0.6)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px solid rgba(211, 211, 211, 0.6)' },\n\t\t'&:after': { borderBottom: '2px solid rgba(168, 168, 168, 1)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({ \n\ticon: {\n\t\tcolor: '#d3d3d3'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13,\n\t\t'&.Mui-selected': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&.Mui-selected:hover': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.05)' }\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t\tcolor: '#d3d3d3',\n\t\tbackground: '#2d3138',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: 10,\n    \t\theight: 10,\n    \t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-track': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: 'rgb(0, 0, 0)'\n\t\t}\n\t}\n});\n\nexport const DetailPaneHeaderMainOption = ({\n\tmainOption, \n\tmainOptionList,\n\tdispatch\n}) => {\n\tconst classes = useStyles();\n\n\tconst handleSelectMainOption = event => \n\t\tdispatch({\n\t\t\ttype: 'SELECT_DETAIL_PANE_MAIN_OPTION',\n\t\t\toption: event.target.value\n\t\t});\n\n\treturn (\n\t\t<MySelect\n\t\t\tvalue={ mainOption }\n\t\t\tonChange={ handleSelectMainOption }\n\t\t\tinput={ <MyInput /> }\n\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t>\n\t\t\t{ mainOptionList.map(option => \n\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t</MySelect>\n\t);\n};","import { checkIsNetworkMetric } from '../../useInterfaceState/updateDetailPane';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport './DetailPaneHeaderSubOptions.css';\n\nconst MyInput = withStyles({\n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 600,\n\t    fontSize: 12,\n\t    color: '#d3d3d3',\n\t    \"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '2px solid rgba(211, 211, 211, 0.6)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px solid rgba(211, 211, 211, 0.6)' },\n\t\t'&:after': { borderBottom: '2px solid rgba(168, 168, 168, 1)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\tpadding: 0,\n\t\t'&.MuiSelect-select': { paddingRight: 0 }\n\t},\n\ticon: {\n\t\tdisplay: 'none'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 12,\n\t\t'&.Mui-selected': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&.Mui-selected:hover': { backgroundColor: 'rgba(255, 255, 255, 0.15)' },\n\t\t'&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.05)' }\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2,\n\t\tboxShadow: '0px 0px 6px 2px rgba(211,211,211,1)',\n\t\tcolor: '#d3d3d3',\n\t\tbackground: '#2d3138',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: 10,\n    \t\theight: 10,\n    \t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-track': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: '#2d3138'\n\t\t},\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tborderRadius: 2,\n    \t\tbackground: 'rgb(0, 0, 0)'\n\t\t}\n\t}\n});\n\nexport const DetailPaneHeaderSubOptions = ({\n\tmainOption,\n\tsubOption1, \n\tsubOption1List,\n\tsubOption2, \n\tsubOption2List,\n\tdispatch\n}) => {\n\tconst classes = useStyles();\n\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\n\tconst handleSelectSubOption = (event, key) => \n\t\tdispatch({\n\t\t\ttype: 'SELECT_DETAIL_PANE_SUB_OPTION',\n\t\t\tkey, option: event.target.value\n\t\t});\n\n\tif (isSelectedNetworkMetric)\n\t\treturn (\n\t\t\t<div className=\"sub-options\">\n\t\t\t\t(Modelling network as <MySelect\n\t\t\t\t\tvalue={ subOption1 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption1') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption1List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect> and <MySelect\n\t\t\t\t\tvalue={ subOption2 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption2') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption2List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect> graph)\n\t\t\t</div>\n\t\t);\n\n\tif (!isSelectedNetworkMetric)\n\t\treturn (\n\t\t\t<div className=\"sub-options\">\n\t\t\t\t(Between <MySelect\n\t\t\t\t\tvalue={ subOption1 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption1') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption1List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect> and <MySelect\n\t\t\t\t\tvalue={ subOption2 }\n\t\t\t\t\tonChange={ event => handleSelectSubOption(event, 'subOption2') }\n\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t>\n\t\t\t\t\t{ subOption2List.map(option =>\n\t\t\t\t\t\t<MyMenuItem key={ option } value={ option }>{ option }</MyMenuItem>) }\n\t\t\t\t</MySelect>)\n\t\t\t</div>\n\t\t);\n};","import { memo } from 'react';\nimport { DetailPaneHeaderMainOption } from './DetailPaneHeaderMainOption';\nimport { DetailPaneHeaderSubOptions } from './DetailPaneHeaderSubOptions';\nimport './DetailPaneHeader.css';\n\nexport const DetailPaneHeader = memo(({\n\tmainOption, \n\tmainOptionList,\n\tsubOption1, \n\tsubOption1List,\n\tsubOption2, \n\tsubOption2List,\n\tdispatch\n}) => {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<DetailPaneHeaderMainOption \n\t\t\t\tmainOption={ mainOption }\n\t\t\t\tmainOptionList={ mainOptionList }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<DetailPaneHeaderSubOptions \n\t\t\t\tmainOption={ mainOption }\n\t\t\t\tsubOption1={ subOption1 }\n\t\t\t\tsubOption1List={ subOption1List }\n\t\t\t\tsubOption2={ subOption2 }\n\t\t\t\tsubOption2List={ subOption2List }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</div>\n\t);\n});","import './SparkLine.css';\n\nexport const width = 120;\n\nexport const height = 30;\n\nexport const margin = {\n\ttop: 10,\n\tleft: 25,\n\tbottom: 10,\n\tright: 25\n};\n\nexport const SparkLine = ({\n\tstartYear, endYear,\n\tstartX, endX,\n\tstartY, endY,\n\tpathData\n}) => {\n\treturn (\n\t\t<svg>\n\t\t\t<g style={{ transform: `translate(${ margin.left }px, ${ margin.top }px)` }}>\n\t\t\t\t<path d={ pathData }></path>\n\t\t\t\t<text className=\"start year\" x={ startX } y={ startY } dx=\"-3\">{ startYear }</text>\n\t\t\t\t<text className=\"end year\" x={ endX } y={ endY } dx=\"3\">{ endYear }</text>\n\t\t\t</g>\n\t\t</svg>\n\t)\n};","import cytoscape from 'cytoscape';\nimport networkjs from 'networkjs';\nimport { scaleLinear, line, curveBasis, extent, format } from 'd3';\nimport { checkIsNetworkMetric } from '../../useInterfaceState/updateDetailPane';\nimport { width, height, margin } from './SparkLine';\n\n// helpers\n\nconst findMaxSetSize = nodeIDToSet => {\n\tlet maxSetSize = 0;\n\n\tfor (let nodeID in nodeIDToSet)\n\t\tif (nodeIDToSet[nodeID].size > maxSetSize)\n\t\t\tmaxSetSize = nodeIDToSet[nodeID].size;\n\n\treturn maxSetSize;\n};\n\nconst findMaxMetricValue = (graph, metricFunction) => {\n\tlet maxMetricValue = 0;\n\n\tgraph.nodes().forEach(node => {\n\t\tconst metricValue = metricFunction(node);\n\n\t\tif (metricValue > maxMetricValue)\n\t\t\tmaxMetricValue = metricValue;\n\t});\n\n\treturn maxMetricValue;\n};\n\nconst generateNodeIDSet = visualizationPaneList => {\n\tconst nodeIDSet = new Set();\n\n\tfor (let { sourceID, targetID } of visualizationPaneList) {\n\t\tnodeIDSet.add(sourceID);\n\t\tnodeIDSet.add(targetID);\n\t}\n\n\treturn nodeIDSet;\n};\n\nconst generateLinkIDSet = (visualizationPaneList, isDirected) => {\n\tconst linkIDSet = new Set();\n\n\tif (isDirected)\n\t\tfor (let { sourceID, targetID } of visualizationPaneList)\n\t\t\tlinkIDSet.add(`${ sourceID }-${ targetID }`);\n\n\telse if (!isDirected)\n\t\tfor (let { sourceID, targetID } of visualizationPaneList) {\n\t\t\tconst newSourceID = sourceID < targetID ? sourceID : targetID; // smaller one\n\t\t\tconst newTargetID = sourceID < targetID ? targetID : sourceID; // larger one\n\t\t\tlinkIDSet.add(`${ newSourceID }-${ newTargetID }`);\n\t\t}\n\n\treturn linkIDSet;\n};\n\nconst generateLinkIDToWeight = (visualizationPaneList, isDirected, isWeightDistance=false) => {\n\tconst linkIDToStatistics = {};\n\tconst linkIDToWeight = {};\n\n\tif (isDirected)\n\t\tfor (let { sourceID, targetID, linkRowList } of visualizationPaneList) {\n\t\t\tconst linkID = `${ sourceID }-${ targetID }`;\n\n\t\t\tif (!(linkID in linkIDToStatistics))\n\t\t\t\tlinkIDToStatistics[linkID] = { weightSum: 0, weightCount: 0 };\n\n\t\t\t// assume weighted graph (there is weight attribute for each row)\n\t\t\tfor (let { weight } of linkRowList)\n\t\t\t\tif (weight !== '') {\n\t\t\t\t\tlinkIDToStatistics[linkID].weightSum += +weight;\n\t\t\t\t\tlinkIDToStatistics[linkID].weightCount++;\n\t\t\t\t}\n\t\t}\n\n\telse if (!isDirected)\n\t\tfor (let { sourceID, targetID, linkRowList } of visualizationPaneList) {\n\t\t\tconst newSourceID = sourceID < targetID ? sourceID : targetID; // smaller one\n\t\t\tconst newTargetID = sourceID < targetID ? targetID : sourceID; // larger one\n\t\t\tconst linkID = `${ newSourceID }-${ newTargetID }`;\n\n\t\t\tif (!(linkID in linkIDToStatistics))\n\t\t\t\tlinkIDToStatistics[linkID] = { weightSum: 0, weightCount: 0 };\n\n\t\t\t// assume weighted graph (there is weight attribute for each row)\n\t\t\tfor (let { weight } of linkRowList)\n\t\t\t\tif (weight !== '') {\n\t\t\t\t\tlinkIDToStatistics[linkID].weightSum += +weight;\n\t\t\t\t\tlinkIDToStatistics[linkID].weightCount++;\n\t\t\t\t}\n\t\t}\n\n\tif (isWeightDistance)\n\t\tfor (let linkID in linkIDToStatistics)\n\t\t\tlinkIDToWeight[linkID] = linkIDToStatistics[linkID].weightCount === 0 ? null :\n\t\t\t\t1 / (linkIDToStatistics[linkID].weightSum / linkIDToStatistics[linkID].weightCount);\n\n\telse if (!isWeightDistance)\n\t\tfor (let linkID in linkIDToStatistics)\n\t\t\tlinkIDToWeight[linkID] = linkIDToStatistics[linkID].weightCount === 0 ? null :\n\t\t\t\tlinkIDToStatistics[linkID].weightSum / linkIDToStatistics[linkID].weightCount;\n\n\treturn linkIDToWeight;\n};\n\nconst generateCytoscapeGraph = (visualizationPaneList, isDirected, isWeighted, isWeightDistance=false) => {\n\tconst data = [];\n\tconst graph = cytoscape();\n\n\tif (!isDirected && !isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(visualizationPaneList);\n\t\tconst linkIDSet = generateLinkIDSet(visualizationPaneList, false);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tdata.push({ data: { source: sourceID, target: targetID } });\n\t\t}\n\t}\n\telse if (!isDirected && isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(visualizationPaneList);\n\t\tconst linkIDSet = generateLinkIDSet(visualizationPaneList, false);\n\t\tconst linkIDToWeight = generateLinkIDToWeight(visualizationPaneList, false, isWeightDistance);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ source, target ] = linkID.split('-');\n\t\t\tconst weight = linkIDToWeight[linkID];\n\n\t\t\tif (weight !== null)\n\t\t\t\tdata.push({ data: { source, target, weight } });\n\t\t}\n\t}\n\telse if (isDirected && !isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(visualizationPaneList);\n\t\tconst linkIDSet = generateLinkIDSet(visualizationPaneList, true);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tdata.push({ data: { source: sourceID, target: targetID } });\n\t\t}\n\t}\n\telse if (isDirected && isWeighted) {\n\t\tconst nodeIDSet = generateNodeIDSet(visualizationPaneList);\n\t\tconst linkIDSet = generateLinkIDSet(visualizationPaneList, true);\n\t\tconst linkIDToWeight = generateLinkIDToWeight(visualizationPaneList, true, isWeightDistance);\n\n\t\tfor (let nodeID of nodeIDSet)\n\t\t\tdata.push({ data: { id: nodeID } });\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ source, target ] = linkID.split('-');\n\t\t\tconst weight = linkIDToWeight[linkID];\n\n\t\t\tif (weight !== null)\n\t\t\t\tdata.push({ data: { source, target, weight } });\n\t\t}\n\t}\n\n\tgraph.add(data);\n\n\treturn graph;\n};\n\nconst generateNetworkJSGraph = (visualizationPaneList, isWeighted, isWeightDistance=false) => { // must be undirected\n\tconst linkList = [];\n\tconst graph = new networkjs.datastructures.Graph();\n\n\tif (isWeighted) {\n\t\tconst linkIDSet = generateLinkIDSet(visualizationPaneList, false);\n\t\tconst linkIDToWeight = generateLinkIDToWeight(visualizationPaneList, false, isWeightDistance);\n\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tconst weight = linkIDToWeight[linkID];\n\n\t\t\tif (weight !== null)\n\t\t\t\tlinkList.push([ sourceID, targetID, weight ]);\n\t\t}\n\n\t\tgraph.add_weighted_edges_from(linkList);\n\t}\n\telse if (!isWeighted) {\n\t\tconst linkIDSet = generateLinkIDSet(visualizationPaneList, false);\n\n\t\tfor (let linkID of linkIDSet) {\n\t\t\tconst [ sourceID, targetID ] = linkID.split('-');\n\t\t\tlinkList.push([ sourceID, targetID ]);\n\t\t}\n\n\t\tgraph.add_edges_from(linkList);\n\t}\n\n\treturn graph;\n};\n\n// generateTimeSeriesEntryList\n\nconst generateSourceTargetSet = visualizationPaneList => {\n\tconst sourceTargetIDSet = new Set();\n\n\tfor (let { sourceID, targetID, isDirected } of visualizationPaneList) {\n\t\tif (isDirected)\n\t\t\tsourceTargetIDSet.add(sourceID + '-' + targetID);\n\t\telse if (!isDirected) {\n\t\t\tsourceTargetIDSet.add(sourceID + '-' + targetID);\n\t\t\tsourceTargetIDSet.add(targetID + '-' + sourceID);\n\t\t}\n\t}\n\n\treturn sourceTargetIDSet;\n};\n\nconst filterIDToTimeSeriesList = (\n\tIDSet,\n\tIDToTimeSeriesList,\n\tstartYear, endYear\n) => {\n\tconst filteredIDToTimeSeriesList = {};\n\n\tfor (let ID of IDSet) {\n\t\tconst timeSeriesList = (ID in IDToTimeSeriesList) ? IDToTimeSeriesList[ID] : [];\n\t\t\t\n\t\tfilteredIDToTimeSeriesList[ID] = timeSeriesList\n\t\t\t.filter(({ year, value }) => \n\t\t\t\tyear >= startYear && year <= endYear && \n\t\t\t\tvalue !== null && value !== 0) // filter zero to avoid inf\n\t\t\t.sort((a, b) => a.year - b.year);\n\t}\n\n\treturn filteredIDToTimeSeriesList;\n};\n\nconst setYScaleDomain = (yScale, timeSeriesList) => {\n\tconst [ min, max ] = extent(timeSeriesList, d => d.value);\n\n\tyScale.domain([ min, max ]);\n};\n\nconst generateTimeSeriesEntryList = (\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tvisualizationPaneList,\n\tmainOption,\n\tsubOption1,\n\tsubOption2\n) => {\n\tconst entryList = [];\n\tconst { data: IDToTimeSeriesList, metadata: { isBilateral } } = \n\t\ttimeSeriesDataList.filter(({ metadata: { displayName } }) => displayName === mainOption)[0];\n\tconst IDSet = isBilateral ? generateSourceTargetSet(visualizationPaneList) : generateNodeIDSet(visualizationPaneList);\n\tconst startYear = +subOption1 < +subOption2 ? +subOption1 : +subOption2;\n\tconst endYear = +subOption1 < +subOption2 ? +subOption2 : +subOption1;\n\tconst filteredIDToTimeSeriesList = filterIDToTimeSeriesList(\n\t\tIDSet,\n\t\tIDToTimeSeriesList,\n\t\tstartYear, endYear\n\t);\n\tconst xScale = scaleLinear()\n\t\t.domain([ startYear, endYear ])\n\t\t.range([ 0, width - margin.left - margin.right ]);\n\tconst yScale = scaleLinear()\n\t\t.range([ height - margin.top - margin.bottom, 0 ]);\n\tconst pathGenerator = line()\n\t\t.curve(curveBasis)\n    \t.x(d => xScale(d.year))\n    \t.y(d => yScale(d.value));\n    const percentFormatter = format('.0%');\n\n    for (let ID in filteredIDToTimeSeriesList) {\n    \tif (filteredIDToTimeSeriesList[ID].length === 0) continue; // not include empty time series\n    \tsetYScaleDomain(yScale, filteredIDToTimeSeriesList[ID]); // set for each loop\n\n    \tconst timeSeriesList = filteredIDToTimeSeriesList[ID];\n    \tconst startValue = timeSeriesList[0].value;\n    \tconst endValue = timeSeriesList[timeSeriesList.length - 1].value;\n    \tconst percentChange = (endValue - startValue) / Math.abs(startValue);\n    \tconst contentText = percentChange > 0 \n\t\t\t\t\t\t  ? `+${ percentFormatter(percentChange) }` \n\t\t\t\t\t\t  : percentFormatter(percentChange);\n\n\t\tconst pathData = pathGenerator(timeSeriesList);\n\t\tconst startYear = timeSeriesList[0].year;\n\t\tconst endYear = timeSeriesList[timeSeriesList.length - 1].year;\n\t\tconst startX = xScale(startYear), endX = xScale(endYear);\n\t\tconst startY = yScale(startValue), endY = yScale(endValue);\n\n\t\tif (isBilateral) {\n\t\t\tconst [ sourceID, targetID ] = ID.split('-');\n\t\t\tconst sourceName = countryIDToData[sourceID].displayName;\n    \t\tconst targetName = countryIDToData[targetID].displayName;\n    \t\tconst titleText = `${ sourceName } → ${ targetName }`;\n\n    \t\tentryList.push({\n\t\t\t\tkey: ID,\n\t\t\t\titemData: { sourceID, targetID }, // for hovering\n\t\t\t\ttitleText, contentText,\n\t\t\t\tstartYear, endYear,\n\t\t\t\tstartX, endX,\n\t\t\t\tstartY, endY,\n\t\t\t\tpathData, percentChange // percentChange for sorting\n\t\t\t});\n\t\t}\n\t\telse if (!isBilateral) {\n\t\t\tconst nodeID = ID;\n\t\t\tconst titleText = countryIDToData[nodeID].displayName;\n\n\t\t\tentryList.push({\n\t\t\t\tkey: ID,\n\t\t\t\titemData: { nodeID }, // for hovering\n\t\t\t\ttitleText, contentText,\n\t\t\t\tstartYear, endYear,\n\t\t\t\tstartX, endX,\n\t\t\t\tstartY, endY,\n\t\t\t\tpathData, percentChange // percentChange for sorting\n\t\t\t});\n\t\t}\n    }\n\n\treturn entryList\n\t\t.sort((a, b) => b.percentChange - a.percentChange);\n};\n\n// generateDegreeEntryList (undirected + unweighted)\n\nconst generateNodeIDToConnectedNodeIDSet = visualizationPaneList => {\n\tconst nodeIDToConectedNodeIDSet = {};\n\n\tfor (let { sourceID, targetID } of visualizationPaneList) {\n\t\tif (!(sourceID in nodeIDToConectedNodeIDSet))\n\t\t\tnodeIDToConectedNodeIDSet[sourceID] = new Set();\n\t\tif (!(targetID in nodeIDToConectedNodeIDSet))\n\t\t\tnodeIDToConectedNodeIDSet[targetID] = new Set();\n\n\t\tnodeIDToConectedNodeIDSet[sourceID].add(targetID);\n\t\tnodeIDToConectedNodeIDSet[targetID].add(sourceID);\n\t}\n\n\treturn nodeIDToConectedNodeIDSet;\n};\n\nconst generateDegreeEntryList = (visualizationPaneList, countryIDToData) => {\n\tconst entryList = [];\n\tconst nodeIDToConectedNodeIDSet = generateNodeIDToConnectedNodeIDSet(visualizationPaneList);\n\tconst maxDegree = findMaxSetSize(nodeIDToConectedNodeIDSet);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxDegree ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToConectedNodeIDSet) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst degree = nodeIDToConectedNodeIDSet[nodeID].size;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: degree,\n\t\t\twidth: widthScale(degree)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateInDegreeEntryList (directed + unweighted)\n\nconst generateNodeIDToSourceIDSet = visualizationPaneList => {\n\tconst nodeIDToSourceIDSet = {};\n\n\tfor (let { sourceID, targetID } of visualizationPaneList) {\n\t\tif (!(targetID in nodeIDToSourceIDSet))\n\t\t\tnodeIDToSourceIDSet[targetID] = new Set();\n\n\t\tnodeIDToSourceIDSet[targetID].add(sourceID);\n\t}\n\n\treturn nodeIDToSourceIDSet;\n};\n\nconst generateInDegreeEntryList = (visualizationPaneList, countryIDToData) => {\n\tconst entryList = [];\n\tconst nodeIDToSourceIDSet = generateNodeIDToSourceIDSet(visualizationPaneList);\n\tconst maxInDegree = findMaxSetSize(nodeIDToSourceIDSet);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxInDegree ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToSourceIDSet) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst inDegree = nodeIDToSourceIDSet[nodeID].size;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: inDegree,\n\t\t\twidth: widthScale(inDegree)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateOutDegreeEntryList (directed + unweighted)\n\nconst generateNodeIDToTargetIDSet = visualizationPaneList => {\n\tconst nodeIDToTargetIDSet = {};\n\n\tfor (let { sourceID, targetID } of visualizationPaneList) {\n\t\tif (!(sourceID in nodeIDToTargetIDSet))\n\t\t\tnodeIDToTargetIDSet[sourceID] = new Set();\n\n\t\tnodeIDToTargetIDSet[sourceID].add(targetID);\n\t}\n\n\treturn nodeIDToTargetIDSet;\n};\n\nconst generateOutDegreeEntryList = (visualizationPaneList, countryIDToData) => {\n\tconst entryList = [];\n\tconst nodeIDToTargetIDSet = generateNodeIDToTargetIDSet(visualizationPaneList);\n\tconst maxOutDegree = findMaxSetSize(nodeIDToTargetIDSet);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxOutDegree ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToTargetIDSet) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst outDegree = nodeIDToTargetIDSet[nodeID].size;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: outDegree,\n\t\t\twidth: widthScale(outDegree)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateClosenessEntryList\n\nconst generateClosenessEntryList = (visualizationPaneList, countryIDToData, isDirected, isWeighted) => {\n\tconst entryList = [];\n\tconst graph = generateCytoscapeGraph(visualizationPaneList, isDirected, isWeighted, true);\n\tconst option = !isWeighted ? { directed: isDirected } : { directed: isDirected, weight: e => e.data('weight') };\n\tconst closenessFunction = graph.$().ccn(option);\n\tconst maxCloseness = findMaxMetricValue(graph, closenessFunction.closeness);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxCloseness ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tgraph.nodes().forEach(node => {\n\t\tconst nodeID = node.data().id;\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst closeness = closenessFunction.closeness(node);\n\t\tconst contextText = Math.round((closeness + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(closeness)\n\t\t});\n\t});\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateBetweennessEntryList\n\nconst generateBetweennessEntryList = (visualizationPaneList, countryIDToData, isDirected, isWeighted) => {\n\tconst entryList = [];\n\tconst graph = generateCytoscapeGraph(visualizationPaneList, isDirected, isWeighted, true);\n\tconst option = !isWeighted ? { directed: isDirected } : { directed: isDirected, weight: e => e.data('weight') };\n\tconst betweennessFunction = graph.$().bc(option);\n\tconst maxBetweenness = findMaxMetricValue(graph, betweennessFunction.betweennessNormalized);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxBetweenness ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tgraph.nodes().forEach(node => {\n\t\tconst nodeID = node.data().id;\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst betweenness = betweennessFunction.betweennessNormalized(node);\n\t\tconst contextText = Math.round((betweenness + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(betweenness)\n\t\t});\n\t});\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateEigenvectorEntryList (undirected)\n\nconst findMaxEigenvector = nodeIDToEigenvector => {\n\tlet maxEigenvector = 0;\n\n\tfor (let nodeID in nodeIDToEigenvector) {\n\t\tconst eigenvector = nodeIDToEigenvector[nodeID];\n\n\t\tif (eigenvector > maxEigenvector)\n\t\t\tmaxEigenvector = eigenvector;\n\t}\n\n\treturn maxEigenvector;\n};\n\nconst generateEigenvectorEntryList = (visualizationPaneList, countryIDToData, isWeighted) => {\n\tconst entryList = [];\n\tconst graph = generateNetworkJSGraph(visualizationPaneList, isWeighted);\n\tconst nodeIDToEigenvector = networkjs.algorithms.centrality.eigenvector_centrality(graph);\n\tconst maxEigenvector = findMaxEigenvector(nodeIDToEigenvector);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxEigenvector ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tfor (let nodeID in nodeIDToEigenvector) {\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst eigenvector = nodeIDToEigenvector[nodeID];\n\t\tconst contextText = Math.round((eigenvector + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(eigenvector)\n\t\t});\n\t}\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generatePageRankEntryList (directed + unweighted)\n\nconst generatePageRankEntryList = (visualizationPaneList, countryIDToData) => {\n\tconst entryList = [];\n\tconst graph = generateCytoscapeGraph(visualizationPaneList, true, false);\n\tconst pageRankFunction = graph.$().pageRank();\n\tconst maxPageRank = findMaxMetricValue(graph, pageRankFunction.rank);\n\tconst widthScale = scaleLinear()\n\t\t.domain([ 0, maxPageRank ])\n\t\t.range([ 0, 100 ]); // 0% to 100%\n\n\tgraph.nodes().forEach(node => {\n\t\tconst nodeID = node.data().id;\n\t\tconst nodeName = countryIDToData[nodeID].displayName;\n\t\tconst pageRank = pageRankFunction.rank(node);\n\t\tconst contextText = Math.round((pageRank + Number.EPSILON) * 100000) / 100000;\n\n\t\tentryList.push({\n\t\t\tkey: nodeID,\n\t\t\titemData: { nodeID }, // for hovering\n\t\t\ttitleText: nodeName,\n\t\t\tcontentText: contextText,\n\t\t\twidth: widthScale(pageRank)\n\t\t});\n\t});\n\n\treturn entryList\n\t\t.sort((a, b) => b.width - a.width);\n};\n\n// generateEntryList\n\nexport const generateEntryList = (\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tvisualizationPaneList,\n\tmainOption,\n\tsubOption1,\n\tsubOption2\n) => {\n\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isSelectedTimeSeries = !isSelectedNetworkMetric;\n\tconst isDirected = subOption1 === 'directed';\n\tconst isWeighted = subOption2 === 'weighted';\n\n\tif (isSelectedTimeSeries)\n\t\treturn generateTimeSeriesEntryList(countryIDToData, timeSeriesDataList, visualizationPaneList, mainOption, subOption1, subOption2);\n\tif (mainOption === 'Degree')\n\t\treturn generateDegreeEntryList(visualizationPaneList, countryIDToData);\n\tif (mainOption === 'In Degree')\n\t\treturn generateInDegreeEntryList(visualizationPaneList, countryIDToData);\n\tif (mainOption === 'Out Degree')\n\t\treturn generateOutDegreeEntryList(visualizationPaneList, countryIDToData);\n\tif (mainOption === 'Closeness')\n\t\treturn generateClosenessEntryList(visualizationPaneList, countryIDToData, isDirected, isWeighted);\n\tif (mainOption === 'Betweenness')\n\t\treturn generateBetweennessEntryList(visualizationPaneList, countryIDToData, isDirected, isWeighted);\n\tif (mainOption === 'Eigenvector')\n\t\treturn generateEigenvectorEntryList(visualizationPaneList, countryIDToData, isWeighted);\n\tif (mainOption === 'PageRank')\n\t\treturn generatePageRankEntryList(visualizationPaneList, countryIDToData);\n\n\treturn [];\n};\n\nexport const generateKEntryList = (entryList, k) => {\n\tconst topEntryList = entryList.length <= k * 2 ? entryList\n\t\t\t\t\t   : entryList.filter((entryObject, index) => index >= 0 && index < k);\n\tconst bottomEntryList = entryList.length <= k * 2 ? []\n\t\t\t\t\t\t  : entryList.filter((entryObject, index) => index >= entryList.length - k && index <= entryList.length - 1);\n\n\treturn [ topEntryList, bottomEntryList ];\n};","import $ from 'jquery';\nimport './DetailPaneContentItem.css';\n\nexport const DetailPaneContentItem = ({\n\ttitleText,\n\tcontentText,\n\tclassName,\n\titemData,\n\tvisualization,\n\tdispatch\n}) => {\n\tconst handleMouseLeave = () => dispatch({ type: 'MOUSE_LEAVE_DETAIL_PANE_ITEM' });\n\tconst handleMouseEnter = event => dispatch({ \n\t\ttype: 'MOUSE_ENTER_DETAIL_PANE_ITEM',\n\t\titemEl: $(event.target).closest('.item')[0],\n\t\ttitleEl: $(event.target).closest('.item').find('.title')[0],\n\t\ttitleText, itemData\n\t});\n\n\treturn (\n\t\t<div \n\t\t\tclassName={ `${ className } item` }\n\t\t\tonMouseEnter={ handleMouseEnter }\n\t\t\tonMouseLeave={ handleMouseLeave }\n\t\t>\n\t\t\t<div className=\"title\">{ titleText }</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<span className=\"text\">{ contentText }</span>\n\t\t\t\t{ visualization }\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import './Bar.css';\n\nexport const Bar = ({ width, percent = true }) => {\n\tif (percent)\n\t\treturn <div className=\"bar\" style={{ width: `${ width }%` }}></div>;\n\telse if (!percent)\n\t\treturn <div className=\"bar\" style={{ width: width }}></div>\n};","import { memo } from 'react';\nimport { checkIsNetworkMetric } from '../../useInterfaceState/updateDetailPane';\nimport { generateEntryList, generateKEntryList } from './generateEntryList';\nimport { DetailPaneContentItem } from './DetailPaneContentItem';\nimport { SparkLine } from './SparkLine';\nimport { Bar } from './Bar';\nimport { BiDetail } from \"react-icons/bi\";\nimport './DetailPaneContent.css';\n\nexport const DetailPaneContent = memo(({\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tvisualizationPaneList,\n\tmainOption,\n\tsubOption1,\n\tsubOption2,\n\tdispatch\n}) => {\n\tconst isSelectedNetworkMetric = checkIsNetworkMetric(mainOption);\n\tconst isSelectedTimeSeries = !isSelectedNetworkMetric;\n\tconst entryList = generateEntryList(\t\t\n\t\tcountryIDToData,\n\t\ttimeSeriesDataList,\n\t\tvisualizationPaneList,\n\t\tmainOption,\n\t\tsubOption1,\n\t\tsubOption2\n\t);\n\tconst [ \n\t\ttopEntryList, \n\t\tbottomEntryList \n\t] = generateKEntryList(entryList, isSelectedTimeSeries ? 5 : 10);\n\n\tconst handleClickDetailButton = () => dispatch({\n\t\ttype: 'CLICK_DETAIL_PANE_DETAIL_BUTTON',\n\t\tmainOption, subOption1, subOption2, entryList\n\t});\n\n\tlet timeSeriesClassName = null;\n\n\tif (isSelectedTimeSeries) {\n\t\tconst timeSeriesDataObject = timeSeriesDataList\n\t\t\t.filter(({ metadata: { displayName } }) => displayName === mainOption)[0];\n\t\tconst isBilateral = timeSeriesDataObject.metadata.isBilateral;\n\n\t\ttimeSeriesClassName = isBilateral ? 'bilateral' : 'non-bilateral';\n\t}\n\n\tif (entryList.length === 0)\n\t\treturn null;\n\n\treturn (\n\t\t<div className={ `content ${ timeSeriesClassName }`}>\n\t\t\t{ topEntryList.map(entryObject => \n\t\t\t\t<DetailPaneContentItem \n\t\t\t\t\tkey={ entryObject.key }\n\t\t\t\t\ttitleText={ entryObject.titleText }\n\t\t\t\t\tcontentText={ entryObject.contentText }\n\t\t\t\t\tclassName={ isSelectedTimeSeries ? 'spark-line' : 'bar' }\n\t\t\t\t\titemData={ entryObject.itemData }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\tvisualization={ isSelectedTimeSeries ? \n\t\t\t\t\t\t<SparkLine\n\t\t\t\t\t\t\tstartYear={ entryObject.startYear }\n\t\t\t\t\t\t\tendYear={ entryObject.endYear }\n\t\t\t\t\t\t\tstartX={ entryObject.startX }\n\t\t\t\t\t\t\tendX={ entryObject.endX }\n\t\t\t\t\t\t\tstartY={ entryObject.startY }\n\t\t\t\t\t\t\tendY={ entryObject.endY }\n\t\t\t\t\t\t\tpathData={ entryObject.pathData }\n\t\t\t\t\t\t/> : \n\t\t\t\t\t\t<Bar width={ entryObject.width } /> }\n\t\t\t\t/>) }\n\n\t\t\t{ bottomEntryList.length > 0 ? <div className=\"seperator\">⋮</div> : null }\n\n\t\t\t{ bottomEntryList.map(entryObject => \n\t\t\t\t<DetailPaneContentItem \n\t\t\t\t\tkey={ entryObject.key }\n\t\t\t\t\ttitleText={ entryObject.titleText }\n\t\t\t\t\tcontentText={ entryObject.contentText }\n\t\t\t\t\tclassName={ isSelectedTimeSeries ? 'spark-line' : 'bar' }\n\t\t\t\t\titemData={ entryObject.itemData }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t\tvisualization={ isSelectedTimeSeries ? \n\t\t\t\t\t\t<SparkLine\n\t\t\t\t\t\t\tstartYear={ entryObject.startYear }\n\t\t\t\t\t\t\tendYear={ entryObject.endYear }\n\t\t\t\t\t\t\tstartX={ entryObject.startX }\n\t\t\t\t\t\t\tendX={ entryObject.endX }\n\t\t\t\t\t\t\tstartY={ entryObject.startY }\n\t\t\t\t\t\t\tendY={ entryObject.endY }\n\t\t\t\t\t\t\tpathData={ entryObject.pathData }\n\t\t\t\t\t\t/> : \n\t\t\t\t\t\t<Bar width={ entryObject.width } /> }\n\t\t\t\t/>) }\n\n\t\t\t<div \n\t\t\t\tclassName=\"see-full-list-button\" \n\t\t\t\tonClick={ handleClickDetailButton }\n\t\t\t><BiDetail />Click to see full list</div>\n\t\t</div>\n\t);\n});","import $ from 'jquery';\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from \"react-icons/fa\";\nimport { memo } from 'react'; // avoid re-rendering on tooltip \nimport { DetailPaneHeader } from './DetailPaneHeader/DetailPaneHeader';\nimport { DetailPaneContent } from './DetailPaneContent/DetailPaneContent';\nimport './DetailPane.css';\n\nexport const DetailPane = memo(({\n\tcountryIDToData,\n\ttimeSeriesDataList,\n\tvisualizationPaneList,\n\tdetailPaneState,\n\tdispatch\n}) => {\n\tconst {\n\t\tisOpen,\n\t\tmainOption,\n\t\tmainOptionList,\n\t\tsubOption1,\n\t\tsubOption1List,\n\t\tsubOption2,\n\t\tsubOption2List\n\t} = detailPaneState;\n\n\tconst handleClickButton = () => \n\t\tdispatch({ type: 'TOGGLE_DETAIL_PANE' });\n\tconst handleMouseLeaveButton = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_DETAIL_PANE_BUTTON' });\n\tconst handleMouseEnterButton = event => \n\t\tdispatch({ \n\t\t\ttype: 'MOUSE_ENTER_DETAIL_PANE_BUTTON', \n\t\t\tbuttonEl: $(event.target).closest('.button')[0]\n\t\t});\n\n\tif (isOpen)\n\t\treturn (\n\t\t\t<div id=\"detail-pane\" className=\"expanded\">\n\t\t\t\t<div className=\"expand-and-collapse button\" onClick={ handleClickButton }>\n\t\t\t\t\t<FaAngleDoubleRight />\n\t\t\t\t</div>\n\t\t\t\t<DetailPaneHeader\n\t\t\t\t\tmainOption={ mainOption }\n\t\t\t\t\tmainOptionList={ mainOptionList }\n\t\t\t\t\tsubOption1={ subOption1 }\n\t\t\t\t\tsubOption1List={ subOption1List }\n\t\t\t\t\tsubOption2={ subOption2 }\n\t\t\t\t\tsubOption2List={ subOption2List }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t\t<DetailPaneContent \n\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\ttimeSeriesDataList={ timeSeriesDataList }\n\t\t\t\t\tvisualizationPaneList={ visualizationPaneList }\n\t\t\t\t\tmainOption={ mainOption }\n\t\t\t\t\tsubOption1={ subOption1 }\n\t\t\t\t\tsubOption2={ subOption2 }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\n\tif (!isOpen)\n\t\treturn (\n\t\t\t<div id=\"detail-pane\" className=\"collapsed\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"expand-and-collapse button\" \n\t\t\t\t\tonClick={ handleClickButton }\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t><FaAngleDoubleLeft /></div>\n\t\t\t</div>\n\t\t);\n});","import { memo } from 'react';\nimport { FaTimes } from \"react-icons/fa\";\nimport { BiSearch } from \"react-icons/bi\";\nimport './SearchWindowHeader.css';\n\nexport const SearchWindowHeader = memo(({\n\tsourceState,\n\ttargetState,\n\tsearchDispatch,\n\tinterfaceDispatch\n}) => {\n\tconst { \n\t\tquery: sourceQuery,\n\t\tlist: sourceList,\n\t\tlistTop: sourceListTop,\n\t\tlistLeft: sourceListLeft\n\t} = sourceState;\n\tconst { \n\t\tquery: targetQuery,\n\t\tlist: targetList,\n\t\tlistTop: targetListTop,\n\t\tlistLeft: targetListLeft\n\t} = targetState;\n\n\tconst handleClickCloseButton = () => interfaceDispatch({ type: 'CLOSE_SEARCH_WINDOW' });\n\tconst handleChangeSourceInput = event => searchDispatch({ type: 'INPUT_SOURCE_QUERY', inputEl: event.target });\n\tconst handleChangeTargetInput = event => searchDispatch({ type: 'INPUT_TARGET_QUERY', inputEl: event.target });\n\tconst handleClickSearchButton = () => searchDispatch({ type: 'START_SEARCHING' });\n\tconst handleClickCountryName = (sourceOrTarget, countryName) => \n\t\tsearchDispatch({\n\t\t\ttype: 'CLICK_COUNTRY_NAME',\n\t\t\tsourceOrTarget: sourceOrTarget,\n\t\t\tcountryName: countryName\n\t\t});\n\tconst handleMouseEnterCountryName = (sourceOrTarget, countryName) => \n\t\tsearchDispatch({\n\t\t\ttype: 'MOUSE_ENTER_COUNTRY_NAME',\n\t\t\tsourceOrTarget: sourceOrTarget,\n\t\t\tcountryName: countryName\n\t\t});\n\tconst handleMounseLeaveCountryName = (sourceOrTarget, countryName) => \n\t\tsearchDispatch({\n\t\t\ttype: 'MOUSE_LEAVE_COUNTRY_NAME',\n\t\t\tsourceOrTarget: sourceOrTarget,\n\t\t\tcountryName: countryName\n\t\t});\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t\n\t\t\t<div className=\"search-bar\">\n\t\t\t\t<label className=\"source input-box\">\n\t\t\t\t\t<div className=\"label\">SOURCE</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tvalue={ sourceQuery }\n\t\t\t\t\t\tonChange={ handleChangeSourceInput }\n\t\t\t\t\t\tonFocus={ handleChangeSourceInput }\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label className=\"target input-box\">\n\t\t\t\t\t<div className=\"label\">TARGET</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tvalue={ targetQuery }\n\t\t\t\t\t\tonChange={ handleChangeTargetInput }\n\t\t\t\t\t\tonFocus={ handleChangeTargetInput }\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"search-button\" \n\t\t\t\t\tonClick={ handleClickSearchButton }\n\t\t\t\t><BiSearch /></div>\n\t\t\t</div>\n\n\t\t\t<FaTimes \n\t\t\t\tclassName=\"close-button\"\n\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t/>\n\n\t\t\t{ sourceList.length === 0 ? null :\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"source country-list\" \n\t\t\t\t\tstyle={{ top: sourceListTop, left: sourceListLeft }}\n\t\t\t\t>{ sourceList.map(({ countryName, selected }) => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ countryName }\n\t\t\t\t\t\tclassName={ selected ? \"source country-name selected\" : \"source country-name\" }\n\t\t\t\t\t\tonClick={ () => { handleClickCountryName('source', countryName) } }\n\t\t\t\t\t\tonMouseEnter={ () => { handleMouseEnterCountryName('source', countryName) } }\n\t\t\t\t\t\tonMouseLeave={ () => { handleMounseLeaveCountryName('source', countryName) } }\n\t\t\t\t\t>{ countryName }</div>) }\n\t\t\t\t</div> }\n\n\t\t\t{ targetList.length === 0 ? null :\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"target country-list\" \n\t\t\t\t\tstyle={{ top: targetListTop, left: targetListLeft }}\n\t\t\t\t>{ targetList.map(({ countryName, selected }) => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ countryName }\n\t\t\t\t\t\tclassName={ selected ? \"target country-name selected\" : \"target country-name\" }\n\t\t\t\t\t\tonClick={ () => { handleClickCountryName('target', countryName) } }\n\t\t\t\t\t\tonMouseEnter={ () => { handleMouseEnterCountryName('target', countryName) } }\n\t\t\t\t\t\tonMouseLeave={ () => { handleMounseLeaveCountryName('target', countryName) } }\n\t\t\t\t\t>{ countryName }</div>) }\n\t\t\t\t</div> }\n\n\t\t</div>\n\t);\n});","import { format } from 'd3';\nimport './LineChart.css';\n\nexport const bilateralLineChart = {\n\twidth: 180,\n\theight: 60,\n\tmargin: {\n\t\ttop: 10,\n\t\tleft: 30,\n\t\tbottom: 10,\n\t\tright: 30\n\t}\n};\n\nexport const nonBilateralLineChart = {\n\twidth: 370,\n\theight: 70,\n\tmargin: {\n\t\ttop: 10,\n\t\tleft: 40,\n\t\tbottom: 10,\n\t\tright: 40\n\t}\n};\n\nexport const LineChart = ({ isBilateral, data }) => {\n\tconst percentFormatter = format('.0%');\n\n\tif (isBilateral) {\n\t\tconst { margin } = bilateralLineChart;\n\t\tconst { \n\t\t\ttitleText, \n\t\t\tstartYear, endYear, \n\t\t\tstartX, endX, \n\t\t\tstartY, endY, \n\t\t\tpathData, percentChange \n\t\t} = data;\n\t\tconst formattedPercentChange = percentChange > 0 \n\t\t\t\t\t\t\t\t\t ? `+${ percentFormatter(percentChange) }`\n\t\t\t\t\t\t\t\t\t : percentFormatter(percentChange);\n\n\t\treturn (\n\t\t\t<div className=\"line-chart\">\n\t\t\t\t<div className=\"title\">{ titleText }</div>\n\t\t\t\t<div className=\"percent-change\">{ formattedPercentChange }</div>\n\t\t\t\t<svg>\n\t\t\t\t\t<g style={{ transform: `translate(${ margin.left }px, ${ margin.top }px)` }}>\n\t\t\t\t\t\t<path d={ pathData }></path>\n\t\t\t\t\t\t<text className=\"start year\" x={ startX } y={ startY } dx=\"-3\">{ startYear }</text>\n\t\t\t\t\t\t<text className=\"end year\" x={ endX } y={ endY } dx=\"3\">{ endYear }</text>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!isBilateral) {\n\t\tconst { margin } = nonBilateralLineChart;\n\t\tconst { \n\t\t\tcountryName, metricName, \n\t\t\tstartValue, endValue, \n\t\t\tstartYear, endYear, \n\t\t\tstartX, endX, \n\t\t\tstartY, endY, \n\t\t\tpathData, percentChange \n\t\t} = data;\n\t\tconst verb = percentChange >= 0 ? 'increased' : 'decreased';\n\t\tconst roundedStartValue = Math.round((startValue + Number.EPSILON) * 1000) / 1000;\n\t\tconst roundedEndValue = Math.round((endValue + Number.EPSILON) * 1000) / 1000;\n\t\tconst formattedPercentChange = percentChange > 0 \n\t\t\t\t\t\t\t\t\t ? `+${ percentFormatter(percentChange) }`\n\t\t\t\t\t\t\t\t\t : percentFormatter(percentChange);\n\n\t\treturn (\n\t\t\t<div className=\"line-chart\">\n\t\t\t\t<div className=\"description\">\n\t\t\t\t\tThe { metricName } of <span>{ countryName }</span> { verb } from <span>{ roundedStartValue }\n\t\t\t\t\t</span> in <span>{ startYear }</span> to <span>{ roundedEndValue }</span> in <span>{ endYear }\n\t\t\t\t\t</span> (<span>{ formattedPercentChange }</span>).\n\t\t\t\t</div>\n\t\t\t\t<svg>\n\t\t\t\t\t<g style={{ transform: `translate(${ margin.left }px, ${ margin.top }px)` }}>\n\t\t\t\t\t\t<path d={ pathData }></path>\n\t\t\t\t\t\t<text className=\"start year\" x={ startX } y={ startY } dx=\"-5\">{ startYear }</text>\n\t\t\t\t\t\t<text className=\"end year\" x={ endX } y={ endY } dx=\"5\">{ endYear }</text>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n};","import { LineChart } from './LineChart';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport './TimeSeriesSection.css';\n\nconst MyInput = withStyles({\n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 15,\n\t\t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '1px dashed rgba(0, 0, 0, 1)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' },\n\t\t'&:after': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\tpadding: 0,\n\t\t'&.MuiSelect-select': { paddingRight: 0 },\n\t\t'&:focus': { backgroundColor: 'transparent' }\n\t},\n\ticon: {\n\t\tdisplay: 'none'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2\n\t}\n});\n\nexport const TimeSeriesSection = ({ \n\tsectionHeaderText, \n\tisBilateral, \n\tlineChartList,\n\tfilterYearList,\n\tfilterStartYear,\n\tfilterEndYear,\n\thandleChangeStartYear,\n\thandleChangeEndYear\n}) => {\n\tconst classes = useStyles();\n\n\tif (isBilateral)\n\t\treturn (\n\t\t\t<div className=\"time-series-section section bilateral\">\n\t\t\t\t<div className=\"header\">{ sectionHeaderText }</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t{ lineChartList.map(lineChartObject => \n\t\t\t\t\t\t\t<LineChart \n\t\t\t\t\t\t\t\tkey={ lineChartObject.key }\n\t\t\t\t\t\t\t\tisBilateral={ isBilateral }\n\t\t\t\t\t\t\t\tdata={ lineChartObject }\n\t\t\t\t\t\t\t/>) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"dummy-for-padding\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: Between <MySelect \n\t\t\t\t\t\tvalue={ filterStartYear }\n\t\t\t\t\t\tonChange={ handleChangeStartYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect> and <MySelect \n\t\t\t\t\t\tvalue={ filterEndYear }\n\t\t\t\t\t\tonChange={ handleChangeEndYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\tif (!isBilateral)\n\t\treturn (\n\t\t\t<div className=\"time-series-section section non-bilateral\">\n\t\t\t\t<div className=\"header\">{ sectionHeaderText }</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t{ lineChartList.map(lineChartObject => \n\t\t\t\t\t\t<LineChart \n\t\t\t\t\t\t\tkey={ lineChartObject.key }\n\t\t\t\t\t\t\tisBilateral={ isBilateral }\n\t\t\t\t\t\t\tdata={ lineChartObject }\n\t\t\t\t\t\t/>) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: Between <MySelect \n\t\t\t\t\t\tvalue={ filterStartYear }\n\t\t\t\t\t\tonChange={ handleChangeStartYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect> and <MySelect \n\t\t\t\t\t\tvalue={ filterEndYear }\n\t\t\t\t\t\tonChange={ handleChangeEndYear }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterYearList.map(year => \n\t\t\t\t\t\t\t<MyMenuItem key={ year } value={ year }>{ year }</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n};","import $ from 'jquery'; \nimport 'jquery-ui/ui/widgets/resizable';\nimport { useState, useEffect } from 'react';\nimport Clusterize from 'clusterize.js';\n\nconst widthConstraintRules = {};\n\nconst generateWidthConstraintCSS = () => {\n\tlet widthConstraintCSS = '';\n\n\tfor (let tableName in widthConstraintRules)\n\t\tfor (let columnIndex in widthConstraintRules[tableName])\n\t\t\twidthConstraintCSS += `.${ tableName }.data-table .row > .cell:nth-child(${ columnIndex }) { \n\t\t\t\twidth: ${ widthConstraintRules[tableName][columnIndex] }px;\n\t\t\t}`;\n\n\treturn widthConstraintCSS;\n};\n\nexport const useClusterize = (tableName, tableRowList) => {\n\tconst [ clusterizeObject, initClusterizeObject ] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst handleStartResize = (event, ui) => {\n\t\t\tif (!(tableName in widthConstraintRules))\n\t\t\t\twidthConstraintRules[tableName] = {};\n\n\t\t\tui.element.find('.ui-resizable-handle')\n\t\t\t\t.css('background', 'DodgerBlue');\n\t\t};\n\t\tconst handleEndResize = (event, ui) => {\n\t\t\tconst columnIndex = ui.element.index() + 1;\n\t\t\tconst newWidthAfterResizing = ui.size.width;\n\t\t\tlet widthConstraintCSS = '';\n\n\t\t\twidthConstraintRules[tableName][columnIndex] = newWidthAfterResizing;\n\t\t\twidthConstraintCSS = generateWidthConstraintCSS();\n\t\t\t$('#table-resize-style').html(widthConstraintCSS);\n\n\t\t\tui.element.find('.ui-resizable-handle')\n\t\t\t\t.css('background', '');\n\t\t};\n\n\t\t// init table on mount\n\t\tinitClusterizeObject(new Clusterize({\n\t\t\tscrollId: `${ tableName }-scroll-area`,\n\t  \t\tcontentId: `${ tableName }-content-area`\n\t\t}));\n\t\t$(`.${ tableName }.data-table > .header > .row > .cell`).resizable({\n\t\t\thandles: 'e',\n\t\t\tstart: handleStartResize,\n\t\t\tstop: handleEndResize\n\t\t});\n\n\t\t// remove css on unmount\n\t\treturn () => { \n\t\t\tlet widthConstraintCSS = '';\n\t\t\tdelete widthConstraintRules[tableName];\n\t\t\twidthConstraintCSS = generateWidthConstraintCSS();\n\t\t\t$('#table-resize-style').html(widthConstraintCSS);\n\t\t}\n\t}, [ tableName ]);\n\n\tuseEffect(() => {\n\t\tif (clusterizeObject === null)\n\t\t\treturn;\n\n\t\tclusterizeObject.update(tableRowList);\n\t}, [ clusterizeObject, tableRowList ]);\n};","import $ from 'jquery'; \nimport { useClusterize } from './useClusterize';\nimport './DataTable.css';\n\nexport const DataTable = ({\n\ttableName,\n\tattributeList,\n\ttableRowList\n}) => {\n\tconst handleScroll = event => {\n\t\tconst tableScrollLeft = $(event.target).scrollLeft();\n\t\t$(`.${ tableName }.data-table .header .row`).scrollLeft(tableScrollLeft);\n\t};\n\n\tuseClusterize(tableName, tableRowList);\n\n\treturn (\n\t\t<div className={ `${ tableName } data-table` }>\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ attributeList.map(attributeName => \n\t\t\t\t\t\t<div key={ attributeName } className=\"cell\">\n\t\t\t\t\t\t\t<div className=\"label\">{ attributeName }</div>\n\t\t\t\t\t\t</div>) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclassName=\"content\" \n\t\t\t\tid={ `${ tableName }-scroll-area` }\n\t\t\t\tonScroll={ handleScroll }\n\t\t\t>\n\t\t\t\t<div id={ `${ tableName }-content-area` } className=\"content-wrapper\"></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import { DataTable } from '../../widgets/DataTable/DataTable';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Input, Select, MenuItem } from '@material-ui/core';\nimport './DataTableSection.css';\n\nconst MyInput = withStyles({\n\troot: {\n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 14,\n\t\t\"&:not(.Mui-disabled):hover::before\": {\n    \t\tborderBottom: '1px dashed rgba(0, 0, 0, 1)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' },\n\t\t'&:after': { borderBottom: '1px dashed rgba(0, 0, 0, 0.42)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({\n\troot: { \n\t\tpadding: 0,\n\t\t'&.MuiSelect-select': { paddingRight: 0 },\n\t\t'&:focus': { backgroundColor: 'transparent' }\n\t},\n\ticon: {\n\t\tdisplay: 'none'\n\t}\n})(Select);\n\nconst MyMenuItem = withStyles({\n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nconst useStyles = makeStyles({\n\tpaper: {\n\t\tborderRadius: 2\n\t}\n});\n\nexport const DataTableSection = ({\n\ttableName,\n\ttableHeaderText,\n\tattributeList,\n\ttableRowList,\n\tfilterAttrNameList,\n\tfilterAttrValueList,\n\tfilterAttrName,\n\tfilterAttrValue,\n\thandleChangeAttrName,\n\thandleChangeAttrValue\n}) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className=\"data-table-section section\">\n\t\t\t<div className=\"header\">{ tableHeaderText }</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<DataTable\n\t\t\t\t\ttableName={ tableName }\n\t\t\t\t\tattributeList={ attributeList }\n\t\t\t\t\ttableRowList={ tableRowList }\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t{ filterAttrValueList.length === 0 ? \n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: <MySelect\n\t\t\t\t\t\tvalue={ filterAttrName }\n\t\t\t\t\t\tonChange={ handleChangeAttrName }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterAttrNameList.map(option => \n\t\t\t\t\t\t\t<MyMenuItem key={ option.key } value={ option }>\n\t\t\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t\t\t</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div> : \n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\tFILTER: <MySelect\n\t\t\t\t\t\tvalue={ filterAttrName }\n\t\t\t\t\t\tonChange={ handleChangeAttrName }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterAttrNameList.map(option => \n\t\t\t\t\t\t\t<MyMenuItem key={ option.key } value={ option }>\n\t\t\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t\t\t</MyMenuItem>) }\n\t\t\t\t\t</MySelect> equals <MySelect\n\t\t\t\t\t\tvalue={ filterAttrValue }\n\t\t\t\t\t\tonChange={ handleChangeAttrValue }\n\t\t\t\t\t\tinput={ <MyInput /> }\n\t\t\t\t\t\tMenuProps={{ classes: { paper: classes.paper } }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ filterAttrValueList.map(option => \n\t\t\t\t\t\t\t<MyMenuItem key={ option.key } value={ option }>\n\t\t\t\t\t\t\t\t{ option.displayName }\n\t\t\t\t\t\t\t</MyMenuItem>) }\n\t\t\t\t\t</MySelect>\n\t\t\t\t</div> }\n\n\t\t</div>\n\t);\n};","import { memo } from 'react';\nimport { TimeSeriesSection } from './TimeSeriesSection';\nimport { DataTableSection } from './DataTableSection';\nimport './SearchWindowContent.css';\n\nconst generateSearchResultDescription = ({\n\tinferredSourceName,\n\tinferredTargetName,\n\ttimeSeriesSearchResultList,\n\tlinkSearchResultList\n}) => {\n\tconst hasSearchQueries = inferredSourceName !== null || inferredTargetName !== null;\n\tconst hasSearchResults = timeSeriesSearchResultList.length > 0 || linkSearchResultList.length > 0;\n\n\tif (!hasSearchQueries) {\n\t\treturn 'PLEASE ENTER SEARCH QUERIES';\n\t}\n\tif (hasSearchQueries && !hasSearchResults) {\n\t\tif (inferredSourceName !== null && inferredTargetName !== null)\n\t\t\treturn `CANNOT FIND SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() } \n\t\t\t\t\tAND TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName === null && inferredTargetName !== null)\n\t\t\treturn `CANNOT FIND SEARCH RESULTS FOR TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName !== null && inferredTargetName === null)\n\t\t\treturn `CANNOT FIND SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() }`;\n\t}\n\tif (hasSearchQueries && hasSearchResults) {\n\t\tif (inferredSourceName !== null && inferredTargetName !== null)\n\t\t\treturn `SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() } \n\t\t\t\t\tAND TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName === null && inferredTargetName !== null)\n\t\t\treturn `SEARCH RESULTS FOR TARGET: ${ inferredTargetName.toUpperCase() }`;\n\t\tif (inferredSourceName !== null && inferredTargetName === null)\n\t\t\treturn `SEARCH RESULTS FOR SOURCE: ${ inferredSourceName.toUpperCase() }`;\n\t}\n};\n\nexport const SearchWindowContent = memo(({ \n\tcontentState,\n\tsearchDispatch\n}) => {\n\tif (contentState === null)\n\t\treturn null;\n\n\telse if (contentState !== null) {\n\t\tconst { timeSeriesSearchResultList, linkSearchResultList } = contentState;\n\n\t\tconst handleChangeYear = (key, startYear, endYear) => \n\t\t\tsearchDispatch({\n\t\t\t\ttype: 'FILTER_TIME_SERIES_SEARCH_RESULT',\n\t\t\t\tsearchResultKey: key,\n\t\t\t\tfilterStartYear: startYear,\n\t\t\t\tfilterEndYear: endYear\n\t\t\t});\n\t\tconst handleChangeAttrName = (key, filterAttrName) => \n\t\t\tsearchDispatch({\n\t\t\t\ttype: 'SELECT_FILTER_ATTRIBUTE_NAME',\n\t\t\t\tsearchResultKey: key,\n\t\t\t\tfilterAttrName: filterAttrName\n\t\t\t});\n\t\tconst handleChangeAttrValue = (key, filterAttrName, filterAttrValue) => \n\t\t\tsearchDispatch({\n\t\t\t\ttype: 'SELECT_FILTER_ATTRIBUTE_VALUE',\n\t\t\t\tsearchResultKey: key,\n\t\t\t\tfilterAttrName: filterAttrName,\n\t\t\t\tfilterAttrValue: filterAttrValue\n\t\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"content\">\n\n\t\t\t\t<div className=\"result-description\">\n\t\t\t\t\t{ generateSearchResultDescription(contentState) }\n\t\t\t\t</div>\n\n\t\t\t\t{ timeSeriesSearchResultList.map(({\n\t\t\t\t\tkey,\n\t\t\t\t\tsectionHeaderText,\n\t\t\t\t\tisBilateral,\n\t\t\t\t\tlineChartList,\n\t\t\t\t\tfilterYearList,\n\t\t\t\t\tfilterStartYear,\n\t\t\t\t\tfilterEndYear\n\t\t\t\t}) => \n\t\t\t\t\t<TimeSeriesSection \n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\tsectionHeaderText={ sectionHeaderText }\n\t\t\t\t\t\tisBilateral={ isBilateral }\n\t\t\t\t\t\tlineChartList={ lineChartList }\n\t\t\t\t\t\tfilterYearList={ filterYearList }\n\t\t\t\t\t\tfilterStartYear={ filterStartYear }\n\t\t\t\t\t\tfilterEndYear={ filterEndYear }\n\t\t\t\t\t\thandleChangeStartYear={ e => { handleChangeYear(key, e.target.value, filterEndYear) } }\n\t\t\t\t\t\thandleChangeEndYear={ e => { handleChangeYear(key, filterStartYear, e.target.value) } }\n\t\t\t\t\t/>) }\n\n\t\t\t\t{ linkSearchResultList.map(({\n\t\t\t\t\tkey,\n\t\t\t\t\ttableName,\n\t\t\t\t\ttableHeaderText,\n\t\t\t\t\tattributeList,\n\t\t\t\t\ttableRowList,\n\t\t\t\t\tfilterAttrNameList,\n\t\t\t\t\tfilterAttrValueList,\n\t\t\t\t\tfilterAttrName,\n\t\t\t\t\tfilterAttrValue\n\t\t\t\t}) => \n\t\t\t\t\t<DataTableSection \n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\ttableName={ tableName }\n\t\t\t\t\t\ttableHeaderText={ tableHeaderText }\n\t\t\t\t\t\tattributeList={ attributeList }\n\t\t\t\t\t\ttableRowList={ tableRowList }\n\t\t\t\t\t\tfilterAttrNameList={ filterAttrNameList }\n\t\t\t\t\t\tfilterAttrValueList={ filterAttrValueList }\n\t\t\t\t\t\tfilterAttrName={ filterAttrName }\n\t\t\t\t\t\tfilterAttrValue={ filterAttrValue }\n\t\t\t\t\t\thandleChangeAttrName={ e => { handleChangeAttrName(key, e.target.value) } }\n\t\t\t\t\t\thandleChangeAttrValue={ e => { handleChangeAttrValue(key, filterAttrName, e.target.value) } }\n\t\t\t\t\t/>) }\n\n\t\t\t</div>\n\t\t);\n\t}\n});","import levenshtein from 'js-levenshtein';\n\nconst COUNTRY_LIST_LENGTH = 5;\n\nexport const computeWordDistance = (countryName, query) => {\n\tconst queryIsStart = countryName.indexOf(query) === 0;\n\tlet wordDistance = null;\n\n\tif (countryName.length > query.length) {\n\t\tif (queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / countryName.length - 1;\n\t\telse if (!queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / countryName.length;\n\t}\n\telse if (countryName.length <= query.length) {\n\t\tif (queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / query.length - 1;\n\t\telse if (!queryIsStart)\n\t\t\twordDistance = levenshtein(countryName, query) / query.length;\n\t}\n\n\treturn wordDistance;\n};\n\nexport const searchCountryListByQuery = (countryNameList, query) => {\n\tif (query === '')\n\t\treturn [];\n\n\tconst lowerCaseQuery = query.toLowerCase().replace(/\\s+/g, '');\n\tconst similarCountryList = []; // { countryName, wordDistance }\n\n\tfor (let countryName of countryNameList) {\n\t\tconst lowerCaseCountryName = countryName.toLowerCase().replace(/\\s+/g, '');\n\n\t\tsimilarCountryList.push({\n\t\t\tcountryName: countryName,\n\t\t\twordDistance: computeWordDistance(lowerCaseCountryName, lowerCaseQuery),\n\t\t\tselected: false\n\t\t});\n\t}\n\n\treturn similarCountryList\n\t\t.sort((a, b) => a.wordDistance - b.wordDistance)\n\t\t.filter((d, i) => i < COUNTRY_LIST_LENGTH);\n};\n\nexport const getCurrSelectionIndex = countryList => {\n\tfor (let i = 0; i < countryList.length; i++)\n\t\tif (countryList[i].selected)\n\t\t\treturn i;\n\n\treturn null;\n};\n\nexport const getPrevSelectionIndex = currSelectionIndex => {\n\tif (currSelectionIndex === null)\n\t\treturn COUNTRY_LIST_LENGTH - 1;\n\tif (currSelectionIndex === 0)\n\t\treturn COUNTRY_LIST_LENGTH - 1;\n\n\treturn currSelectionIndex - 1;\n};\n\nexport const getNextSelectionIndex = currSelectionIndex => {\n\tif (currSelectionIndex === null)\n\t\treturn 0;\n\tif (currSelectionIndex === COUNTRY_LIST_LENGTH - 1)\n\t\treturn 0;\n\n\treturn currSelectionIndex + 1;\n}\n\nexport const getSelectedCountryName = countryList => {\n\tfor (let { countryName, selected } of countryList)\n\t\tif (selected) return countryName;\n\n\treturn null;\n};","import { scaleLinear, line, curveBasis, extent } from 'd3';\nimport { bilateralLineChart, nonBilateralLineChart } from '../SearchWindowContent/LineChart';\nimport { computeWordDistance } from './updateSearchWindowHeader';\n\n// helpers\n\nconst setYScaleDomain = (yScale, timeSeriesList) => {\n\tconst [ min, max ] = extent(timeSeriesList, d => d.value);\n\n\tyScale.domain([ min, max ]);\n};\n\nexport const findMostSimilarCountry = (countryList, query) => {\n\tif (query === '')\n\t\treturn { ID: null, countryName: null };\n\n\tconst lowerCaseQuery = query.toLowerCase().replace(/\\s+/g, '');\n\tconst sortedCountryList = []; // { ID, countryName, wordDistance }\n\n\tfor (let { name: countryName, ID } of countryList) {\n\t\tconst lowerCaseCountryName = countryName.toLowerCase().replace(/\\s+/g, '');\n\t\tconst wordDistance = computeWordDistance(lowerCaseCountryName, lowerCaseQuery);\n\t\tsortedCountryList.push({ ID, countryName, wordDistance });\n\t}\n\n\treturn sortedCountryList\n\t\t.sort((a, b) => a.wordDistance - b.wordDistance)[0];\n};\n\nconst generateTableRowList = (\n\tfilteredLinkRowList,\n\tdataTableAttrList,\n\tcountryIDToData\n) => {\n\tconst tableRowList = [];\n\n\tfor (let linkRowObject of filteredLinkRowList) {\n\t\tlet rowString = '';\n\n\t\tfor (let { attributeName, isID } of dataTableAttrList) {\n\t\t\tlet attributeValue = linkRowObject[attributeName];\n\n\t\t\tif (attributeValue === '')\n\t\t\t\tattributeValue = 'null';\n\t\t\telse if (isID)\n\t\t\t\tattributeValue = countryIDToData[attributeValue].displayName;\n\n\t\t\trowString += `<div class=\"cell\">${ attributeValue }</div>`;\n\t\t}\n\n\t\trowString = `<div class=\"row\">${ rowString }</div>`;\n\t\ttableRowList.push(rowString);\n\t}\n\n\treturn tableRowList;\n};\n\n/* generateTimeSeriesSearchResultList */\n\nconst filterIDToTimeSeriesList = (\n\tquerySourceID, queryTargetID, \n\tIDToTimeSeriesList,\n\tisBilateral\n) => {\n\tconst filteredIDToTimeSeriesList = {};\n\n\tif (isBilateral)\n\t\tfor (let sourceTargetID in IDToTimeSeriesList) {\n\t\t\tconst [ currSourceID, currTargetID ] = sourceTargetID.split('-');\n\t\t\tconst sourceIsMatched = querySourceID === null || querySourceID === currSourceID;\n\t\t\tconst targetIsMatched = queryTargetID === null || queryTargetID === currTargetID;\n\n\t\t\tif (sourceIsMatched && targetIsMatched)\n\t\t\t\tfilteredIDToTimeSeriesList[sourceTargetID] = IDToTimeSeriesList[sourceTargetID]\n\t\t\t\t\t.filter(({ value }) => value !== null && value !== 0); // filter zero to avoid inf\n\t\t}\n\n\telse if (!isBilateral) {\n\t\tif (querySourceID !== null && querySourceID in IDToTimeSeriesList)\n\t\t\tfilteredIDToTimeSeriesList[querySourceID] = IDToTimeSeriesList[querySourceID]\n\t\t\t\t.filter(({ value }) => value !== null && value !== 0); // filter zero to avoid inf\n\n\t\tif (queryTargetID !== null && queryTargetID in IDToTimeSeriesList)\n\t\t\tfilteredIDToTimeSeriesList[queryTargetID] = IDToTimeSeriesList[queryTargetID]\n\t\t\t\t.filter(({ value }) => value !== null && value !== 0); // filter zero to avoid inf\n\t}\n\n\treturn filteredIDToTimeSeriesList;\n};\n\nexport const generateTimeSeriesSearchResultList = (\n\tsourceID, targetID, \n\tcountryIDToData,\n\ttimeSeriesDataList\n) => {\n\tif (sourceID === null && targetID === null)\n\t\treturn [];\n\n\tconst timeSeriesSearchResultList = []; \n\t/*  \n\t\tsectionHeaderText, \n\t\tisBilateral, \n\t\tlineChartList,\n\t\tfilterYearList,\n\t\tfilterStartYear, \n\t\tfilterEndYear\n\t*/\n\n\tfor (let timeSeriesDataObject of timeSeriesDataList) {\n\t\tconst lineChartList = [];\n\t\tconst IDToTimeSeriesList = timeSeriesDataObject.data;\n\t\tconst { isBilateral, yearList, displayName, metricName } = timeSeriesDataObject.metadata;\n\t\tconst { width, height, margin } = isBilateral ? bilateralLineChart : nonBilateralLineChart;\n\t\tconst filteredIDToTimeSeriesList = filterIDToTimeSeriesList(\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\tIDToTimeSeriesList,\n\t\t\tisBilateral\n\t\t);\n\t\tconst xScale = scaleLinear()\n\t\t\t.domain([ yearList[0], yearList[yearList.length - 1] ])\n\t\t\t.range([ 0, width - margin.left - margin.right ]);\n\t\tconst yScale = scaleLinear()\n\t\t\t.range([ height - margin.top - margin.bottom, 0 ]);\n\t\tconst pathGenerator = line()\n\t\t\t.curve(curveBasis)\n\t    \t.x(d => xScale(d.year))\n\t    \t.y(d => yScale(d.value));\n\n\t    // create lineChartList\n\t    for (let ID in filteredIDToTimeSeriesList) {\n\t    \tif (filteredIDToTimeSeriesList[ID].length === 0) continue; // not include empty time series\n\t    \tsetYScaleDomain(yScale, filteredIDToTimeSeriesList[ID]); // set for each loop\n\n\t    \tconst timeSeriesList = filteredIDToTimeSeriesList[ID];\n\t    \tconst startValue = timeSeriesList[0].value;\n    \t\tconst endValue = timeSeriesList[timeSeriesList.length - 1].value;\n    \t\tconst percentChange = (endValue - startValue) / Math.abs(startValue);\n\n    \t\tconst pathData = pathGenerator(timeSeriesList);\n\t\t\tconst startYear = timeSeriesList[0].year;\n\t\t\tconst endYear = timeSeriesList[timeSeriesList.length - 1].year;\n\t\t\tconst startX = xScale(startYear), endX = xScale(endYear);\n\t\t\tconst startY = yScale(startValue), endY = yScale(endValue);\n\n\t\t\tif (isBilateral) {\n\t\t\t\tconst [ sourceID, targetID ] = ID.split('-');\n\t\t\t\tconst sourceName = countryIDToData[sourceID].displayName;\n    \t\t\tconst targetName = countryIDToData[targetID].displayName;\n    \t\t\tconst titleText = `${ sourceName } → ${ targetName }`;\n\n    \t\t\tlineChartList.push({\n\t\t\t\t\tkey: ID,\n\t\t\t\t\ttitleText,\n\t\t\t\t\tstartYear, endYear,\n\t\t\t\t\tstartX, endX,\n\t\t\t\t\tstartY, endY,\n\t\t\t\t\tpathData, percentChange,\n\t\t\t\t\ttimeSeriesList // for filtering\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (!isBilateral) {\n\t\t\t\tconst nodeID = ID;\n\t\t\t\tconst countryName = countryIDToData[nodeID].displayName;\n\n\t\t\t\tlineChartList.push({\n\t\t\t\t\tkey: ID,\n\t\t\t\t\tcountryName, metricName,\n\t\t\t\t\tstartValue, endValue,\n\t\t\t\t\tstartYear, endYear,\n\t\t\t\t\tstartX, endX,\n\t\t\t\t\tstartY, endY,\n\t\t\t\t\tpathData, percentChange,\n\t\t\t\t\ttimeSeriesList // for filtering\n\t\t\t\t});\n\t\t\t}\n\t    }\n\n\t    // push only if there are charts to show\n\t    if (lineChartList.length > 0)\n\t    \ttimeSeriesSearchResultList.push({\n\t    \t\tkey: displayName,\n\t    \t\tsectionHeaderText: displayName,\n\t    \t\tisBilateral: isBilateral,\n\t    \t\tfilterYearList: yearList,\n\t    \t\tfilterStartYear: yearList[0],\n\t    \t\tfilterEndYear: yearList[yearList.length - 1],\n\t    \t\tlineChartList: lineChartList\n\t    \t\t\t.sort((a, b) => b.percentChange - a.percentChange)\n\t    \t});\n\t}\n\n\treturn timeSeriesSearchResultList;\n};\n\n/* generateLinkSearchResultList */\n\nconst filterRawLinkRowList = (\n\tquerySourceID, queryTargetID,\n\trawLinkRowList, isDirected\n) => {\n\tconst filteredLinkRowList = [];\n\n\tfor (let linkRowObject of rawLinkRowList) {\n\t\tif (isDirected) {\n\t\t\tconst currSourceID = linkRowObject.node1;\n\t\t\tconst currTargetID = linkRowObject.node2;\n\t\t\tconst sourceMatched = querySourceID === null || querySourceID === currSourceID;\n\t\t\tconst targetMatched = queryTargetID === null || queryTargetID === currTargetID;\n\n\t\t\tif (sourceMatched && targetMatched)\n\t\t\t\tfilteredLinkRowList.push(linkRowObject);\n\t\t}\n\n\t\telse if (!isDirected) {\n\t\t\tconst currNode1ID = linkRowObject.node1;\n\t\t\tconst currNode2ID = linkRowObject.node2;\n\n\t\t\tconst hasSourceQuery = querySourceID !== null;\n\t\t\tconst hasTargetQuery = queryTargetID !== null;\n\t\t\tconst sourceMatchedNode1 = querySourceID === currNode1ID;\n\t\t\tconst sourceMatchedNode2 = querySourceID === currNode2ID;\n\t\t\tconst targetMatchedNode1 = queryTargetID === currNode1ID;\n\t\t\tconst targetMatchedNode2 = queryTargetID === currNode2ID;\n\n\t\t\tconst selectionCriteria1 = hasSourceQuery && !hasTargetQuery && (sourceMatchedNode1 || sourceMatchedNode2);\n\t\t\tconst selectionCriteria2 = !hasSourceQuery && hasTargetQuery && (targetMatchedNode1 || targetMatchedNode2);\n\t\t\tconst selectionCriteria3 = hasSourceQuery && hasTargetQuery && (sourceMatchedNode1 && targetMatchedNode2);\n\t\t\tconst selectionCriteria4 = hasSourceQuery && hasTargetQuery && (targetMatchedNode1 && sourceMatchedNode2);\n\n\t\t\tif (selectionCriteria1 || selectionCriteria2 || selectionCriteria3 || selectionCriteria4)\n\t\t\t\tfilteredLinkRowList.push(linkRowObject);\n\t\t}\n\t}\n\n\treturn filteredLinkRowList;\n};\n\nexport const generateLinkSearchResultList = (\n\tsourceID, targetID,\n\tcountryIDToData,\n\tlinkDataList\n) => {\n\tif (sourceID === null && targetID === null)\n\t\treturn [];\n\n\tconst linkSearchResultList = []; \n\t/*\n\t\ttableName,\n\t\ttableHeaderText,\n\t\ttableRowList,\n\t\tattributeList,\n\t\tlinkRowList,\n\t\tfilterAttrNameList,\n\t\tfilterAttrValueList,\n\t\tfilterAttrName,\n\t\tfilterAttrValue\n\t*/\n\n\tfor (let linkDataObject of linkDataList) {\n\t\tconst rawLinkRowList = linkDataObject.data;\n\t\tconst { \n\t\t\tlinkType, \n\t\t\tdisplayName, \n\t\t\tisDirected,\n\t\t\tdataTable\n\t\t} = linkDataObject.metadata;\n\t\tconst filteredLinkRowList = filterRawLinkRowList(\n\t\t\tsourceID, \n\t\t\ttargetID, \n\t\t\trawLinkRowList, \n\t\t\tisDirected\n\t\t);\n\n\t\t// push only if have rows in table\n\t\tif (filteredLinkRowList.length > 0) {\n\t\t\tconst tableName = `${ linkType }-table`;\n\t\t\tconst tableHeaderText = `${ displayName } (${ filteredLinkRowList.length } ${ filteredLinkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\tconst attributeList = dataTable.attributeList.map(attribute => attribute.displayName);\n\t\t\tconst filterAttrNameList = [ { key: 'none', attributeName: null, displayName: 'None', isID: false } ];\n\t\t\tconst tableRowList = generateTableRowList(filteredLinkRowList, dataTable.attributeList, countryIDToData);\n\n\t\t\tfor (let { attributeName, displayName, isID } of dataTable.attributeList)\n\t\t\t\tfilterAttrNameList.push({ key: attributeName, attributeName, displayName, isID });\n\n\t\t\tlinkSearchResultList.push({ \n\t\t\t\tkey: tableName,\n\t\t\t\tlinkRowList: filteredLinkRowList,\n\t\t\t\tdisplayName: displayName, // for filtering\n\t\t\t\tdataTableAttrList: dataTable.attributeList, // for filtering\n\t\t\t\tfilterAttrNameList: filterAttrNameList,\n\t\t\t\tfilterAttrValueList: [],\n\t\t\t\tfilterAttrName: filterAttrNameList[0],\n\t\t\t\tfilterAttrValue: '', \n\t\t\t\ttableName,\n\t\t\t\ttableHeaderText,\n\t\t\t\tattributeList,\n\t\t\t\ttableRowList\n\t\t\t});\n\t\t}\n\t}\n\n\treturn linkSearchResultList;\n};\n\n/* filterTimeSeriesSearchResult */\n\nexport const filterTimeSeriesSearchResult = (\n\tprevTimeSeriesSearchResultList,\n\tsearchResultKey,\n\tfilterStartYear,\n\tfilterEndYear\n) => {\n\tconst newTimeSeriesSearchResultList = [ ...prevTimeSeriesSearchResultList ];\n\n\tfor (let timeSeriesSearchResultObject of newTimeSeriesSearchResultList)\n\t\tif (timeSeriesSearchResultObject.key === searchResultKey) {\n\t\t\tconst prevLineChartList = timeSeriesSearchResultObject.lineChartList;\n\t\t\tconst isBilateral = timeSeriesSearchResultObject.isBilateral;\n\n\t\t\tconst { width, height, margin } = isBilateral ? bilateralLineChart : nonBilateralLineChart;\n\t\t\tconst newLineChartList = [];\n\n\t\t\tconst xScale = scaleLinear()\n\t\t\t\t.domain([ filterStartYear, filterEndYear ].sort((a, b) => a - b))\n\t\t\t\t.range([ 0, width - margin.left - margin.right ]);\n\t\t\tconst yScale = scaleLinear()\n\t\t\t\t.range([ height - margin.top - margin.bottom, 0 ]);\n\t\t\tconst pathGenerator = line()\n\t\t\t\t.curve(curveBasis)\n\t\t    \t.x(d => xScale(d.year))\n\t\t    \t.y(d => yScale(d.value));\n\n\t\t\tfor (let lineChartObject of prevLineChartList) {\n\t\t\t\tconst filteredTimeSeriesList = lineChartObject.timeSeriesList\n\t\t\t\t\t.filter(({ year }) => \n\t\t\t\t\t\t(year >= filterStartYear && year <= filterEndYear) ||\n\t\t\t\t\t\t(year >= filterEndYear && year <= filterStartYear));\n\n\t\t\t\tif (filteredTimeSeriesList.length === 0) continue; // not include empty time series\n\t\t\t\tsetYScaleDomain(yScale, filteredTimeSeriesList); // set for each loop\n\t\t\t\t\n\t\t\t\tlineChartObject.startValue = filteredTimeSeriesList[0].value;\n\t\t\t\tlineChartObject.endValue = filteredTimeSeriesList[filteredTimeSeriesList.length - 1].value;\n\t\t\t\tlineChartObject.startYear = filteredTimeSeriesList[0].year;\n\t\t\t\tlineChartObject.endYear = filteredTimeSeriesList[filteredTimeSeriesList.length - 1].year;\n\t\t\t\tlineChartObject.startX = xScale(lineChartObject.startYear);\n\t\t\t\tlineChartObject.endX = xScale(lineChartObject.endYear);\n\t\t\t\tlineChartObject.startY = yScale(lineChartObject.startValue);\n\t\t\t\tlineChartObject.endY = yScale(lineChartObject.endValue);\n\t\t\t\tlineChartObject.pathData = pathGenerator(filteredTimeSeriesList);\n\t\t\t\tlineChartObject.percentChange = (lineChartObject.endValue - lineChartObject.startValue) / Math.abs(lineChartObject.startValue);\n\t\t\t\tnewLineChartList.push(lineChartObject);\n\t\t\t}\n\n\t\t\ttimeSeriesSearchResultObject.lineChartList = newLineChartList\n\t\t\t\t.sort((a, b) => b.percentChange - a.percentChange);\n\t\t\ttimeSeriesSearchResultObject.filterStartYear = filterStartYear;\n\t\t\ttimeSeriesSearchResultObject.filterEndYear = filterEndYear;\n\t\t}\n\n\treturn newTimeSeriesSearchResultList;\n};\n\n/* filterLinkSearchResult */\n\nconst generateFilterAttrValueList = (linkRowList, { attributeName, isID }, countryIDToData) => {\n\tconst attributeValueSet = new Set();\n\tconst filterAttrValueList = [];\n\n\tfor (let linkRowObject of linkRowList)\n\t\tattributeValueSet.add(linkRowObject[attributeName]);\n\n\tfor (let attributeValue of attributeValueSet) {\n\t\tlet displayName = attributeValue;\n\n\t\tif (isID) displayName = countryIDToData[attributeValue].displayName;\n\t\tif (attributeValue === '') displayName = 'null';\n\n\t\tfilterAttrValueList.push({ \n\t\t\tkey: attributeValue, attributeValue, displayName \n\t\t});\n\t}\n\n\treturn filterAttrValueList;\n};\n\nexport const selectFilterAttrName = (\n\tprevLinkSearchResultList,\n\tsearchResultKey,\n\tfilterAttrName,\n\tcountryIDToData\n) => {\n\tconst newLinkSearchResultList = [ ...prevLinkSearchResultList ];\n\n\tfor (let linkSearchResultObject of newLinkSearchResultList)\n\t\tif (linkSearchResultObject.key === searchResultKey) {\n\n\t\t\t// selected same option\n\t\t\tif (linkSearchResultObject.filterAttrName.key === filterAttrName.key) break;\n\n\t\t\t// selected none\n\t\t\tif (filterAttrName.attributeName === null) {\n\t\t\t\tconst displayName = linkSearchResultObject.displayName;\n\t\t\t\tconst dataTableAttrList = linkSearchResultObject.dataTableAttrList;\n\t\t\t\tconst linkRowList = linkSearchResultObject.linkRowList;\n\n\t\t\t\tlinkSearchResultObject.filterAttrValueList = [];\n\t\t\t\tlinkSearchResultObject.filterAttrName = filterAttrName;\n\t\t\t\tlinkSearchResultObject.filterAttrValue = '';\n\t\t\t\tlinkSearchResultObject.tableHeaderText = `${ displayName } (${ linkRowList.length } ${ linkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\t\tlinkSearchResultObject.tableRowList = generateTableRowList(linkRowList, dataTableAttrList, countryIDToData);\n\t\t\t}\n\n\t\t\t// selected different option\n\t\t\telse if (filterAttrName.attributeName !== null) {\n\t\t\t\tconst displayName = linkSearchResultObject.displayName;\n\t\t\t\tconst dataTableAttrList = linkSearchResultObject.dataTableAttrList;\n\t\t\t\tconst linkRowList = linkSearchResultObject.linkRowList;\n\n\t\t\t\tconst filterAttrValueList = generateFilterAttrValueList(linkRowList, filterAttrName, countryIDToData);\n\t\t\t\tconst filterAttrValue = filterAttrValueList[0];\n\n\t\t\t\tconst filteredLinkRowList = linkRowList.filter(linkRowObject => \n\t\t\t\t\tlinkRowObject[filterAttrName.attributeName] === filterAttrValue.attributeValue);\n\t\t\t\tconst tableHeaderText = `${ displayName } (${ filteredLinkRowList.length } ${ filteredLinkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\t\tconst tableRowList = generateTableRowList(filteredLinkRowList, dataTableAttrList, countryIDToData);\n\n\t\t\t\tlinkSearchResultObject.filterAttrValueList = filterAttrValueList;\n\t\t\t\tlinkSearchResultObject.filterAttrName = filterAttrName;\n\t\t\t\tlinkSearchResultObject.filterAttrValue = filterAttrValue;\n\t\t\t\tlinkSearchResultObject.tableHeaderText = tableHeaderText;\n\t\t\t\tlinkSearchResultObject.tableRowList = tableRowList;\n\t\t\t}\n\t\t}\n\n\treturn newLinkSearchResultList;\n};\n\nexport const selectFilterAttrValue = (\n\tprevLinkSearchResultList,\n\tsearchResultKey,\n\tfilterAttrName,\n\tfilterAttrValue,\n\tcountryIDToData\n) => {\n\tconst newLinkSearchResultList = [ ...prevLinkSearchResultList ];\n\n\tfor (let linkSearchResultObject of newLinkSearchResultList)\n\t\tif (linkSearchResultObject.key === searchResultKey) {\n\n\t\t\t// selected same option\n\t\t\tif (linkSearchResultObject.filterAttrValue.key === filterAttrValue.key) break;\n\n\t\t\t// selected different option\n\t\t\tconst displayName = linkSearchResultObject.displayName;\n\t\t\tconst dataTableAttrList = linkSearchResultObject.dataTableAttrList;\n\t\t\tconst linkRowList = linkSearchResultObject.linkRowList;\n\n\t\t\tconst filteredLinkRowList = linkRowList.filter(linkRowObject => \n\t\t\t\tlinkRowObject[filterAttrName.attributeName] === filterAttrValue.attributeValue);\n\t\t\tconst tableHeaderText = `${ displayName } (${ filteredLinkRowList.length } ${ filteredLinkRowList.length === 1 ? 'row' : 'rows' })`;\n\t\t\tconst tableRowList = generateTableRowList(filteredLinkRowList, dataTableAttrList, countryIDToData);\n\n\t\t\tlinkSearchResultObject.filterAttrValue = filterAttrValue;\n\t\t\tlinkSearchResultObject.tableHeaderText = tableHeaderText;\n\t\t\tlinkSearchResultObject.tableRowList = tableRowList;\n\t\t}\n\n\treturn newLinkSearchResultList;\n};","import $ from 'jquery';\nimport { useReducer, useEffect, useCallback } from 'react';\nimport { \n\tsearchCountryListByQuery,\n\tgetPrevSelectionIndex,\n\tgetCurrSelectionIndex,\n\tgetNextSelectionIndex,\n\tgetSelectedCountryName\n} from './updateSearchWindowHeader';\nimport { \n\tfindMostSimilarCountry,\n\tgenerateTimeSeriesSearchResultList,\n\tgenerateLinkSearchResultList,\n\tfilterTimeSeriesSearchResult,\n\tselectFilterAttrName,\n\tselectFilterAttrValue\n} from './updateSearchWindowContent';\n\nconst initialState = {\n\tsource: { query: '', list: [], listTop: null, listLeft: null },\n\ttarget: { query: '', list: [], listTop: null, listLeft: null },\n\tcontent: null, // inferredSourceName, inferredTargetName, timeSeriesSearchResultList, linkSearchResultList\n\tisLoading: false\n};\n\nconst reducer = (prevState, dataState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INPUT_SOURCE_QUERY': {\n\t\t\tconst { inputEl } = action;\n\t\t\tconst { nodeList } = dataState;\n\t\t\tconst inputBBox = inputEl.getBoundingClientRect();\n\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\n\t\t\treturn { ...prevState, source: {\n\t\t\t\tquery: inputEl.value,\n\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\tlist: searchCountryListByQuery(countryNameList, inputEl.value)\n\t\t\t}, target: { ...prevState.target, list: [] } }; // remove target list\n\t\t}\n\t\tcase 'INPUT_TARGET_QUERY': {\n\t\t\tconst { inputEl } = action;\n\t\t\tconst { nodeList } = dataState;\n\t\t\tconst inputBBox = inputEl.getBoundingClientRect();\n\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\t\t\t\n\t\t\treturn { ...prevState, target: {\n\t\t\t\tquery: inputEl.value,\n\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\tlist: searchCountryListByQuery(countryNameList, inputEl.value)\n\t\t\t}, source: { ...prevState.source, list: [] } }; // remove source list\n\t\t}\n\t\tcase 'REMOVE_COUNTRY_LIST': {\n\t\t\treturn { ...prevState, \n\t\t\t\tsource: { ...prevState.source , list: [] },\n\t\t\t\ttarget: { ...prevState.target , list: [] }\n\t\t\t};\n\t\t}\n\t\tcase 'CLICK_COUNTRY_NAME': {\n\t\t\tconst { sourceOrTarget, countryName } = action;\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: {\n\t\t\t\tquery: countryName, list: [], listTop: null, listLeft: null\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_ENTER_COUNTRY_NAME': {\n\t\t\tconst { sourceOrTarget, countryName } = action;\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\tlist: prevState[sourceOrTarget].list.map(countryObject => \n\t\t\t\t\tcountryObject.countryName !== countryName ? \n\t\t\t\t\t\t{ ...countryObject, selected: false } : \n\t\t\t\t\t\t{ ...countryObject, selected: true })\n\t\t\t} };\n\t\t}\n\t\tcase 'MOUSE_LEAVE_COUNTRY_NAME': {\n\t\t\tconst { sourceOrTarget, countryName } = action;\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\tlist: prevState[sourceOrTarget].list.map(countryObject => \n\t\t\t\t\tcountryObject.countryName !== countryName ? countryObject : \n\t\t\t\t\t\t{ ...countryObject, selected: false })\n\t\t\t} };\n\t\t}\n\t\tcase 'START_SEARCHING': {\n\t\t\treturn { ...prevState, \n\t\t\t\tsource: { ...prevState.source , list: [] },\n\t\t\t\ttarget: { ...prevState.target , list: [] },\n\t\t\t\tisLoading: true \n\t\t\t}; // clear list\n\t\t}\n\t\tcase 'FINISH_SEARCHING': {\n\t\t\tconst { \n\t\t\t\tinferredSourceName,\n\t\t\t\tinferredTargetName,\n\t\t\t\ttimeSeriesSearchResultList,\n\t\t\t\tlinkSearchResultList\n\t\t\t} = action;\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: {\n\t\t\t\t\tinferredSourceName,\n\t\t\t\t\tinferredTargetName,\n\t\t\t\t\ttimeSeriesSearchResultList,\n\t\t\t\t\tlinkSearchResultList\n\t\t\t\t},\n\t\t\t\tisLoading: false\n\t\t\t};\n\t\t}\n\t\tcase 'PRESS_ARROW_UP': {\n\t\t\tconst sourceListIsShown = prevState.source.list.length > 0;\n\t\t\tconst sourceOrTarget = sourceListIsShown ? 'source' : 'target';\n\t\t\tconst currSelectionIndex = getCurrSelectionIndex(prevState[sourceOrTarget].list);\n\t\t\tconst prevSelectionIndex = getPrevSelectionIndex(currSelectionIndex);\n\n\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\tlist: prevState[sourceOrTarget].list.map((countryObject, index) => \n\t\t\t\t\tindex !== prevSelectionIndex ? \n\t\t\t\t\t{ ...countryObject, selected: false } :\n\t\t\t\t\t{ ...countryObject, selected: true })\n\t\t\t} };\n\t\t}\n\t\tcase 'PRESS_ARROW_DOWN': {\n\t\t\tconst { el } = action;\n\t\t\tconst { nodeList } = dataState;\n\t\t\tconst sourceInputIsFocused = $(el).closest('.source.input-box').length > 0;\n\t\t\tconst targetInputIsFocused = $(el).closest('.target.input-box').length > 0;\n\t\t\tconst sourceListIsShown = prevState.source.list.length > 0;\n\t\t\tconst targetListIsShown = prevState.target.list.length > 0;\n\n\t\t\t// either one is shown\n\t\t\tif (sourceListIsShown || targetListIsShown) {\n\t\t\t\tconst sourceOrTarget = sourceListIsShown ? 'source' : 'target';\n\t\t\t\tconst currSelectionIndex = getCurrSelectionIndex(prevState[sourceOrTarget].list);\n\t\t\t\tconst nextSelectionIndex = getNextSelectionIndex(currSelectionIndex);\n\n\t\t\t\treturn { ...prevState, [ sourceOrTarget ]: { ...prevState[sourceOrTarget],\n\t\t\t\t\tlist: prevState[sourceOrTarget].list.map((countryObject, index) => \n\t\t\t\t\t\tindex !== nextSelectionIndex ? \n\t\t\t\t\t\t{ ...countryObject, selected: false } :\n\t\t\t\t\t\t{ ...countryObject, selected: true })\n\t\t\t\t} };\n\t\t\t}\n\n\t\t\t// none is shown but focus on source input\n\t\t\tif (!sourceListIsShown && !targetListIsShown && sourceInputIsFocused) {\n\t\t\t\tconst sourceInputEl = $(el).closest('input')[0];\n\t\t\t\tconst inputBBox = sourceInputEl.getBoundingClientRect();\n\t\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\t\t\t\t\n\t\t\t\treturn { ...prevState, source: {\n\t\t\t\t\tquery: sourceInputEl.value,\n\t\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\t\tlist: searchCountryListByQuery(countryNameList, sourceInputEl.value)\n\t\t\t\t} };\n\t\t\t}\n\n\t\t\t// none is shown but focus on target input\n\t\t\tif (!sourceListIsShown && !targetListIsShown && targetInputIsFocused) {\n\t\t\t\tconst targetInputEl = $(el).closest('input')[0];\n\t\t\t\tconst inputBBox = targetInputEl.getBoundingClientRect();\n\t\t\t\tconst countryNameList = nodeList.map(row => row.name);\n\n\t\t\t\treturn { ...prevState, target: {\n\t\t\t\t\tquery: targetInputEl.value,\n\t\t\t\t\tlistLeft: inputBBox.left,\n\t\t\t\t\tlistTop: inputBBox.top + inputBBox.height + 20,\n\t\t\t\t\tlist: searchCountryListByQuery(countryNameList, targetInputEl.value)\n\t\t\t\t} };\n\t\t\t}\n\n\t\t\treturn prevState;\n\t\t}\n\t\tcase 'PRESS_ENTER': {\n\t\t\tconst sourceListIsShown = prevState.source.list.length > 0;\n\t\t\tconst targetListIsShown = prevState.target.list.length > 0;\n\n\t\t\t// try to enter selection to input box if list is open\n\t\t\tif (sourceListIsShown || targetListIsShown) {\n\t\t\t\tconst sourceOrTarget = sourceListIsShown ? 'source' : 'target';\n\t\t\t\tconst selectedCountryName = getSelectedCountryName(prevState[sourceOrTarget].list);\n\n\t\t\t\tif (selectedCountryName !== null)\n\t\t\t\t\treturn { ...prevState, [ sourceOrTarget ]: {\n\t\t\t\t\t\tlist: [], listTop: null, listLeft: null,\n\t\t\t\t\t\tquery: selectedCountryName === null \n\t\t\t\t\t\t\t ? prevState[sourceOrTarget].query \n\t\t\t\t\t\t\t : selectedCountryName\n\t\t\t\t\t} };\n\t\t\t}\n\n\t\t\t// start searching and clear list\n\t\t\treturn { ...prevState, \n\t\t\t\tsource: { ...prevState.source, list: [] },\n\t\t\t\ttarget: { ...prevState.target, list: [] },\n\t\t\t\tisLoading: true \n\t\t\t};\n\t\t}\n\t\tcase 'FILTER_TIME_SERIES_SEARCH_RESULT': {\n\t\t\tconst { searchResultKey, filterStartYear, filterEndYear } = action;\n\t\t\tconst { content: { timeSeriesSearchResultList: prevTimeSeriesSearchResultList } } = prevState;\n\t\t\tconst newTimeSeriesSearchResultList = filterTimeSeriesSearchResult(\n\t\t\t\tprevTimeSeriesSearchResultList,\n\t\t\t\tsearchResultKey,\n\t\t\t\tfilterStartYear,\n\t\t\t\tfilterEndYear\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: { ...prevState.content, \n\t\t\t\t\ttimeSeriesSearchResultList: newTimeSeriesSearchResultList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_FILTER_ATTRIBUTE_NAME': {\n\t\t\tconst { searchResultKey, filterAttrName } = action;\n\t\t\tconst { content: { linkSearchResultList: prevLinkSearchResultList } } = prevState;\n\t\t\tconst { countryIDToData } = dataState;\n\t\t\tconst newLinkSearchResultList = selectFilterAttrName(\n\t\t\t\tprevLinkSearchResultList,\n\t\t\t\tsearchResultKey,\n\t\t\t\tfilterAttrName,\n\t\t\t\tcountryIDToData\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: { ...prevState.content, \n\t\t\t\t\tlinkSearchResultList: newLinkSearchResultList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_FILTER_ATTRIBUTE_VALUE': {\n\t\t\tconst { searchResultKey, filterAttrName, filterAttrValue } = action;\n\t\t\tconst { content: { linkSearchResultList: prevLinkSearchResultList } } = prevState;\n\t\t\tconst { countryIDToData } = dataState;\n\t\t\tconst newLinkSearchResultList = selectFilterAttrValue(\n\t\t\t\tprevLinkSearchResultList,\n\t\t\t\tsearchResultKey,\n\t\t\t\tfilterAttrName,\n\t\t\t\tfilterAttrValue,\n\t\t\t\tcountryIDToData\n\t\t\t);\n\n\t\t\treturn { ...prevState,\n\t\t\t\tcontent: { ...prevState.content, \n\t\t\t\t\tlinkSearchResultList: newLinkSearchResultList\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t\t}\n\t}\n};\n\nexport const useSearchState = (interfaceState, dataState) => {\n\tconst memoizedReducer = useCallback((prevState, action) => \n\t\treducer(prevState, dataState, action), [ dataState ]);\n\tconst [ searchState, searchDispatch ] = useReducer(memoizedReducer, initialState);\n\n\tconst { \n\t\tsearchWindowIsOpen \n\t} = interfaceState;\n\tconst { \n\t\tnodeList,\n\t\tlinkDataList, \n\t\tcountryIDToData, \n\t\ttimeSeriesDataList \n\t} = dataState;\n\tconst { \n\t\tisLoading: searchWindowIsLoading,\n\t\tsource: { query: sourceQuery },\n\t\ttarget: { query: targetQuery }\n\t} = searchState;\n\n\tuseEffect(() => {\n\t\t// when not click on certain targets, dispatch blur event\n\t\tconst handleClickSearchWindow = event => {\n\t\t\tconst targetItemList = [\n\t\t\t\t'#search-window .close-button',\n\t\t\t\t'#search-window .input-box',\n\t\t\t\t'#search-window .country-list',\n\t\t\t\t'#search-window .search-button'\n\t\t\t];\n\t\t\tlet clickedOnTargets = false;\n\n\t\t\tfor (let target of targetItemList)\n\t\t\t\tif ($(event.target).closest(target).length > 0) {\n\t\t\t\t\tclickedOnTargets = true; break;\n\t\t\t\t}\n\t\t\tif (!clickedOnTargets)\n\t\t\t\tsearchDispatch({ type: 'REMOVE_COUNTRY_LIST' });\n\t\t};\n\n\t\t// handle key down\n\t\tconst handleKeyDown = event => {\n\t\t\tif (event.key === 'ArrowUp') searchDispatch({ type: 'PRESS_ARROW_UP' });\n\t\t\tif (event.key === 'ArrowDown') searchDispatch({ type: 'PRESS_ARROW_DOWN', el: event.target });\n\t\t\tif (event.key === 'Enter') {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t\tsearchDispatch({ type: 'PRESS_ENTER' });\n\t\t\t}\n\t\t};\n\n\t\t// to be safe, remove all before install\n\t\tif (searchWindowIsOpen) {\n\t\t\t$('#search-window').off('click').on('click', handleClickSearchWindow);\n\t\t\t$(document).off('keydown').on('keydown', handleKeyDown);\n\t\t}\n\n\t\t// remove all when close search window\n\t\treturn () => {\n\t\t\tif (searchWindowIsOpen) {\n\t\t\t\t$('#search-window').off('click');\n\t\t\t\t$(document).off('keydown');\n\t\t\t}\n\t\t};\n\t}, [ searchWindowIsOpen ]);\n\n\tuseEffect(() => {\n\t\tif (!searchWindowIsLoading)\n\t\t\treturn;\n\n\t\tconst { \n\t\t\tID: sourceID,\n\t\t\tcountryName: inferredSourceName\n\t\t} = findMostSimilarCountry(nodeList, sourceQuery);\n\t\tconst {\n\t\t\tID: targetID,\n\t\t\tcountryName: inferredTargetName\n\t\t} = findMostSimilarCountry(nodeList, targetQuery);\n\t\tconst timeSeriesSearchResultList = generateTimeSeriesSearchResultList(\n\t\t\tsourceID, targetID,\n\t\t\tcountryIDToData, // generate description\n\t\t\ttimeSeriesDataList // generate chart\n\t\t);\n\t\tconst linkSearchResultList = generateLinkSearchResultList(\n\t\t\tsourceID, targetID,\n\t\t\tcountryIDToData,\n\t\t\tlinkDataList\n\t\t);\n\n\t\tsetTimeout(() => { // hack to allow loading\n\t\t\tsearchDispatch({ \n\t\t\t\ttype: 'FINISH_SEARCHING',\n\t\t\t\tinferredSourceName,\n\t\t\t\tinferredTargetName,\n\t\t\t\ttimeSeriesSearchResultList,\n\t\t\t\tlinkSearchResultList\n\t\t\t});\n\t\t}, 100);\n\t}, [\n\t\tsearchWindowIsLoading,\n\t\tsourceQuery, \n\t\ttargetQuery,\n\t\tnodeList,\n\t\tlinkDataList,\n\t\tcountryIDToData,\n\t\ttimeSeriesDataList\n\t]);\n\n\treturn [ searchState, searchDispatch ];\n};","import $ from 'jquery';\nimport { memo } from 'react';\nimport { BiSearch } from \"react-icons/bi\";\nimport { Loader } from '../widgets/Loader/Loader';\nimport { SearchWindowHeader } from './SearchWindowHeader/SearchWindowHeader';\nimport { SearchWindowContent } from './SearchWindowContent/SearchWindowContent';\nimport { useSearchState } from './useSearchState/useSearchState';\nimport './SearchWindow.css';\n\nexport const SearchWindow = memo(({\n\tdataState,\n\tdetailPaneIsOpen,\n\tsearchWindowIsOpen,\n\tinterfaceDispatch\n}) => {\n\tconst [ {\n\t\tsource: sourceState,\n\t\ttarget: targetState,\n\t\tcontent: contentState,\n\t\tisLoading: searchWindowIsLoading\n\t}, searchDispatch ] = useSearchState({ searchWindowIsOpen }, dataState);\n\n\tconst handleClickOpenButton = () => \n\t\tinterfaceDispatch({ type: 'OPEN_SEARCH_WINDOW' });\n\tconst handleMouseEnterOpenButton = event => \n\t\tinterfaceDispatch({ \n\t\t\ttype: 'MOUSE_ENTER_SEARCH_WINDOW_BUTTON',\n\t\t\tbuttonEl: $(event.target).closest('.button')[0]\n\t\t});\n\tconst handleMouseLeaveOpenButton = () => \n\t\tinterfaceDispatch({ type: 'MOUSE_LEAVE_SEARCH_WINDOW_BUTTON' });\n\t\n\tif (!searchWindowIsOpen)\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"search-window button\"\n\t\t\t\tonClick={ handleClickOpenButton }\n\t\t\t\tonMouseEnter={ handleMouseEnterOpenButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveOpenButton }\n\t\t\t\tstyle={{ right: !detailPaneIsOpen ? 40 : 290 }}\n\t\t\t><BiSearch /></div>\n\t\t);\n\n\treturn (\n\t\t<div id=\"search-window\" className=\"loader-installed\">\n\t\t\t<SearchWindowHeader \n\t\t\t\tsourceState={ sourceState }\n\t\t\t\ttargetState={ targetState }\n\t\t\t\tsearchDispatch={ searchDispatch }\n\t\t\t\tinterfaceDispatch={ interfaceDispatch }\n\t\t\t/>\n\t\t\t<SearchWindowContent\n\t\t\t\tcontentState={ contentState }\n\t\t\t\tsearchDispatch={ searchDispatch }\n\t\t\t/>\n\t\t\t{ searchWindowIsLoading && <Loader /> }\n\t\t</div>\n\t);\n});","import { plural } from 'pluralize';\n\nexport const LinkDescription = ({\n\tlinkRowCount, \n\tsourceName, \n\ttargetName, \n\ttimelineSliderState,\n\teventName\n}) => {\n\tconst { yearAttribute, value } = timelineSliderState;\n\n\tif (yearAttribute.key === 'no-filter') // no timeline filter -> not show year\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'is-start')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span> \n\t\t\tthat { linkRowCount === 1 ? 'has' : 'have' } been started but not ended in\n\t\t\t<span>{ value }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'is-signed')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span> \n\t\t\tthat { linkRowCount === 1 ? 'has' : 'have' } been signed but not ended in\n\t\t\t<span>{ value }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'is-in-force')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span> \n\t\t\tthat { linkRowCount === 1 ? 'is' : 'are' } still in force in\n\t\t\t<span>{ value }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'include-start')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>started between\n\t\t\t<span>{ value[0] }</span>and<span>{ value[1] }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'include-sign')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>signed between\n\t\t\t<span>{ value[0] }</span>and<span>{ value[1] }</span>\n\t\t</>);\n\tif (yearAttribute.key === 'include-in-force')\n\t\treturn (<>\n\t\t\t<span>{ linkRowCount }</span>{ linkRowCount === 1 ? eventName : plural(eventName) } between\n\t\t\t<span>{ sourceName }</span>and<span>{ targetName }</span>entered into force between\n\t\t\t<span>{ value[0] }</span>and<span>{ value[1] }</span>\n\t\t</>);\n\t\n\treturn null;\n};","import { memo } from 'react';\nimport { useTooltip } from './useTooltip';\nimport { LinkDescription } from '../LinkDescription/LinkDescription';\nimport './Tooltip.css';\n\nconst generateAttributeValuePairList = (linkRowObject, tooltipAttrList, countryIDToData) => {\n\tconst attributeValuePairList = [];\n\n\tfor (let { attributeName, displayName, isID } of tooltipAttrList) {\n\t\tlet attributeValue = linkRowObject[attributeName];\n\n\t\tif (attributeValue === '')\n\t\t\tattributeValue = 'null';\n\t\telse if (isID)\n\t\t\tattributeValue = countryIDToData[attributeValue].displayName;\n\n\t\tattributeValuePairList.push({\n\t\t\tattributeName: displayName,\n\t\t\tattributeValue: attributeValue\n\t\t});\n\t}\n\n\treturn attributeValuePairList;\n};\n\nexport const Tooltip = memo(({\n\thoverState,\n\ttimelineSliderState,\n\tcountryIDToData\n}) => {\n\tconst [ tooltipRef, tooltipTop, tooltipLeft ] = useTooltip(hoverState);\n\n\t// tooltip for data selection pane item\n\tif (hoverState.object === 'DATA_SELECTION_PANE_ITEM') {\n\t\tconst { top, left, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"data-selection-pane tooltip\"\n\t\t\t\tstyle={{ top: top, left: left }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\t// tooltip for link\n\tif (hoverState.object === 'LINK') {\n\t\tconst { \n\t\t\tsourceID, targetID,\n\t\t\tlinkRowList, tooltipAttrList, eventName\n\t\t} = hoverState.data;\n\t\tconst linkRowCount = linkRowList.length;\n\n\t\tif (linkRowCount > 1) {\n\t\t\tconst sourceName = countryIDToData[sourceID].displayName;\n\t\t\tconst targetName = countryIDToData[targetID].displayName;\n\n\t\t\treturn (\n\t\t\t\t<div \n\t\t\t\t\tref={ tooltipRef }\n\t\t\t\t\tclassName=\"visualization-pane tooltip multiple\"\n\t\t\t\t\tstyle={{ \n\t\t\t\t\t\ttop: tooltipTop, \n\t\t\t\t\t\tleft: tooltipLeft, \n\t\t\t\t\t\topacity: tooltipLeft !== null ? null : 0 \n\t\t\t\t\t}}\n\t\t\t\t><LinkDescription \n\t\t\t\t\tlinkRowCount={ linkRowCount }\n\t\t\t\t\tsourceName={ sourceName }\n\t\t\t\t\ttargetName={ targetName }\n\t\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\t\teventName={ eventName }\n\t\t\t\t/>(Click to see details)</div>\n\t\t\t);\n\t\t}\n\n\t\tif (linkRowCount === 1) {\n\t\t\tconst attributeValuePairList = generateAttributeValuePairList(\n\t\t\t\tlinkRowList[0], tooltipAttrList, countryIDToData\n\t\t\t);\n\n\t\t\treturn (\n\t\t\t\t<div \n\t\t\t\t\tref={ tooltipRef }\n\t\t\t\t\tclassName=\"visualization-pane tooltip single\"\n\t\t\t\t\tstyle={{ \n\t\t\t\t\t\ttop: tooltipTop, \n\t\t\t\t\t\tleft: tooltipLeft, \n\t\t\t\t\t\topacity: tooltipLeft !== null ? null : 0 \n\t\t\t\t\t}}\n\t\t\t\t>{ attributeValuePairList.map(attributeObject => [ \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ `${ attributeObject.attributeName }-name` } \n\t\t\t\t\t\tclassName=\"attribute-name\"\n\t\t\t\t\t>{ `${ attributeObject.attributeName }:` }</div>,\n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ `${ attributeObject.attributeName }-value` } \n\t\t\t\t\t\tclassName=\"attribute-value\"\n\t\t\t\t\t>{ attributeObject.attributeValue }</div>\n\t\t\t\t]) }</div>\n\t\t\t);\n\t\t}\n\t}\n\n\t// tooltip for detail pane button\n\tif (hoverState.object === 'DETAIL_PANE_BUTTON') {\n\t\tconst { top, right, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"detail-pane tooltip light\"\n\t\t\t\tstyle={{ top: top, right: right }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\t// tooltip for detail pane item\n\tif ((hoverState.object === 'DETAIL_PANE_NODE' && hoverState.data.showTooltip) ||\n\t\t(hoverState.object === 'DETAIL_PANE_LINK' && hoverState.data.showTooltip)) {\n\t\tconst { top, right, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"detail-pane tooltip dark\"\n\t\t\t\tstyle={{ top: top, right: right }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\t// tooltip for search pane button\n\tif (hoverState.object === 'SEARCH_WINDOW_BUTTON') {\n\t\tconst { top, right, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"search-window tooltip\"\n\t\t\t\tstyle={{ top: top, right: right }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\t// tooltip for control buttons\n\tif (hoverState.object === 'CONTROL_BUTTON') {\n\t\tconst { top, left, text } = hoverState.data;\n\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"control tooltip\"\n\t\t\t\tstyle={{ top: top, left: left }}\n\t\t\t>{ text }</div>\n\t\t);\n\t}\n\n\treturn null;\n}, (prevProps, nextProps) => \n\tprevProps.hoverState === nextProps.hoverState);","import { useRef, useEffect, useState } from 'react';\n\nexport const useTooltip = hoverState => {\n\tconst tooltipRef = useRef();\n\tconst [ { tooltipTop, tooltipLeft }, setTooltipTopLeft ] = useState({ \n\t\ttooltipTop: null, \n\t\ttooltipLeft: null\n\t});\n\tconst tooltipEl = tooltipRef.current;\n\tconst { top, left } = hoverState.object === 'LINK' ? hoverState.data : { top: null, left: null }; // flip only for vis pane tooltip\n\n\tuseEffect(() => {\n\t\tif (!tooltipEl) \n\t\t\treturn;\n\n\t\tconst { width: tooltipWidth, height: tooltipHeight } = tooltipEl.getBoundingClientRect();\n\t\tconst { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n\t\tconst tooltipTop = (top + 8 + tooltipHeight > windowHeight) ? top - tooltipHeight - 8 - 8 : top;\n\t\tconst tooltipLeft = (left + 8 + tooltipWidth > windowWidth) ? left - tooltipWidth - 8 - 8: left;\n\t\t\n\t\tsetTooltipTopLeft({ tooltipTop, tooltipLeft });\n\t}, [ tooltipEl, top, left ]);\n\n\treturn [ tooltipRef, tooltipTop, tooltipLeft ];\n};","import { memo, Fragment } from 'react';\nimport { FaTimes } from \"react-icons/fa\";\nimport { SparkLine } from '../../DetailPane/DetailPaneContent/SparkLine';\nimport { Bar } from '../../DetailPane/DetailPaneContent/Bar';\nimport { LinkDescription } from '../LinkDescription/LinkDescription';\nimport { DataTable } from '../DataTable/DataTable';\nimport './PopUpWindow.css';\n\nconst generateTableRowList = (linkRowList, dataTableAttrList, countryIDToData) => {\n\tconst tableRowList = [];\n\n\tfor (let linkRowObject of linkRowList) {\n\t\tlet rowString = '';\n\n\t\tfor (let { attributeName, isID } of dataTableAttrList) {\n\t\t\tlet attributeValue = linkRowObject[attributeName];\n\n\t\t\tif (attributeValue === '')\n\t\t\t\tattributeValue = 'null';\n\t\t\telse if (isID)\n\t\t\t\tattributeValue = countryIDToData[attributeValue].displayName;\n\n\t\t\trowString += `<div class=\"cell\">${ attributeValue }</div>`;\n\t\t}\n\n\t\trowString = `<div class=\"row\">${ rowString }</div>`;\n\t\ttableRowList.push(rowString);\n\t}\n\n\treturn tableRowList;\n};\n\nexport const PopUpWindow = memo(({\n\tfocusState,\n\ttimelineSliderState,\n\tcountryIDToData,\n\tdispatch\n}) => {\n\tconst handleClickCloseButton = () => \n\t\tdispatch({ type: 'CLOSE_POP_UP_WINDOW' });\n\n\t// pop up for link\n\tif (focusState.object === 'LINK') {\n\t\tconst { \n\t\t\tsourceID, targetID,\n\t\t\tlinkRowList, dataTableAttrList, eventName\n\t\t} = focusState.data;\n\t\tconst attributeList = dataTableAttrList.map(attribure => attribure.displayName);\n\t\tconst tableRowList = generateTableRowList(\n\t\t\tlinkRowList, dataTableAttrList, countryIDToData\n\t\t);\n\t\tconst linkRowCount = linkRowList.length;\n\t\tconst sourceName = countryIDToData[sourceID].displayName;\n\t\tconst targetName = countryIDToData[targetID].displayName;\n\n\t\treturn (\n\t\t\t<div id=\"pop-up-window\" className=\"link\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"background\"\n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t/>\n\t\t\t\t<div className=\"window\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t\t><FaTimes /></div>\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<LinkDescription\n\t\t\t\t\t\t\tlinkRowCount={ linkRowCount }\n\t\t\t\t\t\t\tsourceName={ sourceName }\n\t\t\t\t\t\t\ttargetName={ targetName }\n\t\t\t\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\t\t\t\teventName={ eventName }\n\t\t\t\t\t\t/>:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<DataTable\n\t\t\t\t\t\t\ttableName=\"pop-up-window-table\"\n\t\t\t\t\t\t\tattributeList={ attributeList }\n\t\t\t\t\t\t\ttableRowList={ tableRowList }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// pop up for spark line list\n\tif (focusState.object === 'SPARK_LINE_LIST') {\n\t\tconst { headerText, entryList } = focusState.data;\n\n\t\treturn (\n\t\t\t<div id=\"pop-up-window\" className=\"spark-line-list\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"background\"\n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t/>\n\t\t\t\t<div className=\"window\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t\t><FaTimes /></div>\n\t\t\t\t\t<div className=\"header\">{ headerText }</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t{ entryList.map(entryObject => \n\t\t\t\t\t\t\t\t<Fragment key={ entryObject.key }>\n\t\t\t\t\t\t\t\t\t<div className=\"title\">{ entryObject.titleText }</div>\n\t\t\t\t\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t\t\t\t\t<SparkLine \n\t\t\t\t\t\t\t\t\t\t\tstartYear={ entryObject.startYear }\n\t\t\t\t\t\t\t\t\t\t\tendYear={ entryObject.endYear }\n\t\t\t\t\t\t\t\t\t\t\tstartX={ entryObject.startX }\n\t\t\t\t\t\t\t\t\t\t\tendX={ entryObject.endX }\n\t\t\t\t\t\t\t\t\t\t\tstartY={ entryObject.startY }\n\t\t\t\t\t\t\t\t\t\t\tendY={ entryObject.endY }\n\t\t\t\t\t\t\t\t\t\t\tpathData={ entryObject.pathData }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"metric\">{ entryObject.contentText }</div>\n\t\t\t\t\t\t\t\t</Fragment>) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"dummy-for-padding\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// pop up for bar list\n\tif (focusState.object === 'BAR_LIST') {\n\t\tconst { headerText, entryList } = focusState.data;\n\n\t\treturn (\n\t\t\t<div id=\"pop-up-window\" className=\"bar-list\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"background\"\n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t/>\n\t\t\t\t<div className=\"window\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t\t><FaTimes /></div>\n\t\t\t\t\t<div className=\"header\">{ headerText }</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t{ entryList.map(entryObject => \n\t\t\t\t\t\t\t\t<Fragment key={ entryObject.key }>\n\t\t\t\t\t\t\t\t\t<div className=\"title\">{ entryObject.titleText }</div>\n\t\t\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t\t\t\t<Bar width={ entryObject.width * 1.5 } percent={ false } />\n\t\t\t\t\t\t\t\t\t\t<div className=\"text\">{ entryObject.contentText }</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Fragment>) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"dummy-for-padding\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn null;\n});","import { memo } from 'react';\nimport { schemeTableau10 } from 'd3';\nimport './ColorPicker.css';\n\nexport const ColorPicker = memo(({ colorPickerState, dispatch }) => {\n\tconst { \n\t\tisOpen, \n\t\tlinkKey, \n\t\tcurrColor,\n\t\tcolorTop, \n\t\tcolorLeft, \n\t\tcolorWidth, \n\t\tcolorHeight \n\t} = colorPickerState;\n\n\tconst handleClickBackground = () =>\n\t\tdispatch({ type: 'CLOSE_COLOR_PICKER' });\n\tconst handleClickColor = (linkKey, newColor) => \n\t\tdispatch({ type: 'SELECT_COLOR', linkKey, newColor });\n\n\tif (!isOpen)\n\t\treturn null;\n\n\treturn (\n\t\t<div className=\"color-picker\">\n\t\t\t<div \n\t\t\t\tclassName=\"background\" \n\t\t\t\tonClick={ handleClickBackground }\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclassName=\"curr-color\"\n\t\t\t\tstyle={{ \n\t\t\t\t\ttop: colorTop,\n\t\t\t\t\tleft: colorLeft,\n\t\t\t\t\twidth: colorWidth,\n\t\t\t\t\theight: colorHeight,\n\t\t\t\t\tcolor: currColor,\n\t\t\t\t\tbackground: currColor\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclassName=\"window\"\n\t\t\t\tstyle={{ \n\t\t\t\t\ttop: colorTop + colorHeight + 8,\n\t\t\t\t\tleft: colorLeft + colorWidth + 8\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ schemeTableau10.map(color => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={ color }\n\t\t\t\t\t\tclassName=\"color\"\n\t\t\t\t\t\tstyle={{ background: color, color: color }}\n\t\t\t\t\t\tonClick={ () => { handleClickColor(linkKey, color) } }\n\t\t\t\t\t/>) }\n\t\t\t</div>\n\t\t</div>\n\t);\n});","import { Input, Select, MenuItem } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport './LinkDisaggregatorHeader.css';\n\nconst MyInput = withStyles({ \n\troot: { \n    \tfontFamily: 'Quicksand',\n    \tfontSize: 15,\n    \tfontWeight: 300,\n    \tcolor: '#3d3d3d',\n    \twidth: '100%',\n    \t'&:not(.Mui-disabled):hover::before': {\n    \t\tborderBottom: '2px solid rgba(211, 211, 211, 0.6)'\n\t    }\n\t},\n\tunderline: {\n\t\t'&:before': { borderBottom: '1px solid rgba(211, 211, 211, 0.6)' },\n\t\t'&:after': { borderBottom: '2px solid rgba(211, 211, 211, 0.6)' }\n\t}\n})(Input);\n\nconst MySelect = withStyles({ \n\troot: { '&:focus': { backgroundColor: 'transparent' } },\n\ticon: { color: 'rgba(211, 211, 211)' }\n})(Select);\n\nconst MyMenuItem = withStyles({ \n\troot: { \n\t\tfontFamily: 'Quicksand',\n\t\tfontWeight: 300,\n\t\tfontSize: 13\n\t}\n})(MenuItem);\n\nexport const LinkDisaggregatorHeader = ({\n\theaderList,\n\theaderOption,\n\tlinkDisaggregatorDispatch\n}) => {\n\tconst handleSelectOption = event => \n\t\tlinkDisaggregatorDispatch({ \n\t\t\ttype: \"SELECT_DATASET\",\n\t\t\toption: event.target.value\n\t\t});\n\n\treturn (\n\t\t<div className=\"header\">\n        <div className=\"label\">DATASET</div>\n        <MySelect\n        \tvalue={ headerOption }\n        \tonChange={ handleSelectOption }\n        \tinput={ <MyInput /> }\n        >\n          { headerList.map(option => \n          \t<MyMenuItem key={ option.linkType } value={ option }>\n          \t\t{ option.displayName }\n          \t</MyMenuItem>) }\n        </MySelect>\n      </div>\n\t);\n};","import './LinkDisaggregatorContent.css';\n\nexport const LinkDisaggregatorContent = ({\n\tcontentList,\n\tlinkDisaggregatorDispatch\n}) => {\n\tconst handleSelectItem = itemKey => \n\t\tlinkDisaggregatorDispatch({ type: 'SELECT_CONTENT_OPTION', itemKey });\n\n\treturn (\n\t\t<div className=\"content\">\n\t\t\t<div className=\"label\">DISAGGREGATE BY:</div>\n\t\t\t<div className=\"list\">\n\t\t\t\t{ contentList.map(({ key, isSelected, displayName }) => \n\t\t\t\t\t<label \n\t\t\t\t\t\tclassName=\"item\"\n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\tchecked={ isSelected } \n\t\t\t\t\t\t\tonChange={ () => { handleSelectItem(key) } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t<span className=\"text\">{ displayName }</span>\n\t\t\t\t\t</label>) }\n\t\t\t</div>\n\t\t</div>\n\t);\n};","export const initHeaderList = linkDataList => {\n\tconst headerList = [];\n\n\tfor (let { metadata: { displayName, linkType, linkDisaggregator } } of linkDataList)\n\t\theaderList.push({ \n\t\t\tdisplayName, \n\t\t\tlinkType,\n\t\t\tlinkDisaggregator\n\t\t});\n\n\treturn headerList;\n};\n\nexport const updateContentList = option => {\n\tconst contentList = [];\n\tconst optionList = option.linkDisaggregator.optionList;\n\n\tfor (let option of optionList)\n\t\tcontentList.push({ ...option, // include displayName\n\t\t\tkey: option.displayName, // assume unique\n\t\t\tisSelected: false\n\t\t});\n\n\treturn contentList;\n};\n\nexport const toggleContentList = (prevContentList, itemKey) =>\n\tprevContentList.map(itemObject => ({ ...itemObject, \n\t\tisSelected: itemObject.key === itemKey \n\t\t\t\t  ? !itemObject.isSelected \n\t\t\t\t  : itemObject.isSelected\n\t}));","import { useReducer, useEffect } from 'react';\nimport { \n\tinitHeaderList,\n\tupdateContentList,\n\ttoggleContentList\n} from './updateLinkDisaggregator';\n\nconst generateInitialState = ({ linkDataList }) => {\n\tconst headerList = initHeaderList(linkDataList);\n\tconst contentList = updateContentList(headerList[0]);\n\n\treturn {\n\t\theader: { list: headerList, option: headerList[0] },\n\t\tcontent: { list: contentList }\n\t};\n};\n\nconst reducer = (prevState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SELECT_DATASET': {\n\t\t\tconst { option: newOption } = action;\n\t\t\tconst newContentList = updateContentList(newOption);\n\n\t\t\treturn { ...prevState, \n\t\t\t\theader: { ...prevState.header, option: newOption },\n\t\t\t\tcontent: { list: newContentList }\n\t\t\t};\n\t\t}\n\t\tcase 'SELECT_CONTENT_OPTION': {\n\t\t\tconst { itemKey } = action;\n\t\t\tconst { content: { list: prevContentList } } = prevState;\n\t\t\tconst newContentList = toggleContentList(prevContentList, itemKey);\n\n\t\t\treturn { ...prevState, content: { list: newContentList } };\n\t\t}\n\t\tcase 'REMOVE_CONTENT_SELECTION': {\n\t\t\tconst { content: { list: prevContentList } } = prevState;\n\t\t\tconst newContentList = prevContentList.map(option => ({ ...option, isSelected: false }));\n\n\t\t\treturn { ...prevState, content: { list: newContentList } };\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unhandled action type: ${ action.type }`);\n\t\t}\n\t}\n};\n\nexport const useLinkDisaggregator = (interfaceState, dataState) => {\n\tconst [ linkDisaggregatorState, linkDisaggregatorDispatch ] = useReducer(reducer, generateInitialState(dataState));\n\tconst { linkDisaggregatorIsOpen } = interfaceState;\n\n\tuseEffect(() => {\n\t\t// remove all choices when close\n\t\treturn () => {\n\t\t\tif (linkDisaggregatorIsOpen) \n\t\t\t\tlinkDisaggregatorDispatch({ type: 'REMOVE_CONTENT_SELECTION' })\n\t\t};\n\t}, [ linkDisaggregatorIsOpen ])\n\n\treturn [ linkDisaggregatorState, linkDisaggregatorDispatch ];\n};","import $ from 'jquery';\nimport { memo } from 'react';\nimport { CgComponents } from 'react-icons/cg';\nimport { BiTrash } from 'react-icons/bi';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { LinkDisaggregatorHeader } from './LinkDisaggregatorHeader/LinkDisaggregatorHeader';\nimport { LinkDisaggregatorContent } from './LinkDisaggregatorContent/LinkDisaggregatorContent';\nimport { useLinkDisaggregator } from './useLinkDisaggregator/useLinkDisaggregator';\nimport './LinkDisaggregator.css';\n\nexport const LinkDisaggregator = memo(({\n\tlinkDataList,\n\tlinkDisaggregatorIsOpen,\n\tinterfaceDispatch \n}) => {\n\tconst [ {\n\t\theader: { list: headerList, option: headerOption },\n\t\tcontent: { list: contentList }\n\t}, linkDisaggregatorDispatch ] = useLinkDisaggregator(\n\t\t{ linkDisaggregatorIsOpen },\n\t\t{ linkDataList }\n\t);\n\n\tconst handleMouseEnterButton = event => \n\t\tinterfaceDispatch({\n\t\t\ttype: 'MOUSE_ENTER_CONTROL_BUTTON',\n\t\t\tbuttonEl: $(event.target).closest('.button')[0],\n\t\t\ttext: $(event.target).closest('.button').attr('tooltip-text')\n\t\t});\n\tconst handleMouseLeaveButton = () => \n\t\tinterfaceDispatch({ type: 'MOUSE_LEAVE_CONTROL_BUTTON' });\n\tconst handleClickOpenButton = () =>\n\t\tinterfaceDispatch({ type: 'OPEN_LINK_DISAGGREGATOR' });\n\tconst handleClickClearButton = () =>\n\t\tinterfaceDispatch({ type: 'CLEAR_DISAGGREGATED_LINKS' });\n\tconst handleCloseLinkDisaggregator = () =>\n\t\tinterfaceDispatch({ type: 'CLOSE_LINK_DISAGGREGATOR' })\n\tconst handleClickConfirmButton = () => \t\t\n\t\tinterfaceDispatch({\n\t\t\ttype: 'CONFIRM_LINK_DISAGGREGATION',\n\t\t\tlinkKey: headerOption.linkType, // linkType is used as key\n\t\t\toptionList: contentList\n\t\t\t\t.filter(({ isSelected }) => isSelected)\n\t\t});\n\n\tif (!linkDisaggregatorIsOpen)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"link-disaggregator open button\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickOpenButton }\n\t\t\t\t\ttooltip-text=\"Disaggregate link\"\n\t\t\t\t><CgComponents /></div>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"link-disaggregator clear button\"\n\t\t\t\t\tonMouseEnter={ handleMouseEnterButton }\n\t\t\t\t\tonMouseLeave={ handleMouseLeaveButton }\n\t\t\t\t\tonClick={ handleClickClearButton }\n\t\t\t\t\ttooltip-text=\"Clear disaggregated links\"\n\t\t\t\t><BiTrash /></div>\n\t\t\t</>\n\t\t);\n\n\treturn (\n\t\t<div id=\"link-disaggregator\">\n\t\t\t<div \n\t\t\t\tclassName=\"background\"\n\t\t\t\tonClick={ handleCloseLinkDisaggregator }\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclassName=\"button\"\n\t\t\t\tonClick={ handleCloseLinkDisaggregator }\n\t\t\t><IoCloseOutline /></div>\n\t\t\t<div className=\"window\">\n\t\t\t\t<LinkDisaggregatorHeader \n\t\t\t\t\theaderList={ headerList } \n\t\t\t\t\theaderOption={ headerOption } \n\t\t\t\t\tlinkDisaggregatorDispatch={ linkDisaggregatorDispatch }\n\t\t\t\t/>\n\t\t\t\t<LinkDisaggregatorContent \n\t\t\t\t\tcontentList={ contentList }\n\t\t\t\t\tlinkDisaggregatorDispatch={ linkDisaggregatorDispatch }\n\t\t\t\t/>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"confirm-button\"\n\t\t\t\t\tonClick={ handleClickConfirmButton }\n\t\t\t\t>OK</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});","import $ from 'jquery';\nimport { memo } from 'react';\nimport { IoInformationCircleOutline } from 'react-icons/io5';\nimport { FaTimes } from \"react-icons/fa\";\nimport './Reference.css';\n\nexport const Reference = memo(({ \n\treferenceIsOpen, \n\tdetailPaneIsOpen,\n\tdispatch\n}) => {\n\tconst handleClickOpenButton = () => \n\t\tdispatch({ type: 'OPEN_REFERENCE' });\n\tconst handleClickCloseButton = () => \n\t\tdispatch({ type: 'CLOSE_REFERENCE' });\n\tconst handleMouseEnterOpenButton = event => \n\t\tdispatch({ \n\t\t\ttype: 'MOUSE_ENTER_CONTROL_BUTTON',\n\t\t\tbuttonEl: $(event.target).closest('.button')[0],\n\t\t\ttext: 'References'\n\t\t});\n\tconst handleMouseLeaveOpenButton = () => \n\t\tdispatch({ type: 'MOUSE_LEAVE_CONTROL_BUTTON' });\n\n\tif (!referenceIsOpen)\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName=\"reference button\"\n\t\t\t\tonClick={ handleClickOpenButton }\n\t\t\t\tonMouseEnter={ handleMouseEnterOpenButton }\n\t\t\t\tonMouseLeave={ handleMouseLeaveOpenButton }\n\t\t\t\tstyle={{ right: !detailPaneIsOpen ? 232 : 482 }}\n\t\t\t><IoInformationCircleOutline /></div>\n\t\t);\n\n\treturn (\n\t\t<div id=\"reference\">\n\t\t\t<div \n\t\t\t\tclassName=\"background\"\n\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t/>\n\t\t\t<div className=\"window\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"close button\" \n\t\t\t\t\tonClick={ handleClickCloseButton }\n\t\t\t\t><FaTimes /></div>\n\t\t\t\t<div className=\"header\">REFERENCES</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"item\">1. Barbieri, Katherine and Omar M. G. Omar Keshk. 2016. Correlates of War Project Trade Data Set Codebook, Version 4.0. Online: http://correlatesofwar.org.</div>\n\t\t\t\t\t<div className=\"item\">2. Barbieri, Katherine, Omar M. G. Keshk, and Brian Pollins. 2009. “TRADING DATA: Evaluating our Assumptions and Coding Rules.” Conflict Management and Peace Science. 26(5): 471-491.</div>\n\t\t\t\t\t<div className=\"item\">3. Kinne, Brandon J. 2020. “The Defense Cooperation Agreement Dataset (DCAD).” Journal of Conflict Resolution 64(4): 729-755.</div>\n\t\t\t\t\t<div className=\"item\">4. Sarkees, Meredith Reid and Frank Wayman (2010). Resort to War: 1816 - 2007. Washington DC: CQ Press.</div>\n\t\t\t\t\t<div className=\"item\">5. Singer, J. David, Stuart Bremer, and John Stuckey. (1972). \"Capability Distribution, Uncertainty, and Major Power War, 1820-1965.\" in Bruce Russett (ed) Peace, War, and Numbers, Beverly Hills: Sage, 19-48.</div>\n\t\t\t\t\t<div className=\"item\">6. Zeev Maoz, Paul L. Johnson, Jasper Kaplan, Fiona Ogunkoya, and Aaron Shreve 2019. The Dyadic Militarized Interstate Disputes (MIDs) Dataset Version 3.0: Logic, Characteristics, and Comparisons to Alternative Datasets, Journal of Conflict Resolution (forthcoming).</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});","import { useDataState } from './useDataState/useDataState';\nimport { useInterfaceState } from './useInterfaceState/useInterfaceState';\nimport { DataSelectionPanes } from './DataSelectionPanes/DataSelectionPanes';\nimport { VisualizationPane } from './VisualizationPane/VisualizationPane';\nimport { DetailPane } from './DetailPane/DetailPane';\nimport { SearchWindow } from './SearchWindow/SearchWindow';\nimport { Loader } from './widgets/Loader/Loader';\nimport { Tooltip } from './widgets/Tooltip/Tooltip';\nimport { PopUpWindow } from './widgets/PopUpWindow/PopUpWindow';\nimport { ColorPicker } from './widgets/ColorPicker/ColorPicker';\nimport { LinkDisaggregator } from './LinkDisaggregator/LinkDisaggregator';\nimport { Reference } from './Reference/Reference';\nimport './App.css';\n\nexport const App = () => {\n\tconst [ dataState ] = useDataState();\n\tconst {\n\t\tlandData,\n\t\tinteriorData,\n\t\tlinkDataList,\n\t\tcountryIDToData,\n\t\ttimeSeriesDataList,\n\t\tisLoading: dataIsLoading\n\t} = dataState;\n\n\tconst [ \n\t\tinterfaceState, \n\t\tdispatch \n\t] = useInterfaceState(dataState);\n\tconst {\n\t\tlinkPane: { list: linkPaneList },\n\t\tsourcePane: { list: sourcePaneList },\n\t\ttargetPane: { list: targetPaneList },\n\t\tvisualizationPane: { list: visualizationPaneList },\n\t\tcolorPicker: colorPickerState,\n\t\ttimelineSlider: timelineSliderState,\n\t\tdetailPane: detailPaneState,\n\t\tsearchWindow: { isOpen: searchWindowIsOpen },\n\t\tlinkDisaggregator: { isOpen: linkDisaggregatorIsOpen },\n\t\treference: { isOpen: referenceIsOpen },\n\t\thover: hoverState,\n\t\tfocus: focusState,\n\t\tisLoading: interfaceIsLoading\n\t} = interfaceState;\n\n\tif (dataIsLoading || interfaceIsLoading)\n\t\treturn <Loader />;\n\n\treturn (\n\t\t<>\n\t\t\t<div id=\"left-column\">\n\t\t\t\t<DataSelectionPanes\n\t\t\t\t\tlinkPaneList={ linkPaneList }\n\t\t\t\t\tsourcePaneList={ sourcePaneList }\n\t\t\t\t\ttargetPaneList={ targetPaneList }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div id=\"right-column\">\n\t\t\t\t<VisualizationPane\n\t\t\t\t\tlandData={ landData }\n\t\t\t\t\tinteriorData={ interiorData }\n\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\tlinkPaneList={ linkPaneList }\n\t\t\t\t\tvisualizationPaneList={ visualizationPaneList }\n\t\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\t\thoverState={ hoverState }\n\t\t\t\t\tdetailPaneIsOpen={ detailPaneState.isOpen }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t\t<DetailPane\n\t\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\t\ttimeSeriesDataList={ timeSeriesDataList }\n\t\t\t\t\tvisualizationPaneList={ visualizationPaneList }\n\t\t\t\t\tdetailPaneState={ detailPaneState }\n\t\t\t\t\tdispatch={ dispatch }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Tooltip\n\t\t\t\thoverState={ hoverState }\n\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t/>\n\t\t\t<PopUpWindow\n\t\t\t\tfocusState={ focusState }\n\t\t\t\ttimelineSliderState={ timelineSliderState }\n\t\t\t\tcountryIDToData={ countryIDToData }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<SearchWindow\n\t\t\t\tdataState={ dataState }\n\t\t\t\tdetailPaneIsOpen={ detailPaneState.isOpen }\n\t\t\t\tsearchWindowIsOpen={ searchWindowIsOpen }\n\t\t\t\tinterfaceDispatch={ dispatch }\n\t\t\t/>\n\t\t\t<ColorPicker\n\t\t\t\tcolorPickerState={ colorPickerState }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t\t<LinkDisaggregator\n\t\t\t\tlinkDataList={ linkDataList }\n\t\t\t\tlinkDisaggregatorIsOpen={ linkDisaggregatorIsOpen }\n\t\t\t\tinterfaceDispatch={ dispatch }\n\t\t\t/>\n\t\t\t<Reference \n\t\t\t\treferenceIsOpen={ referenceIsOpen }\n\t\t\t\tdetailPaneIsOpen={ detailPaneState.isOpen }\n\t\t\t\tdispatch={ dispatch }\n\t\t\t/>\n\t\t</>\n    );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebFont from 'webfontloader';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nWebFont.load({\n\tgoogle: {\n\t\tfamilies: [ 'Quicksand:300,400,600' ]\n\t}\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}